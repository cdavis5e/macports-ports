From 1696b930747ef6a6d29de7cb49ccb3e2fcadd4a3 Mon Sep 17 00:00:00 2001
From: Marek Roszko <mark.roszko@gmail.com>
Date: Wed, 13 Mar 2024 22:49:01 -0400
Subject: [PATCH 01/11] Move JSON_SETTINGS and PARAMS to kicommon

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt                         |  15 +-
 common/database/database_lib_settings.cpp     |   2 +-
 common/io/easyeda/easyeda_parser_structs.cpp  |   2 +-
 .../io/easyedapro/easyedapro_import_utils.cpp |   2 +-
 common/io/easyedapro/easyedapro_parser.cpp    |   2 +-
 common/notifications_manager.cpp              |   2 +-
 common/project/net_settings.cpp               |   1 -
 common/settings/common_settings.cpp           |   2 +-
 common/settings/json_settings.cpp             | 107 ++++---
 common/settings/parameters.cpp                | 266 ++----------------
 include/import_export.h                       |  10 +
 include/json_common.h                         |  35 +++
 include/settings/aui_settings.h               |  32 +--
 include/settings/bom_settings.h               |  30 +-
 include/settings/grid_settings.h              |  10 +-
 include/settings/json_settings.h              |  54 +++-
 include/settings/json_settings_internals.h    |   5 +-
 include/settings/nested_settings.h            |   2 +-
 include/settings/parameters.h                 | 233 +++++++++++++--
 kicad/pcm/pcm.h                               |   1 +
 kicad/pcm/pcm_data.h                          |   2 +-
 .../pcb_io/easyedapro/pcb_io_easyedapro.cpp   |   2 +-
 .../json_schema_validator/CMakeLists.txt      |   3 +
 .../nlohmann/json-schema.hpp                  |   1 +
 24 files changed, 450 insertions(+), 371 deletions(-)
 create mode 100644 include/json_common.h

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 4ba565e0d6..1d0067a6d9 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -96,6 +96,13 @@ set( KICOMMON_SRCS
     kicad_curl/kicad_curl.cpp
     kicad_curl/kicad_curl_easy.cpp
 
+    settings/aui_settings.cpp
+    settings/bom_settings.cpp
+    settings/grid_settings.cpp
+    settings/json_settings.cpp
+    settings/nested_settings.cpp
+    settings/parameters.cpp
+
     widgets/progress_reporter_base.cpp
     widgets/std_bitmap_button.cpp
 
@@ -133,6 +140,8 @@ add_library( kicommon SHARED
     ${KICOMMON_SRCS}
     )
 
+set_target_properties(kicommon PROPERTIES CXX_VISIBILITY_PRESET hidden)
+
 target_link_libraries( kicommon
     core
     kimath
@@ -562,15 +571,9 @@ set( COMMON_SRCS
     tool/zoom_tool.cpp
 
     settings/app_settings.cpp
-    settings/aui_settings.cpp
-    settings/bom_settings.cpp
     settings/color_settings.cpp
     settings/cvpcb_settings.cpp
     settings/common_settings.cpp
-    settings/grid_settings.cpp
-    settings/json_settings.cpp
-    settings/nested_settings.cpp
-    settings/parameters.cpp
     settings/settings_manager.cpp
     settings/kicad_settings.cpp
 
diff --git common/database/database_lib_settings.cpp common/database/database_lib_settings.cpp
index 9617f61d73..66a77e613b 100644
--- common/database/database_lib_settings.cpp
+++ common/database/database_lib_settings.cpp
@@ -22,7 +22,7 @@
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */
 
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 
 #include <database/database_lib_settings.h>
 #include <settings/parameters.h>
diff --git common/io/easyeda/easyeda_parser_structs.cpp common/io/easyeda/easyeda_parser_structs.cpp
index 567aeb67f5..e9f4f349d5 100644
--- common/io/easyeda/easyeda_parser_structs.cpp
+++ common/io/easyeda/easyeda_parser_structs.cpp
@@ -24,7 +24,7 @@
 
 #include "easyeda_parser_structs.h"
 
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 #include <core/json_serializers.h>
 
 
diff --git common/io/easyedapro/easyedapro_import_utils.cpp common/io/easyedapro/easyedapro_import_utils.cpp
index 2a75b83b9b..f2a56d4334 100644
--- common/io/easyedapro/easyedapro_import_utils.cpp
+++ common/io/easyedapro/easyedapro_import_utils.cpp
@@ -29,7 +29,7 @@
 
 #include <ki_exception.h>
 #include <string_utils.h>
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 #include <core/json_serializers.h>
 
 #include <wx/log.h>
diff --git common/io/easyedapro/easyedapro_parser.cpp common/io/easyedapro/easyedapro_parser.cpp
index 18a437fce8..5544ebac23 100644
--- common/io/easyedapro/easyedapro_parser.cpp
+++ common/io/easyedapro/easyedapro_parser.cpp
@@ -26,7 +26,7 @@
 
 #include <memory>
 
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 #include <core/json_serializers.h>
 #include <string_utils.h>
 
diff --git common/notifications_manager.cpp common/notifications_manager.cpp
index 3d4b23b2b2..d7e43887f1 100644
--- common/notifications_manager.cpp
+++ common/notifications_manager.cpp
@@ -36,13 +36,13 @@
 
 #include <notifications_manager.h>
 #include <widgets/kistatusbar.h>
+#include <json_common.h>
 
 #include "core/wx_stl_compat.h"
 
 #include <algorithm>
 #include <fstream>
 #include <map>
-#include <nlohmann/json.hpp>
 #include <core/json_serializers.h>
 #include <optional>
 #include <string>
diff --git common/project/net_settings.cpp common/project/net_settings.cpp
index 613904b139..7aa2657e4d 100644
--- common/project/net_settings.cpp
+++ common/project/net_settings.cpp
@@ -23,7 +23,6 @@
 
 #include <project/net_settings.h>
 #include <settings/parameters.h>
-#include <settings/json_settings_internals.h>
 #include <settings/settings_manager.h>
 #include <string_utils.h>
 #include <base_units.h>
diff --git common/settings/common_settings.cpp common/settings/common_settings.cpp
index 53c0fc438f..4fb2b856ff 100644
--- common/settings/common_settings.cpp
+++ common/settings/common_settings.cpp
@@ -27,7 +27,7 @@
 #include <search_stack.h>
 #include <settings/settings_manager.h>
 #include <settings/common_settings.h>
-#include <settings/json_settings_internals.h>
+#include <settings/json_settings.h>
 #include <settings/parameters.h>
 #include <systemdirsappend.h>
 #include <trace_helpers.h>
diff --git common/settings/json_settings.cpp common/settings/json_settings.cpp
index 3846ab78e5..6f4c8bbcab 100644
--- common/settings/json_settings.cpp
+++ common/settings/json_settings.cpp
@@ -43,8 +43,6 @@
 #include <wx/stdstream.h>
 #include <wx/wfstream.h>
 
-const wxChar* const traceSettings = wxT( "KICAD_SETTINGS" );
-
 
 nlohmann::json::json_pointer JSON_SETTINGS_INTERNALS::PointerFromString( std::string aPath )
 {
@@ -591,23 +589,37 @@ std::optional<ValueType> JSON_SETTINGS::Get( const std::string& aPath ) const
 
 
 // Instantiate all required templates here to allow reducing scope of json.hpp
-template std::optional<bool> JSON_SETTINGS::Get<bool>( const std::string& aPath ) const;
-template std::optional<double> JSON_SETTINGS::Get<double>( const std::string& aPath ) const;
-template std::optional<float> JSON_SETTINGS::Get<float>( const std::string& aPath ) const;
-template std::optional<int> JSON_SETTINGS::Get<int>( const std::string& aPath ) const;
-template std::optional<unsigned int> JSON_SETTINGS::Get<unsigned int>( const std::string& aPath ) const;
-template std::optional<unsigned long long> JSON_SETTINGS::Get<unsigned long long>( const std::string& aPath ) const;
-template std::optional<std::string> JSON_SETTINGS::Get<std::string>( const std::string& aPath ) const;
-template std::optional<nlohmann::json> JSON_SETTINGS::Get<nlohmann::json>( const std::string& aPath ) const;
-template std::optional<KIGFX::COLOR4D> JSON_SETTINGS::Get<KIGFX::COLOR4D>( const std::string& aPath ) const;
-template std::optional<BOM_FIELD>  JSON_SETTINGS::Get<BOM_FIELD>( const std::string& aPath ) const;
-template std::optional<BOM_PRESET> JSON_SETTINGS::Get<BOM_PRESET>( const std::string& aPath ) const;
-template std::optional<BOM_FMT_PRESET> JSON_SETTINGS::Get<BOM_FMT_PRESET>( const std::string& aPath ) const;
-template std::optional<GRID>    JSON_SETTINGS::Get<GRID>( const std::string& aPath ) const;
-template std::optional<wxPoint> JSON_SETTINGS::Get<wxPoint>( const std::string& aPath ) const;
-template std::optional<wxSize> JSON_SETTINGS::Get<wxSize>( const std::string& aPath ) const;
-template std::optional<wxRect> JSON_SETTINGS::Get<wxRect>( const std::string& aPath ) const;
-template std::optional<wxAuiPaneInfo> JSON_SETTINGS::Get<wxAuiPaneInfo>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<bool> JSON_SETTINGS::Get<bool>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<double>
+                      JSON_SETTINGS::Get<double>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<float>
+                      JSON_SETTINGS::Get<float>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<int> JSON_SETTINGS::Get<int>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<unsigned int>
+                      JSON_SETTINGS::Get<unsigned int>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<unsigned long long>
+                      JSON_SETTINGS::Get<unsigned long long>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<std::string>
+                      JSON_SETTINGS::Get<std::string>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<nlohmann::json>
+                      JSON_SETTINGS::Get<nlohmann::json>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<KIGFX::COLOR4D>
+                      JSON_SETTINGS::Get<KIGFX::COLOR4D>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<BOM_FIELD>
+                      JSON_SETTINGS::Get<BOM_FIELD>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<BOM_PRESET>
+                      JSON_SETTINGS::Get<BOM_PRESET>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<BOM_FMT_PRESET>
+                      JSON_SETTINGS::Get<BOM_FMT_PRESET>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<GRID> JSON_SETTINGS::Get<GRID>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<wxPoint>
+                      JSON_SETTINGS::Get<wxPoint>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<wxSize>
+                      JSON_SETTINGS::Get<wxSize>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<wxRect>
+                      JSON_SETTINGS::Get<wxRect>( const std::string& aPath ) const;
+template KICOMMON_API std::optional<wxAuiPaneInfo>
+                      JSON_SETTINGS::Get<wxAuiPaneInfo>( const std::string& aPath ) const;
 
 template<typename ValueType>
 void JSON_SETTINGS::Set( const std::string& aPath, ValueType aVal )
@@ -617,24 +629,34 @@ void JSON_SETTINGS::Set( const std::string& aPath, ValueType aVal )
 
 
 // Instantiate all required templates here to allow reducing scope of json.hpp
-template void JSON_SETTINGS::Set<bool>( const std::string& aPath, bool aValue );
-template void JSON_SETTINGS::Set<double>( const std::string& aPath, double aValue );
-template void JSON_SETTINGS::Set<float>( const std::string& aPath, float aValue );
-template void JSON_SETTINGS::Set<int>( const std::string& aPath, int aValue );
-template void JSON_SETTINGS::Set<unsigned int>( const std::string& aPath, unsigned int aValue );
-template void JSON_SETTINGS::Set<unsigned long long>( const std::string& aPath, unsigned long long aValue );
-template void JSON_SETTINGS::Set<const char*>( const std::string& aPath, const char* aValue );
-template void JSON_SETTINGS::Set<std::string>( const std::string& aPath, std::string aValue );
-template void JSON_SETTINGS::Set<nlohmann::json>( const std::string& aPath, nlohmann::json aValue );
-template void JSON_SETTINGS::Set<KIGFX::COLOR4D>( const std::string& aPath, KIGFX::COLOR4D aValue );
-template void JSON_SETTINGS::Set<BOM_FIELD>( const std::string& aPath, BOM_FIELD aValue );
-template void JSON_SETTINGS::Set<BOM_PRESET>( const std::string& aPath, BOM_PRESET aValue );
-template void JSON_SETTINGS::Set<BOM_FMT_PRESET>( const std::string& aPath, BOM_FMT_PRESET aValue );
-template void JSON_SETTINGS::Set<GRID>( const std::string& aPath, GRID aValue );
-template void JSON_SETTINGS::Set<wxPoint>( const std::string& aPath, wxPoint aValue );
-template void JSON_SETTINGS::Set<wxSize>( const std::string& aPath, wxSize aValue );
-template void JSON_SETTINGS::Set<wxRect>( const std::string& aPath, wxRect aValue );
-template void JSON_SETTINGS::Set<wxAuiPaneInfo>( const std::string& aPath, wxAuiPaneInfo aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<bool>( const std::string& aPath, bool aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<double>( const std::string& aPath, double aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<float>( const std::string& aPath, float aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<int>( const std::string& aPath, int aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<unsigned int>( const std::string& aPath,
+                                                             unsigned int       aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<unsigned long long>( const std::string& aPath,
+                                                                   unsigned long long aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<const char*>( const std::string& aPath,
+                                                            const char*        aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<std::string>( const std::string& aPath,
+                                                            std::string        aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<nlohmann::json>( const std::string& aPath,
+                                                               nlohmann::json     aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<KIGFX::COLOR4D>( const std::string& aPath,
+                                                               KIGFX::COLOR4D     aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<BOM_FIELD>( const std::string& aPath,
+                                                          BOM_FIELD          aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<BOM_PRESET>( const std::string& aPath,
+                                                           BOM_PRESET         aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<BOM_FMT_PRESET>( const std::string& aPath,
+                                                               BOM_FMT_PRESET     aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<GRID>( const std::string& aPath, GRID aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<wxPoint>( const std::string& aPath, wxPoint aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<wxSize>( const std::string& aPath, wxSize aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<wxRect>( const std::string& aPath, wxRect aValue );
+template KICOMMON_API void JSON_SETTINGS::Set<wxAuiPaneInfo>( const std::string& aPath,
+                                                              wxAuiPaneInfo      aValue );
 
 
 void JSON_SETTINGS::registerMigration( int aOldSchemaVersion, int aNewSchemaVersion,
@@ -775,13 +797,13 @@ bool JSON_SETTINGS::fromLegacy( wxConfigBase* aConfig, const std::string& aKey,
 
 // Explicitly declare these because we only support a few types anyway, and it means we can keep
 // wxConfig detail out of the header file
-template bool JSON_SETTINGS::fromLegacy<int>( wxConfigBase*, const std::string&,
+template KICOMMON_API bool JSON_SETTINGS::fromLegacy<int>( wxConfigBase*, const std::string&,
                                               const std::string& );
 
-template bool JSON_SETTINGS::fromLegacy<double>( wxConfigBase*, const std::string&,
+template KICOMMON_API bool JSON_SETTINGS::fromLegacy<double>( wxConfigBase*, const std::string&,
                                                  const std::string& );
 
-template bool JSON_SETTINGS::fromLegacy<bool>( wxConfigBase*, const std::string&,
+template KICOMMON_API bool JSON_SETTINGS::fromLegacy<bool>( wxConfigBase*, const std::string&,
                                                const std::string& );
 
 
@@ -914,9 +936,10 @@ ResultType JSON_SETTINGS::fetchOrDefault( const nlohmann::json& aJson, const std
 }
 
 
-template std::string JSON_SETTINGS::fetchOrDefault( const nlohmann::json& aJson,
+template KICOMMON_API std::string JSON_SETTINGS::fetchOrDefault( const nlohmann::json& aJson,
                                                     const std::string& aKey, std::string aDefault );
 
 
-template bool JSON_SETTINGS::fetchOrDefault( const nlohmann::json& aJson, const std::string& aKey,
+template KICOMMON_API bool JSON_SETTINGS::fetchOrDefault( const nlohmann::json& aJson,
+                                                         const std::string& aKey,
                                              bool aDefault );
diff --git common/settings/parameters.cpp common/settings/parameters.cpp
index 87ab25dd5f..0f6cb67172 100644
--- common/settings/parameters.cpp
+++ common/settings/parameters.cpp
@@ -22,191 +22,8 @@
 
 #include <nlohmann/json.hpp>
 
-#include <gal/color4d.h>
 #include <project/project_file.h>
 #include <settings/parameters.h>
-#include <settings/bom_settings.h>
-#include <settings/grid_settings.h>
-
-template <typename ValueType>
-void PARAM_LAMBDA<ValueType>::Load( JSON_SETTINGS* aSettings, bool aResetIfMissing ) const
-{
-    if( m_readOnly )
-        return;
-
-    if( std::is_same<ValueType, nlohmann::json>::value )
-    {
-        if( std::optional<nlohmann::json> optval = aSettings->GetJson( m_path ) )
-            m_setter( *optval );
-        else
-            m_setter( m_default );
-    }
-    else
-    {
-        if( std::optional<ValueType> optval = aSettings->Get<ValueType>( m_path ) )
-            m_setter( *optval );
-        else
-            m_setter( m_default );
-    }
-}
-
-
-template <typename ValueType>
-bool PARAM_LAMBDA<ValueType>::MatchesFile( JSON_SETTINGS* aSettings ) const
-{
-    if( std::is_same<ValueType, nlohmann::json>::value )
-    {
-        if( std::optional<nlohmann::json> optval = aSettings->GetJson( m_path ) )
-            return *optval == m_getter();
-    }
-    else
-    {
-        if( std::optional<ValueType> optval = aSettings->Get<ValueType>( m_path ) )
-            return *optval == m_getter();
-    }
-
-    // Not in file
-    return false;
-}
-
-
-// Instantiate all required templates here to allow reducing scope of json.hpp
-template class PARAM_LAMBDA<bool>;
-template class PARAM_LAMBDA<int>;
-template class PARAM_LAMBDA<nlohmann::json>;
-template class PARAM_LAMBDA<std::string>;
-
-template <typename ValueType>
-void PARAM_LIST<ValueType>::Load( JSON_SETTINGS* aSettings, bool aResetIfMissing ) const
-{
-    if( m_readOnly )
-        return;
-
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        std::vector<ValueType> val;
-
-        if( js->is_array() )
-        {
-            for( const auto& el : js->items() )
-                val.push_back( el.value().get<ValueType>() );
-        }
-
-        *m_ptr = val;
-    }
-    else if( aResetIfMissing )
-        *m_ptr = m_default;
-}
-
-
-template <typename ValueType>
-void PARAM_LIST<ValueType>::Store( JSON_SETTINGS* aSettings ) const
-{
-    nlohmann::json js = nlohmann::json::array();
-
-    for( const auto& el : *m_ptr )
-        js.push_back( el );
-
-    aSettings->Set<nlohmann::json>( m_path, js );
-}
-
-
-template <typename ValueType>
-bool PARAM_LIST<ValueType>::MatchesFile( JSON_SETTINGS* aSettings ) const
-{
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        if( js->is_array() )
-        {
-            std::vector<ValueType> val;
-
-            for( const auto& el : js->items() )
-            {
-                try
-                {
-                    val.emplace_back( el.value().get<ValueType>() );
-                }
-                catch( ... )
-                {
-                    // Probably typecast didn't work; skip this element
-                }
-            }
-
-            return val == *m_ptr;
-        }
-    }
-
-    return false;
-}
-
-
-template class PARAM_LIST<int>;
-template class PARAM_LIST<double>;
-template class PARAM_LIST<wxString>;
-template class PARAM_LIST<KIGFX::COLOR4D>;
-template class PARAM_LIST<FILE_INFO_PAIR>;
-template class PARAM_LIST<BOM_PRESET>;
-template class PARAM_LIST<BOM_FMT_PRESET>;
-template class PARAM_LIST<GRID>;
-
-
-template <typename ValueType>
-void PARAM_SET<ValueType>::Load( JSON_SETTINGS* aSettings, bool aResetIfMissing ) const
-{
-    if( m_readOnly )
-        return;
-
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        std::set<ValueType> val;
-
-        if( js->is_array() )
-        {
-            for( const auto& el : js->items() )
-                val.insert( el.value().get<ValueType>() );
-        }
-
-        *m_ptr = val;
-    }
-    else if( aResetIfMissing )
-        *m_ptr = m_default;
-}
-
-
-template <typename ValueType>
-void PARAM_SET<ValueType>::Store( JSON_SETTINGS* aSettings ) const
-{
-    nlohmann::json js = nlohmann::json::array();
-
-    for( const auto& el : *m_ptr )
-        js.push_back( el );
-
-    aSettings->Set<nlohmann::json>( m_path, js );
-}
-
-
-template <typename ValueType>
-bool PARAM_SET<ValueType>::MatchesFile( JSON_SETTINGS* aSettings ) const
-{
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        if( js->is_array() )
-        {
-            std::set<ValueType> val;
-
-            for( const auto& el : js->items() )
-                val.insert( el.value().get<ValueType>() );
-
-            return val == *m_ptr;
-        }
-    }
-
-    return false;
-}
-
-
-template class PARAM_SET<wxString>;
-
 
 void PARAM_PATH_LIST::Store( JSON_SETTINGS* aSettings ) const
 {
@@ -238,66 +55,6 @@ bool PARAM_PATH_LIST::MatchesFile( JSON_SETTINGS* aSettings ) const
 }
 
 
-template <typename Value>
-void PARAM_MAP<Value>::Load( JSON_SETTINGS* aSettings, bool aResetIfMissing ) const
-{
-    if( m_readOnly )
-        return;
-
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        if( js->is_object() )
-        {
-            m_ptr->clear();
-
-            for( const auto& el : js->items() )
-                ( *m_ptr )[el.key()] = el.value().get<Value>();
-        }
-    }
-    else if( aResetIfMissing )
-        *m_ptr = m_default;
-}
-
-
-template <typename Value>
-void PARAM_MAP<Value>::Store( JSON_SETTINGS* aSettings ) const
-{
-    nlohmann::json js( {} );
-
-    for( const auto& el : *m_ptr )
-        js[el.first] = el.second;
-
-    aSettings->Set<nlohmann::json>( m_path, js );
-}
-
-
-template <typename Value>
-bool PARAM_MAP<Value>::MatchesFile( JSON_SETTINGS* aSettings ) const
-{
-    if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
-    {
-        if( js->is_object() )
-        {
-            if( m_ptr->size() != js->size() )
-                return false;
-
-            std::map<std::string, Value> val;
-
-            for( const auto& el : js->items() )
-                val[el.key()] = el.value().get<Value>();
-
-            return val == *m_ptr;
-        }
-    }
-
-    return false;
-}
-
-
-template class PARAM_MAP<int>;
-template class PARAM_MAP<double>;
-template class PARAM_MAP<bool>;
-
 
 void PARAM_WXSTRING_MAP::Load( JSON_SETTINGS* aSettings, bool aResetIfMissing ) const
 {
@@ -358,3 +115,26 @@ bool PARAM_WXSTRING_MAP::MatchesFile( JSON_SETTINGS* aSettings ) const
 
     return false;
 }
+
+
+// Instantiate all required templates here and export
+template class KICOMMON_API PARAM_LAMBDA<bool>;
+template class KICOMMON_API PARAM_LAMBDA<int>;
+template class KICOMMON_API PARAM_LAMBDA<nlohmann::json>;
+template class KICOMMON_API PARAM_LAMBDA<std::string>;
+
+template class KICOMMON_API PARAM_LIST<bool>;
+template class KICOMMON_API PARAM_LIST<int>;
+template class KICOMMON_API PARAM_LIST<double>;
+template class KICOMMON_API PARAM_LIST<wxString>;
+template class KICOMMON_API PARAM_LIST<KIGFX::COLOR4D>;
+//template KICOMMON_API class PARAM_LIST<FILE_INFO_PAIR>;
+template class KICOMMON_API PARAM_LIST<struct BOM_PRESET>;
+template class KICOMMON_API PARAM_LIST<struct BOM_FMT_PRESET>;
+template class KICOMMON_API PARAM_LIST<GRID>;
+
+template class KICOMMON_API PARAM_SET<wxString>;
+
+template class KICOMMON_API PARAM_MAP<int>;
+template class KICOMMON_API PARAM_MAP<double>;
+template class KICOMMON_API PARAM_MAP<bool>;
diff --git include/import_export.h include/import_export.h
index fd302037c9..d415814a45 100644
--- include/import_export.h
+++ include/import_export.h
@@ -44,6 +44,16 @@
 	#define APILOCAL
 #endif
 
+// We use APIVISIBLE to mark extern template declarations where we cannot use APIEXPORT
+// Because MSVC disallows mixing dllexport and extern templates, we can't just use APIEXPORT
+// However MSVC is fine with the dllexport in the cpp file and extern in the header
+// But we need the visibility declared on both instantiation and extern for GCC/Clang to make
+// the symbol visible
+#if defined( __GNUC__ ) || defined( __clang__ )
+	#define APIVISIBLE __attribute__ ((visibility("default")))
+#else
+	#define APIVISIBLE
+#endif
 
 #if defined(COMPILING_DLL)
 	#define KIFACE_API    APIEXPORT
diff --git include/json_common.h include/json_common.h
new file mode 100644
index 0000000000..71598dbcc2
--- /dev/null
+++ include/json_common.h
@@ -0,0 +1,35 @@
+/*
+ * This program source code file is part of KiCad, a free EDA CAD application.
+ *
+ * Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
+ *
+ * This program is free software: you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation, either version 3 of the License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef JSON_COMMON_H
+#define JSON_COMMON_H
+
+#include <nlohmann/json.hpp>
+
+#include <kicommon.h>
+
+/**
+ * This is simply a "stub" meant to inform MSVC when compiling shared libraries that it can find
+ * template instances in kicommon of nlohmann::json's various templates
+ */
+class KICOMMON_API JSON_COMMON_EXPORT_STUB final : public nlohmann::json
+{
+};
+
+#endif
\ No newline at end of file
diff --git include/settings/aui_settings.h include/settings/aui_settings.h
index f4bb8cc056..1f1b191a67 100644
--- include/settings/aui_settings.h
+++ include/settings/aui_settings.h
@@ -30,21 +30,21 @@ class wxPoint;
 class wxRect;
 class wxSize;
 
-extern void to_json( nlohmann::json& aJson, const wxPoint& aPoint );
-extern void from_json( const nlohmann::json& aJson, wxPoint& aPoint );
-extern bool operator<( const wxPoint& aLhs, const wxPoint& aRhs );
-
-extern void to_json( nlohmann::json& aJson, const wxSize& aPoint );
-extern void from_json( const nlohmann::json& aJson, wxSize& aPoint );
-extern bool operator<( const wxSize& aLhs, const wxSize& aRhs );
-
-extern void to_json( nlohmann::json& aJson, const wxRect& aRect );
-extern void from_json( const nlohmann::json& aJson, wxRect& aRect );
-extern bool operator<( const wxRect& aLhs, const wxRect& aRhs );
-
-extern void to_json( nlohmann::json& aJson, const wxAuiPaneInfo& aPaneInfo );
-extern void from_json( const nlohmann::json& aJson, wxAuiPaneInfo& aPaneInfo );
-extern bool operator<( const wxAuiPaneInfo& aLhs, const wxAuiPaneInfo& aRhs );
-extern bool operator==( const wxAuiPaneInfo& aLhs, const wxAuiPaneInfo& aRhs );
+KICOMMON_API void to_json( nlohmann::json& aJson, const wxPoint& aPoint );
+KICOMMON_API void from_json( const nlohmann::json& aJson, wxPoint& aPoint );
+KICOMMON_API bool operator<( const wxPoint& aLhs, const wxPoint& aRhs );
+
+KICOMMON_API void to_json( nlohmann::json& aJson, const wxSize& aPoint );
+KICOMMON_API void from_json( const nlohmann::json& aJson, wxSize& aPoint );
+KICOMMON_API bool operator<( const wxSize& aLhs, const wxSize& aRhs );
+
+KICOMMON_API void to_json( nlohmann::json& aJson, const wxRect& aRect );
+KICOMMON_API void from_json( const nlohmann::json& aJson, wxRect& aRect );
+KICOMMON_API bool operator<( const wxRect& aLhs, const wxRect& aRhs );
+
+KICOMMON_API void to_json( nlohmann::json& aJson, const wxAuiPaneInfo& aPaneInfo );
+KICOMMON_API void from_json( const nlohmann::json& aJson, wxAuiPaneInfo& aPaneInfo );
+KICOMMON_API bool operator<( const wxAuiPaneInfo& aLhs, const wxAuiPaneInfo& aRhs );
+KICOMMON_API bool operator==( const wxAuiPaneInfo& aLhs, const wxAuiPaneInfo& aRhs );
 
 #endif // _AUI_SETTINGS_H_
diff --git include/settings/bom_settings.h include/settings/bom_settings.h
index 85ea4a245b..57c9313d44 100644
--- include/settings/bom_settings.h
+++ include/settings/bom_settings.h
@@ -27,7 +27,7 @@
 #include <i18n_utility.h>
 
 // A single field within a BOM, e.g. Reference, Value, Footprint
-struct BOM_FIELD
+struct KICOMMON_API BOM_FIELD
 {
     wxString name;
     wxString label;
@@ -37,16 +37,16 @@ struct BOM_FIELD
     bool operator==( const BOM_FIELD& rhs ) const;
 };
 
-bool operator!=( const BOM_FIELD& lhs, const BOM_FIELD& rhs );
-bool operator<( const BOM_FIELD& lhs, const BOM_FIELD& rhs );
+KICOMMON_API bool operator!=( const BOM_FIELD& lhs, const BOM_FIELD& rhs );
+KICOMMON_API bool  operator<( const BOM_FIELD& lhs, const BOM_FIELD& rhs );
 
-void to_json( nlohmann::json& j, const BOM_FIELD& f );
-void from_json( const nlohmann::json& j, BOM_FIELD& f );
+KICOMMON_API void to_json( nlohmann::json& j, const BOM_FIELD& f );
+KICOMMON_API void  from_json( const nlohmann::json& j, BOM_FIELD& f );
 
 
 // A complete preset defining a BOM "View" with a list of all the fields to show,
 // group by, order, filtering settings, etc.
-struct BOM_PRESET
+struct KICOMMON_API BOM_PRESET
 {
     wxString               name;
     bool                   readOnly = false;
@@ -66,15 +66,15 @@ struct BOM_PRESET
     static std::vector<BOM_PRESET> BuiltInPresets();
 };
 
-bool operator!=( const BOM_PRESET& lhs, const BOM_PRESET& rhs );
-bool operator<( const BOM_PRESET& lhs, const BOM_PRESET& rhs );
+KICOMMON_API bool operator!=( const BOM_PRESET& lhs, const BOM_PRESET& rhs );
+KICOMMON_API bool  operator<( const BOM_PRESET& lhs, const BOM_PRESET& rhs );
 
-void to_json( nlohmann::json& j, const BOM_PRESET& f );
-void from_json( const nlohmann::json& j, BOM_PRESET& f );
+KICOMMON_API void to_json( nlohmann::json& j, const BOM_PRESET& f );
+KICOMMON_API void  from_json( const nlohmann::json& j, BOM_PRESET& f );
 
 
 // A formatting preset, like CSV (Comma Separated Values)
-struct BOM_FMT_PRESET
+struct KICOMMON_API BOM_FMT_PRESET
 {
     wxString name;
     bool     readOnly = false;
@@ -94,11 +94,11 @@ struct BOM_FMT_PRESET
     static std::vector<BOM_FMT_PRESET> BuiltInPresets();
 };
 
-bool operator!=( const BOM_FMT_PRESET& lhs, const BOM_FMT_PRESET& rhs );
-bool operator<( const BOM_FMT_PRESET& lhs, const BOM_FMT_PRESET& rhs );
+KICOMMON_API bool operator!=( const BOM_FMT_PRESET& lhs, const BOM_FMT_PRESET& rhs );
+KICOMMON_API bool  operator<( const BOM_FMT_PRESET& lhs, const BOM_FMT_PRESET& rhs );
 
-void to_json( nlohmann::json& j, const BOM_FMT_PRESET& f );
-void from_json( const nlohmann::json& j, BOM_FMT_PRESET& f );
+KICOMMON_API void to_json( nlohmann::json& j, const BOM_FMT_PRESET& f );
+KICOMMON_API void  from_json( const nlohmann::json& j, BOM_FMT_PRESET& f );
 
 
 #endif
diff --git include/settings/grid_settings.h include/settings/grid_settings.h
index 50f43fc8d2..558e6f0784 100644
--- include/settings/grid_settings.h
+++ include/settings/grid_settings.h
@@ -30,7 +30,7 @@ class UNITS_PROVIDER;
 /**
  * Common grid settings, available to every frame
  */
-struct GRID
+struct KICOMMON_API GRID
 {
     bool operator==( const GRID& aOther ) const;
 
@@ -53,11 +53,11 @@ struct GRID
     wxString y;
 };
 
-bool operator!=( const GRID& lhs, const GRID& rhs );
-bool operator<( const GRID& lhs, const GRID& rhs );
+KICOMMON_API bool operator!=( const GRID& lhs, const GRID& rhs );
+KICOMMON_API bool  operator<( const GRID& lhs, const GRID& rhs );
 
-void to_json( nlohmann::json& j, const GRID& g );
-void from_json( const nlohmann::json& j, GRID& g );
+KICOMMON_API void to_json( nlohmann::json& j, const GRID& g );
+KICOMMON_API void  from_json( const nlohmann::json& j, GRID& g );
 
 
 struct GRID_SETTINGS
diff --git include/settings/json_settings.h include/settings/json_settings.h
index 2434a52daa..2bf0075681 100644
--- include/settings/json_settings.h
+++ include/settings/json_settings.h
@@ -28,21 +28,27 @@
 
 #include <functional>
 #include <optional>
-#include <nlohmann/json_fwd.hpp>
+#include <settings/json_settings_internals.h>
+
+#include <kicommon.h>
 
 class wxConfigBase;
 class NESTED_SETTINGS;
 class PARAM_BASE;
 class SETTINGS_MANAGER;
 
-/**
- * Flag to enable debug output of settings operations and management.
- *
- * Use "KICAD_SETTINGS" to enable.
- *
- * @ingroup trace_env_vars
- */
-extern const wxChar* const traceSettings;
+class wxAuiPaneInfo;
+struct BOM_FIELD;
+struct BOM_PRESET;
+struct BOM_FMT_PRESET;
+struct GRID;
+
+namespace KIGFX
+{
+class COLOR4D;
+};
+
+#define traceSettings wxT( "KICAD_SETTINGS" )
 
 enum class SETTINGS_LOC {
     USER,       ///< The main config directory (e.g. ~/.config/kicad/)
@@ -56,7 +62,7 @@ enum class SETTINGS_LOC {
 /// pimpl to allow hiding json.hpp
 class JSON_SETTINGS_INTERNALS;
 
-class JSON_SETTINGS
+class KICOMMON_API JSON_SETTINGS
 {
 public:
     friend class NESTED_SETTINGS;
@@ -340,14 +346,32 @@ protected:
 
 // Specializations to allow conversion between wxString and std::string via JSON_SETTINGS API
 
-template<> std::optional<wxString> JSON_SETTINGS::Get( const std::string& aPath ) const;
+template<> KICOMMON_API std::optional<wxString> JSON_SETTINGS::Get( const std::string& aPath ) const;
 
-template<> void JSON_SETTINGS::Set<wxString>( const std::string& aPath, wxString aVal );
+template<> KICOMMON_API void JSON_SETTINGS::Set<wxString>( const std::string& aPath, wxString aVal );
 
 // Specializations to allow directly reading/writing wxStrings from JSON
 
-void to_json( nlohmann::json& aJson, const wxString& aString );
-
-void from_json( const nlohmann::json& aJson, wxString& aString );
+KICOMMON_API void to_json( nlohmann::json& aJson, const wxString& aString );
+
+KICOMMON_API void from_json( const nlohmann::json& aJson, wxString& aString );
+
+extern template std::optional<bool>   JSON_SETTINGS::Get<bool>( const std::string& aPath ) const;
+extern template std::optional<double> JSON_SETTINGS::Get<double>( const std::string& aPath ) const;
+extern template std::optional<float>  JSON_SETTINGS::Get<float>( const std::string& aPath ) const;
+extern template std::optional<int>    JSON_SETTINGS::Get<int>( const std::string& aPath ) const;
+extern template std::optional<unsigned int> JSON_SETTINGS::Get<unsigned int>( const std::string& aPath ) const;
+extern template std::optional<unsigned long long> JSON_SETTINGS::Get<unsigned long long>( const std::string& aPath ) const;
+extern template std::optional<std::string> JSON_SETTINGS::Get<std::string>( const std::string& aPath ) const;
+extern template std::optional<nlohmann::json> JSON_SETTINGS::Get<nlohmann::json>( const std::string& aPath ) const;
+extern template std::optional<KIGFX::COLOR4D> JSON_SETTINGS::Get<KIGFX::COLOR4D>( const std::string& aPath ) const;
+extern template std::optional<BOM_FIELD> JSON_SETTINGS::Get<BOM_FIELD>( const std::string& aPath ) const;
+extern template std::optional<BOM_PRESET> JSON_SETTINGS::Get<BOM_PRESET>( const std::string& aPath ) const;
+extern template std::optional<BOM_FMT_PRESET> JSON_SETTINGS::Get<BOM_FMT_PRESET>( const std::string& aPath ) const;
+extern template std::optional<GRID> JSON_SETTINGS::Get<GRID>( const std::string& aPath ) const;
+extern template std::optional<wxPoint> JSON_SETTINGS::Get<wxPoint>( const std::string& aPath ) const;
+extern template std::optional<wxSize> JSON_SETTINGS::Get<wxSize>( const std::string& aPath ) const;
+extern template std::optional<wxRect> JSON_SETTINGS::Get<wxRect>( const std::string& aPath ) const;
+extern template std::optional<wxAuiPaneInfo> JSON_SETTINGS::Get<wxAuiPaneInfo>( const std::string& aPath ) const;
 
 #endif
diff --git include/settings/json_settings_internals.h include/settings/json_settings_internals.h
index 0f7d4da4b0..486a77f119 100644
--- include/settings/json_settings_internals.h
+++ include/settings/json_settings_internals.h
@@ -21,10 +21,9 @@
 #ifndef KICAD_JSON_SETTINGS_INTERNALS_H
 #define KICAD_JSON_SETTINGS_INTERNALS_H
 
-// This is a pretty heavy file.  Try to use json_fwd.hpp most places.
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 
-class JSON_SETTINGS_INTERNALS : public nlohmann::json
+class KICOMMON_API JSON_SETTINGS_INTERNALS : public nlohmann::json
 {
     friend class JSON_SETTINGS;
 
diff --git include/settings/nested_settings.h include/settings/nested_settings.h
index 61e2734107..6ad048cd17 100644
--- include/settings/nested_settings.h
+++ include/settings/nested_settings.h
@@ -28,7 +28,7 @@
  * NESTED_SETTINGS is a JSON_SETTINGS that lives inside a JSON_SETTINGS.
  * Instead of being backed by a JSON file on disk, it loads and stores to its parent.
  */
-class NESTED_SETTINGS : public JSON_SETTINGS
+class KICOMMON_API NESTED_SETTINGS : public JSON_SETTINGS
 {
 public:
     NESTED_SETTINGS( const std::string& aName, int aSchemaVersion, JSON_SETTINGS* aParent,
diff --git include/settings/parameters.h include/settings/parameters.h
index 0e1583fd51..dc6308758b 100644
--- include/settings/parameters.h
+++ include/settings/parameters.h
@@ -27,10 +27,13 @@
 #include <math/util.h>
 
 #include <optional>
+#include <gal/color4d.h>
 #include <settings/json_settings.h>
+#include <settings/bom_settings.h>
+#include <settings/grid_settings.h>
+#include <kicommon.h>
 
-
-class PARAM_BASE
+class KICOMMON_API PARAM_BASE
 {
 public:
     PARAM_BASE( std::string aJsonPath, bool aReadOnly ) :
@@ -167,7 +170,7 @@ protected:
 /**
  * Stores a path as a string with directory separators normalized to unix-style
  */
-class PARAM_PATH : public PARAM<wxString>
+class KICOMMON_API PARAM_PATH : public PARAM<wxString>
 {
 public:
     PARAM_PATH( const std::string& aJsonPath, wxString* aPtr, const wxString& aDefault,
@@ -299,7 +302,26 @@ public:
             m_setter( std::move( aSetter ) )
     { }
 
-    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override;
+    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override
+    {
+        if( m_readOnly )
+            return;
+
+        if( std::is_same<ValueType, nlohmann::json>::value )
+        {
+            if( std::optional<nlohmann::json> optval = aSettings->GetJson( m_path ) )
+                m_setter( *optval );
+            else
+                m_setter( m_default );
+        }
+        else
+        {
+            if( std::optional<ValueType> optval = aSettings->Get<ValueType>( m_path ) )
+                m_setter( *optval );
+            else
+                m_setter( m_default );
+        }
+    }
 
     void Store( JSON_SETTINGS* aSettings ) const override
     {
@@ -322,7 +344,22 @@ public:
         m_setter( m_default );
     }
 
-    bool MatchesFile( JSON_SETTINGS* aSettings ) const override;
+    bool MatchesFile( JSON_SETTINGS* aSettings ) const override
+    {
+        if( std::is_same<ValueType, nlohmann::json>::value )
+        {
+            if( std::optional<nlohmann::json> optval = aSettings->GetJson( m_path ) )
+                return *optval == m_getter();
+        }
+        else
+        {
+            if( std::optional<ValueType> optval = aSettings->Get<ValueType>( m_path ) )
+                return *optval == m_getter();
+        }
+
+        // Not in file
+        return false;
+    }
 
 private:
     ValueType                        m_default;
@@ -331,6 +368,11 @@ private:
 };
 
 
+extern template class APIVISIBLE PARAM_LAMBDA<bool>;
+extern template class APIVISIBLE PARAM_LAMBDA<int>;
+extern template class APIVISIBLE PARAM_LAMBDA<nlohmann::json>;
+extern template class APIVISIBLE PARAM_LAMBDA<std::string>;
+
 /**
  * Represents a parameter that has a scaling factor between the value in the file and the
  * value used internally (i.e. the value pointer).  This basically only makes sense to use
@@ -439,22 +481,86 @@ public:
             m_default( std::move( aDefault ) )
     { }
 
-    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override;
+    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override
+    {
+        if( m_readOnly )
+            return;
 
-    void Store( JSON_SETTINGS* aSettings) const override;
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            std::vector<Type> val;
+
+            if( js->is_array() )
+            {
+                for( const auto& el : js->items() )
+                    val.push_back( el.value().get<Type>() );
+            }
+
+            *m_ptr = val;
+        }
+        else if( aResetIfMissing )
+            *m_ptr = m_default;
+    }
+
+    void Store( JSON_SETTINGS* aSettings ) const override
+    {
+        nlohmann::json js = nlohmann::json::array();
+
+        for( const auto& el : *m_ptr )
+            js.push_back( el );
+
+        aSettings->Set<nlohmann::json>( m_path, js );
+    }
 
     void SetDefault() override
     {
         *m_ptr = m_default;
     }
 
-    bool MatchesFile( JSON_SETTINGS* aSettings ) const override;
+    bool MatchesFile( JSON_SETTINGS* aSettings ) const override
+    {
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            if( js->is_array() )
+            {
+                std::vector<Type> val;
+
+                for( const auto& el : js->items() )
+                {
+                    try
+                    {
+                        val.emplace_back( el.value().get<Type>() );
+                    }
+                    catch( ... )
+                    {
+                        // Probably typecast didn't work; skip this element
+                    }
+                }
+
+                return val == *m_ptr;
+            }
+        }
+
+        return false;
+    }
 
 protected:
     std::vector<Type>* m_ptr;
     std::vector<Type>  m_default;
 };
 
+
+extern template class APIVISIBLE PARAM_LIST<bool>;
+extern template class APIVISIBLE PARAM_LIST<int>;
+extern template class APIVISIBLE PARAM_LIST<double>;
+extern template class APIVISIBLE PARAM_LIST<KIGFX::COLOR4D>;
+//template KICOMMON_EXTERN_DECL class PARAM_LIST<FILE_INFO_PAIR>;
+extern template class APIVISIBLE PARAM_LIST<struct BOM_PRESET>;
+extern template class APIVISIBLE PARAM_LIST<struct BOM_FMT_PRESET>;
+extern template class APIVISIBLE PARAM_LIST<GRID>;
+extern template class APIVISIBLE PARAM_LIST<wxString>;
+
+
 template<typename Type>
 class PARAM_SET : public PARAM_BASE
 {
@@ -473,27 +579,73 @@ public:
             m_default( aDefault )
     { }
 
-    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override;
+    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override
+    {
+        if( m_readOnly )
+            return;
+
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            std::set<Type> val;
+
+            if( js->is_array() )
+            {
+                for( const auto& el : js->items() )
+                    val.insert( el.value().get<Type>() );
+            }
+
+            *m_ptr = val;
+        }
+        else if( aResetIfMissing )
+            *m_ptr = m_default;
+    }
+
+    void Store( JSON_SETTINGS* aSettings) const override
+    {
+        nlohmann::json js = nlohmann::json::array();
+
+        for( const auto& el : *m_ptr )
+            js.push_back( el );
+
+        aSettings->Set<nlohmann::json>( m_path, js );
+    }
 
-    void Store( JSON_SETTINGS* aSettings) const override;
 
     void SetDefault() override
     {
         *m_ptr = m_default;
     }
 
-    bool MatchesFile( JSON_SETTINGS* aSettings ) const override;
+    bool MatchesFile( JSON_SETTINGS* aSettings ) const override
+    {
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            if( js->is_array() )
+            {
+                std::set<Type> val;
+
+                for( const auto& el : js->items() )
+                    val.insert( el.value().get<Type>() );
+
+                return val == *m_ptr;
+            }
+        }
+
+        return false;
+    }
 
 protected:
     std::set<Type>* m_ptr;
     std::set<Type>  m_default;
 };
 
+extern template class APIVISIBLE PARAM_SET<wxString>;
+
 /**
  * Represents a list of strings holding directory paths.
  * Normalizes paths to unix directory separator style in the file.
  */
-class PARAM_PATH_LIST : public PARAM_LIST<wxString>
+class KICOMMON_API PARAM_PATH_LIST : public PARAM_LIST<wxString>
 {
 public:
     PARAM_PATH_LIST( const std::string& aJsonPath, std::vector<wxString>* aPtr,
@@ -563,16 +715,60 @@ public:
             m_default( aDefault )
     { }
 
-    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override;
+    void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override
+    {
+        if( m_readOnly )
+            return;
 
-    void Store( JSON_SETTINGS* aSettings) const override;
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            if( js->is_object() )
+            {
+                m_ptr->clear();
+
+                for( const auto& el : js->items() )
+                    ( *m_ptr )[el.key()] = el.value().get<Value>();
+            }
+        }
+        else if( aResetIfMissing )
+            *m_ptr = m_default;
+    }
+
+    void Store( JSON_SETTINGS* aSettings) const override
+    {
+        nlohmann::json js( {} );
+
+        for( const auto& el : *m_ptr )
+            js[el.first] = el.second;
+
+        aSettings->Set<nlohmann::json>( m_path, js );
+    }
 
     virtual void SetDefault() override
     {
         *m_ptr = m_default;
     }
 
-    bool MatchesFile( JSON_SETTINGS* aSettings ) const override;
+    bool MatchesFile( JSON_SETTINGS* aSettings ) const override
+    {
+        if( std::optional<nlohmann::json> js = aSettings->GetJson( m_path ) )
+        {
+            if( js->is_object() )
+            {
+                if( m_ptr->size() != js->size() )
+                    return false;
+
+                std::map<std::string, Value> val;
+
+                for( const auto& el : js->items() )
+                    val[el.key()] = el.value().get<Value>();
+
+                return val == *m_ptr;
+            }
+        }
+
+        return false;
+    }
 
 private:
     std::map<std::string, Value>* m_ptr;
@@ -580,10 +776,15 @@ private:
 };
 
 
+extern template class APIVISIBLE PARAM_MAP<int>;
+extern template class APIVISIBLE PARAM_MAP<double>;
+extern template class APIVISIBLE PARAM_MAP<bool>;
+
+
 /**
  * A helper for <wxString, wxString> maps
  */
-class PARAM_WXSTRING_MAP : public PARAM_BASE
+class KICOMMON_API PARAM_WXSTRING_MAP : public PARAM_BASE
 {
 public:
     PARAM_WXSTRING_MAP( const std::string& aJsonPath, std::map<wxString, wxString>* aPtr,
diff --git kicad/pcm/pcm.h kicad/pcm/pcm.h
index c670943dcf..4ece4d3a56 100644
--- kicad/pcm/pcm.h
+++ kicad/pcm/pcm.h
@@ -27,6 +27,7 @@
 #include <functional>
 #include <iostream>
 #include <map>
+#include <json_common.h>
 #include <nlohmann/json-schema.hpp>
 #include <thread>
 #include <tuple>
diff --git kicad/pcm/pcm_data.h kicad/pcm/pcm_data.h
index 3e56d18de8..c8c8094925 100644
--- kicad/pcm/pcm_data.h
+++ kicad/pcm/pcm_data.h
@@ -24,7 +24,7 @@
 #include "core/wx_stl_compat.h"
 
 #include <map>
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 #include <core/json_serializers.h>
 #include <optional>
 #include <string>
diff --git pcbnew/pcb_io/easyedapro/pcb_io_easyedapro.cpp pcbnew/pcb_io/easyedapro/pcb_io_easyedapro.cpp
index 10d678e2a2..0b9b081c54 100644
--- pcbnew/pcb_io/easyedapro/pcb_io_easyedapro.cpp
+++ pcbnew/pcb_io/easyedapro/pcb_io_easyedapro.cpp
@@ -43,7 +43,7 @@
 #include <wx/zipstrm.h>
 #include <wx/log.h>
 
-#include <nlohmann/json.hpp>
+#include <json_common.h>
 #include <core/json_serializers.h>
 #include <core/map_helpers.h>
 #include <string_utf8_map.h>
diff --git thirdparty/json_schema_validator/CMakeLists.txt thirdparty/json_schema_validator/CMakeLists.txt
index 57d1d05dd0..32e50c83f4 100644
--- thirdparty/json_schema_validator/CMakeLists.txt
+++ thirdparty/json_schema_validator/CMakeLists.txt
@@ -6,6 +6,8 @@ add_library( nlohmann_json_schema_validator STATIC
     string-format-check.cpp
 )
 
+add_dependencies( nlohmann_json_schema_validator kicommon )
+
 target_include_directories( nlohmann_json_schema_validator
     PUBLIC
         $<INSTALL_INTERFACE:include>
@@ -14,4 +16,5 @@ target_include_directories( nlohmann_json_schema_validator
 
 target_link_libraries( nlohmann_json_schema_validator
     PUBLIC nlohmann_json
+    PRIVATE kicommon
 )
diff --git thirdparty/json_schema_validator/nlohmann/json-schema.hpp thirdparty/json_schema_validator/nlohmann/json-schema.hpp
index 07befd3472..582c113c1c 100644
--- thirdparty/json_schema_validator/nlohmann/json-schema.hpp
+++ thirdparty/json_schema_validator/nlohmann/json-schema.hpp
@@ -21,6 +21,7 @@
 #	define JSON_SCHEMA_VALIDATOR_API
 #endif
 
+#include <json_common.h>
 #include <nlohmann/json.hpp>
 
 #ifdef NLOHMANN_JSON_VERSION_MAJOR
-- 
2.46.1

From 69fae567815858946bafe5b4da503e43b575c2d2 Mon Sep 17 00:00:00 2001
From: Marek Roszko <mark.roszko@gmail.com>
Date: Sat, 2 Mar 2024 16:28:48 -0500
Subject: [PATCH 02/11] Create a singular point for events like
 EDA_EVT_UNITS_CHANGED to be exported out of kicommon

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt     |  1 +
 common/eda_base_frame.cpp |  2 --
 common/ui_events.cpp      | 26 ++++++++++++++++++++++++++
 include/eda_base_frame.h  |  3 +--
 include/ui_events.h       | 32 ++++++++++++++++++++++++++++++++
 5 files changed, 60 insertions(+), 4 deletions(-)
 create mode 100644 common/ui_events.cpp
 create mode 100644 include/ui_events.h

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 1d0067a6d9..ff7b7e314d 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -129,6 +129,7 @@ set( KICOMMON_SRCS
     paths.cpp
     richio.cpp
     string_utils.cpp
+    ui_events.cpp
     trace_helpers.cpp
     wildcards_and_files_ext.cpp
     wx_filename.cpp
diff --git common/eda_base_frame.cpp common/eda_base_frame.cpp
index be48ea88e7..9dc6167417 100644
--- common/eda_base_frame.cpp
+++ common/eda_base_frame.cpp
@@ -72,8 +72,6 @@
 #include <functional>
 #include <kiface_ids.h>
 
-wxDEFINE_EVENT( EDA_EVT_UNITS_CHANGED, wxCommandEvent );
-
 
 // Minimum window size
 static const wxSize minSizeLookup( FRAME_T aFrameType, wxWindow* aWindow )
diff --git common/ui_events.cpp common/ui_events.cpp
new file mode 100644
index 0000000000..d8b05d0aee
--- /dev/null
+++ common/ui_events.cpp
@@ -0,0 +1,26 @@
+/*
+ * This program source code file is part of KiCad, a free EDA CAD application.
+ *
+ * Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, you may find one here:
+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ * or you may search the http://www.gnu.org website for the version 2 license,
+ * or you may write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+ */
+
+#include <ui_events.h>
+
+wxDEFINE_EVENT( EDA_EVT_UNITS_CHANGED, wxCommandEvent );
\ No newline at end of file
diff --git include/eda_base_frame.h include/eda_base_frame.h
index 31e2e6228b..1c90f6fc8e 100644
--- include/eda_base_frame.h
+++ include/eda_base_frame.h
@@ -47,6 +47,7 @@
 #include <undo_redo_container.h>
 #include <units_provider.h>
 #include <origin_transforms.h>
+#include <ui_events.h>
 
 // Option for main frames
 #define KICAD_DEFAULT_DRAWFRAME_STYLE wxDEFAULT_FRAME_STYLE | wxWANTS_CHARS
@@ -92,8 +93,6 @@ class TOOL_INTERACTIVE;
 /// This is the handler functor for the update UI events
 typedef std::function< void( wxUpdateUIEvent& ) > UIUpdateHandler;
 
-wxDECLARE_EVENT( EDA_EVT_UNITS_CHANGED, wxCommandEvent );
-
 
 /**
  * The base frame for deriving all KiCad main window classes.
diff --git include/ui_events.h include/ui_events.h
new file mode 100644
index 0000000000..06774080e6
--- /dev/null
+++ include/ui_events.h
@@ -0,0 +1,32 @@
+/*
+ * This program source code file is part of KiCad, a free EDA CAD application.
+ *
+ * Copyright (C) 2024 KiCad Developers, see AUTHORS.txt for contributors.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, you may find one here:
+ * http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+ * or you may search the http://www.gnu.org website for the version 2 license,
+ * or you may write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
+ */
+
+#ifndef UI_EVENTS_H
+#define UI_EVENTS_H
+
+#include <kicommon.h>
+#include <wx/event.h>
+
+wxDECLARE_EXPORTED_EVENT( KICOMMON_API, EDA_EVT_UNITS_CHANGED, wxCommandEvent );
+
+#endif
\ No newline at end of file
-- 
2.46.1

From e1bca3c935d40c74e069b76b798ecfff90359cd4 Mon Sep 17 00:00:00 2001
From: Marek Roszko <mark.roszko@gmail.com>
Date: Tue, 19 Mar 2024 21:53:21 -0400
Subject: [PATCH 03/11] Move PGM_BASE to kicommon

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 bitmap2component/bitmap2cmp_main.cpp          | 19 ----
 common/CMakeLists.txt                         | 95 ++++++++++---------
 .../dialogs/dialog_migrate_settings_base.fbp  |  2 +-
 common/dialogs/dialog_migrate_settings_base.h |  4 +-
 common/kiway.cpp                              |  8 +-
 common/pgm_base.cpp                           | 19 ++++
 common/single_top.cpp                         |  9 +-
 cvpcb/cvpcb.cpp                               | 19 ----
 eeschema/CMakeLists.txt                       |  6 +-
 eeschema/eeschema.cpp                         | 18 ----
 .../symbol_editor/symbol_editor_settings.cpp  |  2 +
 gerbview/CMakeLists.txt                       |  6 +-
 gerbview/gerbview.cpp                         | 18 ----
 include/background_jobs_monitor.h             |  7 +-
 include/bitmap_store.h                        |  5 +-
 include/bitmaps/bitmap_types.h                | 22 +++--
 include/common.h                              | 30 +++---
 include/database/database_lib_settings.h      | 26 ++---
 include/dialog_shim.h                         |  3 +-
 include/dialogs/dialog_migrate_settings.h     |  2 +-
 include/env_vars.h                            | 19 ++--
 include/gestfich.h                            | 20 ++--
 include/kiway.h                               |  5 +-
 include/kiway_express.h                       |  3 +-
 include/kiway_holder.h                        |  4 +-
 include/launch_ext.h                          |  4 +-
 include/lib_table_base.h                      |  7 +-
 include/notifications_manager.h               |  5 +-
 include/pgm_base.h                            | 13 ++-
 include/project.h                             |  4 +-
 include/project/board_project_settings.h      | 16 ++--
 include/project/net_settings.h                |  2 +-
 include/project/project_archiver.h            |  3 +-
 include/project/project_file.h                |  2 +-
 include/project/project_local_settings.h      |  4 +-
 include/search_stack.h                        |  3 +-
 include/settings/app_settings.h               | 10 +-
 include/settings/color_settings.h             |  2 +-
 include/settings/common_settings.h            |  2 +-
 include/settings/kicad_settings.h             |  2 +-
 include/settings/parameters.h                 | 33 ++++++-
 include/settings/settings_manager.h           |  2 +-
 include/systemdirsappend.h                    |  4 +-
 include/widgets/bitmap_button.h               |  3 +-
 include/widgets/kistatusbar.h                 |  4 +-
 include/widgets/ui_common.h                   | 55 +++++------
 kicad/kicad.cpp                               | 18 +---
 kicad/kicad_cli.cpp                           | 27 +-----
 pagelayout_editor/CMakeLists.txt              |  6 +-
 pagelayout_editor/pl_editor.cpp               | 18 ----
 pcb_calculator/CMakeLists.txt                 |  6 +-
 pcb_calculator/pcb_calculator.cpp             | 16 ----
 pcbnew/pcbnew.cpp                             | 20 ----
 qa/mocks/kicad/common_mocks.cpp               | 16 ----
 qa/qa_utils/test_app_main.cpp                 | 20 +---
 qa/tests/common/test_module.cpp               |  2 +
 qa/tests/eeschema/test_module.cpp             |  2 +
 qa/tests/gerbview/CMakeLists.txt              |  1 +
 qa/tests/gerbview/test_module.cpp             |  2 +
 qa/tests/pcbnew/CMakeLists.txt                |  1 +
 qa/tests/pcbnew/test_module.cpp               |  2 +
 qa/tests/spice/test_module.cpp                |  2 +
 scripting/CMakeLists.txt                      |  2 +-
 scripting/kicad_scripting_main.cpp            | 17 ----
 scripting/python_scripting.cpp                |  3 -
 scripting/python_scripting.h                  | 23 +++--
 66 files changed, 312 insertions(+), 443 deletions(-)

diff --git bitmap2component/bitmap2cmp_main.cpp bitmap2component/bitmap2cmp_main.cpp
index 3fe594d9ef..e0c6636a08 100644
--- bitmap2component/bitmap2cmp_main.cpp
+++ bitmap2component/bitmap2cmp_main.cpp
@@ -69,8 +69,6 @@ static struct IFACE : public KIFACE_BASE
 
 using namespace BMP2CMP;
 
-static PGM_BASE* process;
-
 
 KIFACE_BASE& Kiface()
 {
@@ -82,27 +80,10 @@ KIFACE_BASE& Kiface()
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE* KIFACE_GETTER( int* aKIFACEversion, int aKIWAYversion, PGM_BASE* aProgram )
 {
-    process = (PGM_BASE*) aProgram;
     return &kiface;
 }
 
 
-#if defined(BUILD_KIWAY_DLLS)
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-#endif
-
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     return start_common( aCtlBits );
diff --git common/CMakeLists.txt common/CMakeLists.txt
index ff7b7e314d..e54918c6dc 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -96,44 +96,84 @@ set( KICOMMON_SRCS
     kicad_curl/kicad_curl.cpp
     kicad_curl/kicad_curl_easy.cpp
 
+    settings/app_settings.cpp
     settings/aui_settings.cpp
     settings/bom_settings.cpp
+    settings/color_settings.cpp
+    settings/common_settings.cpp
     settings/grid_settings.cpp
     settings/json_settings.cpp
+    settings/kicad_settings.cpp
     settings/nested_settings.cpp
     settings/parameters.cpp
+    settings/settings_manager.cpp
+
+    project/board_project_settings.cpp
+    project/net_settings.cpp
+    project/project_archiver.cpp
+    project/project_file.cpp
+    project/project_local_settings.cpp
 
+    dialogs/dialog_migrate_settings.cpp
+    dialogs/dialog_migrate_settings_base.cpp
+
+    widgets/bitmap_button.cpp
+    widgets/kistatusbar.cpp
     widgets/progress_reporter_base.cpp
     widgets/std_bitmap_button.cpp
+    widgets/ui_common.cpp
+
+    database/database_lib_settings.cpp
 
     advanced_config.cpp
     asset_archive.cpp
     array_axis.cpp
     array_options.cpp
+    background_jobs_monitor.cpp
+    bitmap.cpp
     bitmap_info.cpp
+    bitmap_store.cpp
     build_version.cpp
+    common.cpp
     config_params.cpp
     confirm.cpp
+    dialog_shim.cpp
     dsnlexer.cpp
     eda_pattern_match.cpp
     eda_units.cpp
+    env_vars.cpp
     exceptions.cpp
+    gestfich.cpp
     kiid.cpp
+    kiway.cpp
+    kiway_express.cpp
+    kiway_holder.cpp
+    launch_ext.cpp
+    lib_table_base.cpp
     layer_id.cpp
     lib_id.cpp
     locale_io.cpp
     lset.cpp
     markup_parser.cpp
     netclass.cpp
+    notifications_manager.cpp
     page_info.cpp
     paths.cpp
+    project.cpp
     richio.cpp
+    search_stack.cpp
+    searchhelpfilefullpath.cpp
     string_utils.cpp
+    systemdirsappend.cpp
     ui_events.cpp
     trace_helpers.cpp
     wildcards_and_files_ext.cpp
     wx_filename.cpp
 
+    pgm_base.cpp
+
+    ../scripting/python_scripting.cpp
+
     io/kicad/kicad_io_utils.cpp    # needed by richio
     )
 
@@ -160,8 +200,19 @@ target_link_libraries( kicommon
    	${FREETYPE_LIBRARIES}
    	${HarfBuzz_LIBRARIES}
 	${Fontconfig_LIBRARIES}
+
+    # needed because of python_scripting.cpp
+    ${PYTHON_LIBRARIES}
     )
 
+
+if( KICAD_USE_SENTRY )
+    target_link_libraries( kicommon
+        sentry )
+
+    set_property(SOURCE pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
+endif()
+
 include( ${KICAD_CMAKE_MODULE_PATH}/KiCadVersion.cmake )
 include( ${KICAD_CMAKE_MODULE_PATH}/CreateGitVersionHeader.cmake )
 create_git_version_header(${CMAKE_SOURCE_DIR})
@@ -249,8 +300,6 @@ set( COMMON_DLG_SRCS
     dialogs/dialog_import_choose_project_base.cpp
     dialogs/dialog_locked_items_query.cpp
     dialogs/dialog_locked_items_query_base.cpp
-    dialogs/dialog_migrate_settings.cpp
-    dialogs/dialog_migrate_settings_base.cpp
     dialogs/dialog_page_settings_base.cpp
     dialogs/dialog_paste_special.cpp
     dialogs/dialog_paste_special_base.cpp
@@ -300,7 +349,6 @@ endif()
 
 set( COMMON_WIDGET_SRCS
     widgets/app_progress_dialog.cpp
-    widgets/bitmap_button.cpp
     widgets/bitmap_toggle.cpp
     widgets/button_row_panel.cpp
     widgets/color_swatch.cpp
@@ -321,7 +369,6 @@ set( COMMON_WIDGET_SRCS
     widgets/html_window.cpp
     widgets/indicator_icon.cpp
     widgets/wx_infobar.cpp
-    widgets/kistatusbar.cpp
     widgets/layer_box_selector.cpp
     widgets/lib_tree.cpp
     widgets/mathplot.cpp
@@ -335,7 +382,6 @@ set( COMMON_WIDGET_SRCS
     widgets/split_button.cpp
     widgets/stepped_slider.cpp
     widgets/text_ctrl_eval.cpp
-    widgets/ui_common.cpp
     widgets/unit_binder.cpp
     widgets/widget_save_restore.cpp
     widgets/widget_hotkey_list.cpp
@@ -454,17 +500,12 @@ set( COMMON_SRCS
     ${COMMON_IMPORT_GFX_SRCS}
     ${COMMON_GIT_SRCS}
     jobs/job_dispatcher.cpp
-    background_jobs_monitor.cpp
     base_screen.cpp
     bin_mod.cpp
-    bitmap.cpp
     bitmap_base.cpp
-    bitmap_store.cpp
     board_printout.cpp
     cli_progress_reporter.cpp
     commit.cpp
-    common.cpp
-    dialog_shim.cpp
     dpi_scaling_common.cpp
     draw_panel_gal.cpp
     gal_display_options_common.cpp
@@ -478,7 +519,6 @@ set( COMMON_SRCS
     eda_text.cpp
     eda_tools.cpp
     env_paths.cpp
-    env_vars.cpp
     executable_names.cpp
     filename_resolver.cpp
     file_history.cpp
@@ -486,38 +526,27 @@ set( COMMON_SRCS
     footprint_filter.cpp
     footprint_info.cpp
     gbr_metadata.cpp
-    gestfich.cpp
     gr_basic.cpp
     grid_tricks.cpp
     hotkey_store.cpp
     hotkeys_basic.cpp
     kiface_base.cpp
-    kiway.cpp
-    kiway_express.cpp
-    kiway_holder.cpp
     kiway_player.cpp
-    launch_ext.cpp
-    lib_table_base.cpp
     lib_table_grid_tricks.cpp
     lib_tree_model.cpp
     lib_tree_model_adapter.cpp
     marker_base.cpp
-    notifications_manager.cpp
     origin_transforms.cpp
     printout.cpp
-    project.cpp
     ptree.cpp
     rc_item.cpp
     refdes_utils.cpp
     render_settings.cpp
     reporter.cpp
     scintilla_tricks.cpp
-    search_stack.cpp
-    searchhelpfilefullpath.cpp
     status_popup.cpp
     string_utf8_map.cpp
     stroke_params.cpp
-    systemdirsappend.cpp
     template_fieldnames.cpp
     textentry_tricks.cpp
     title_block.cpp
@@ -528,16 +557,6 @@ set( COMMON_SRCS
     view/wx_view_controls.cpp
     )
 
-if( TRUE OR NOT USE_KIWAY_DLLS )
-#if( NOT USE_KIWAY_DLLS )
-    # We DO NOT want pgm_base.cpp linked into the KIFACE, only into the KIWAY.
-    # Check the map files to verify eda_pgm.o not being linked in.
-    list( APPEND COMMON_SRCS pgm_base.cpp )
-    if( KICAD_USE_SENTRY )
-        set_property(SOURCE pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
-    endif()
-endif()
-
 set( COMMON_SRCS
     ${COMMON_SRCS}
 
@@ -571,18 +590,7 @@ set( COMMON_SRCS
     tool/zoom_menu.cpp
     tool/zoom_tool.cpp
 
-    settings/app_settings.cpp
-    settings/color_settings.cpp
     settings/cvpcb_settings.cpp
-    settings/common_settings.cpp
-    settings/settings_manager.cpp
-    settings/kicad_settings.cpp
-
-    project/board_project_settings.cpp
-    project/net_settings.cpp
-    project/project_archiver.cpp
-    project/project_file.cpp
-    project/project_local_settings.cpp
 
     properties/color4d_variant.cpp
     properties/eda_angle_variant.cpp
@@ -593,7 +601,6 @@ set( COMMON_SRCS
     properties/std_optional_variants.cpp
 
     database/database_connection.cpp
-    database/database_lib_settings.cpp
 
     http_lib/http_lib_connection.cpp
     http_lib/http_lib_settings.cpp
diff --git common/dialogs/dialog_migrate_settings_base.fbp common/dialogs/dialog_migrate_settings_base.fbp
index 6c2ecdc229..94a58407ea 100644
--- common/dialogs/dialog_migrate_settings_base.fbp
+++ common/dialogs/dialog_migrate_settings_base.fbp
@@ -2,7 +2,7 @@
 <wxFormBuilder_Project>
   <FileVersion major="1" minor="17"/>
   <object class="Project" expanded="true">
-    <property name="class_decoration">; </property>
+    <property name="class_decoration">KICOMMON_API; kicommon.h</property>
     <property name="code_generation">C++</property>
     <property name="disconnect_events">1</property>
     <property name="disconnect_mode">source_name</property>
diff --git common/dialogs/dialog_migrate_settings_base.h common/dialogs/dialog_migrate_settings_base.h
index 252f3f439d..4b9c443c70 100644
--- common/dialogs/dialog_migrate_settings_base.h
+++ common/dialogs/dialog_migrate_settings_base.h
@@ -30,13 +30,15 @@ class STD_BITMAP_BUTTON;
 #include <wx/checkbox.h>
 #include <wx/dialog.h>
 
+#include "kicommon.h"
+
 ///////////////////////////////////////////////////////////////////////////
 
 
 ///////////////////////////////////////////////////////////////////////////////
 /// Class DIALOG_MIGRATE_SETTINGS_BASE
 ///////////////////////////////////////////////////////////////////////////////
-class DIALOG_MIGRATE_SETTINGS_BASE : public DIALOG_SHIM
+class KICOMMON_API DIALOG_MIGRATE_SETTINGS_BASE : public DIALOG_SHIM
 {
 	private:
 
diff --git common/kiway.cpp common/kiway.cpp
index 6b02f347b8..ffe5d1c49d 100644
--- common/kiway.cpp
+++ common/kiway.cpp
@@ -54,8 +54,8 @@ int     KIWAY::m_kiface_version[KIWAY_FACE_COUNT];
 
 
 
-KIWAY::KIWAY( PGM_BASE* aProgram, int aCtlBits, wxFrame* aTop ):
-    m_program( aProgram ), m_ctl( aCtlBits ), m_top( nullptr ), m_blockingDialog( wxID_NONE )
+KIWAY::KIWAY( int aCtlBits, wxFrame* aTop ):
+     m_ctl( aCtlBits ), m_top( nullptr ), m_blockingDialog( wxID_NONE )
 {
     SetTop( aTop );     // hook player_destroy_handler() into aTop.
 
@@ -296,7 +296,7 @@ KIFACE* KIWAY::KiFACE( FACE_T aFaceId, bool doLoad )
         {
             KIFACE_GETTER_FUNC* ki_getter = (KIFACE_GETTER_FUNC*) addr;
 
-            KIFACE* kiface = ki_getter( &m_kiface_version[aFaceId], KIFACE_VERSION, m_program );
+            KIFACE* kiface = ki_getter( &m_kiface_version[aFaceId], KIFACE_VERSION, &Pgm() );
 
             // KIFACE_GETTER_FUNC function comment (API) says the non-NULL is unconditional.
             wxASSERT_MSG( kiface,
@@ -311,7 +311,7 @@ KIFACE* KIWAY::KiFACE( FACE_T aFaceId, bool doLoad )
 
             try
             {
-                startSuccess = kiface->OnKifaceStart( m_program, m_ctl, this );
+                startSuccess = kiface->OnKifaceStart( &Pgm(), m_ctl, this );
             }
             catch (...)
             {
diff --git common/pgm_base.cpp common/pgm_base.cpp
index cdaad56da2..b15a1c289f 100644
--- common/pgm_base.cpp
+++ common/pgm_base.cpp
@@ -1024,3 +1024,22 @@ void PGM_BASE::WritePdfBrowserInfos()
     GetCommonSettings()->m_System.pdf_viewer_name = GetPdfBrowserName();
     GetCommonSettings()->m_System.use_system_pdf_viewer = m_use_system_pdf_browser;
 }
+
+static PGM_BASE* process;
+
+PGM_BASE& Pgm()
+{
+    wxASSERT( process ); // KIFACE_GETTER has already been called.
+    return *process;
+}
+
+// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
+PGM_BASE* PgmOrNull()
+{
+    return process;
+}
+
+void SetPgm(PGM_BASE* pgm)
+{
+    process = pgm;
+}
\ No newline at end of file
diff --git common/single_top.cpp common/single_top.cpp
index f6ddbc261a..4c85457d98 100644
--- common/single_top.cpp
+++ common/single_top.cpp
@@ -60,7 +60,7 @@
 
 // Only a single KIWAY is supported in this single_top top level component,
 // which is dedicated to loading only a single DSO.
-KIWAY    Kiway( &Pgm(), KFCTL_STANDALONE );
+KIWAY    Kiway( KFCTL_STANDALONE );
 
 
 // implement a PGM_BASE and a wxApp side by side:
@@ -115,12 +115,6 @@ static struct PGM_SINGLE_TOP : public PGM_BASE
 
 } program;
 
-
-PGM_BASE& Pgm()
-{
-    return program;
-}
-
 // A module to allow Html module initialization/cleanup
 // When a wxHtmlWindow is used *only* in a dll/so module, the Html text is displayed
 // as plain text.
@@ -158,6 +152,7 @@ struct APP_SINGLE_TOP : public wxApp
 {
     APP_SINGLE_TOP() : wxApp()
     {
+        SetPgm( &program );
         // Init the environment each platform wants
         KIPLATFORM::ENV::Init();
     }
diff --git cvpcb/cvpcb.cpp cvpcb/cvpcb.cpp
index cc59a8141a..253f73ae4c 100644
--- cvpcb/cvpcb.cpp
+++ cvpcb/cvpcb.cpp
@@ -133,9 +133,6 @@ static struct IFACE : public KIFACE_BASE
 using namespace CV;
 
 
-static PGM_BASE* process;
-
-
 KIFACE_BASE& Kiface() { return kiface; }
 
 
@@ -143,26 +140,10 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER(  int* aKIFACEversion, int aKIWAYversion, PGM_BASE* aProgram )
 {
-    process = (PGM_BASE*) aProgram;
     return &kiface;
 }
 
 
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face
-// is run from a python script, mot from a Kicad application
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
-
 /// The global footprint library table.  This is not dynamically allocated because
 /// in a multiple project environment we must keep its address constant (since it is
 /// the fallback table for multiple projects).
diff --git eeschema/CMakeLists.txt eeschema/CMakeLists.txt
index 4d9dd7d45b..f801048d33 100644
--- eeschema/CMakeLists.txt
+++ eeschema/CMakeLists.txt
@@ -512,14 +512,9 @@ endif()
 
 add_executable( eeschema WIN32 MACOSX_BUNDLE
     ${CMAKE_SOURCE_DIR}/common/single_top.cpp
-    ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp
     ${EESCHEMA_RESOURCES}
     )
 
-if( KICAD_USE_SENTRY )
-    set_property(SOURCE ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
-endif()
-
 set_source_files_properties( ${CMAKE_SOURCE_DIR}/common/single_top.cpp PROPERTIES
     COMPILE_DEFINITIONS "TOP_FRAME=FRAME_SCH;PGM_DATA_FILE_EXT=\"kicad_sch\";BUILD_KIWAY_DLL"
     )
@@ -529,6 +524,7 @@ target_link_libraries( eeschema
     gal
     common
     argparse::argparse
+    kicommon
     ${wxWidgets_LIBRARIES}
     )
 
diff --git eeschema/eeschema.cpp eeschema/eeschema.cpp
index 006bda132b..7547b09829 100644
--- eeschema/eeschema.cpp
+++ eeschema/eeschema.cpp
@@ -343,8 +343,6 @@ private:
 
 using namespace SCH;
 
-static PGM_BASE* process;
-
 
 KIFACE_BASE& Kiface() { return kiface; }
 
@@ -353,26 +351,10 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER(  int* aKIFACEversion, int aKiwayVersion, PGM_BASE* aProgram )
 {
-    process = aProgram;
     return &kiface;
 }
 
 
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from
-// a python script or something else.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     // This is process-level-initialization, not project-level-initialization of the DSO.
diff --git eeschema/symbol_editor/symbol_editor_settings.cpp eeschema/symbol_editor/symbol_editor_settings.cpp
index c7b7af86ca..bd3c9d9a0f 100644
--- eeschema/symbol_editor/symbol_editor_settings.cpp
+++ eeschema/symbol_editor/symbol_editor_settings.cpp
@@ -21,6 +21,8 @@
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */
 
+#include <json_common.h>
+
 #include <settings/common_settings.h>
 #include <settings/parameters.h>
 #include <settings/settings_manager.h>
diff --git gerbview/CMakeLists.txt gerbview/CMakeLists.txt
index 669a26d366..f3e6b5ec3f 100644
--- gerbview/CMakeLists.txt
+++ gerbview/CMakeLists.txt
@@ -103,14 +103,9 @@ endif()
 
 add_executable( gerbview WIN32 MACOSX_BUNDLE
     ${CMAKE_SOURCE_DIR}/common/single_top.cpp
-    ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp
     ${GERBVIEW_RESOURCES}
     )
 
-if( KICAD_USE_SENTRY )
-    set_property(SOURCE ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
-endif()
-
 set_source_files_properties( ${CMAKE_SOURCE_DIR}/common/single_top.cpp PROPERTIES
     COMPILE_DEFINITIONS "TOP_FRAME=FRAME_GERBER;BUILD_KIWAY_DLL"
     )
@@ -120,6 +115,7 @@ target_link_libraries( gerbview
     gal
     common
     core
+    kicommon
     nlohmann_json
     ${wxWidgets_LIBRARIES}
     )
diff --git gerbview/gerbview.cpp gerbview/gerbview.cpp
index 7222861c23..6b3f5bd149 100644
--- gerbview/gerbview.cpp
+++ gerbview/gerbview.cpp
@@ -130,9 +130,6 @@ static struct IFACE : public KIFACE_BASE, public UNITS_PROVIDER
 using namespace GERBV;
 
 
-static PGM_BASE* process;
-
-
 KIFACE_BASE& Kiface() { return kiface; }
 
 
@@ -140,25 +137,10 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER(  int* aKIFACEversion, int aKiwayVersion, PGM_BASE* aProgram )
 {
-    process = aProgram;
     return &kiface;
 }
 
 
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     InitSettings( new GERBVIEW_SETTINGS );
diff --git include/background_jobs_monitor.h include/background_jobs_monitor.h
index d4b37cc4e1..107c8e15b3 100644
--- include/background_jobs_monitor.h
+++ include/background_jobs_monitor.h
@@ -25,6 +25,7 @@
 #ifndef BACKGROUND_JOBS_MONITOR_H
 #define BACKGROUND_JOBS_MONITOR_H
 
+#include <kicommon.h>
 #include <widgets/progress_reporter_base.h>
 #include <functional>
 #include <memory>
@@ -41,7 +42,7 @@ class BACKGROUND_JOBS_MONITOR;
 class wxWindow;
 class wxCloseEvent;
 
-class BACKGROUND_JOB_REPORTER : public PROGRESS_REPORTER_BASE
+class KICOMMON_API BACKGROUND_JOB_REPORTER : public PROGRESS_REPORTER_BASE
 {
 public:
     BACKGROUND_JOB_REPORTER( BACKGROUND_JOBS_MONITOR*        aMonitor,
@@ -69,7 +70,7 @@ private:
 };
 
 
-struct BACKGROUND_JOB
+struct KICOMMON_API BACKGROUND_JOB
 {
 public:
     wxString m_name;
@@ -81,7 +82,7 @@ public:
 };
 
 
-class BACKGROUND_JOBS_MONITOR
+class KICOMMON_API BACKGROUND_JOBS_MONITOR
 {
     friend class BACKGROUND_JOB_REPORTER;
     friend class BACKGROUND_JOB_LIST;
diff --git include/bitmap_store.h include/bitmap_store.h
index 8f6ba09ced..d38173d2eb 100644
--- include/bitmap_store.h
+++ include/bitmap_store.h
@@ -26,6 +26,7 @@
 #include <wx/bmpbndl.h>
 
 #include <bitmaps/bitmap_info.h>
+#include <kicommon.h>
 
 class ASSET_ARCHIVE;
 class wxImage;
@@ -33,7 +34,7 @@ class wxImage;
 
 namespace std
 {
-    template<> struct hash<std::pair<BITMAPS, int>>
+    template<> struct KICOMMON_API hash<std::pair<BITMAPS, int>>
     {
         size_t operator()( const std::pair<BITMAPS, int>& aPair ) const;
     };
@@ -42,7 +43,7 @@ namespace std
 /**
  * Helper to retrieve bitmaps while handling icon themes and scaling
  */
-class BITMAP_STORE
+class KICOMMON_API BITMAP_STORE
 {
 public:
     BITMAP_STORE();
diff --git include/bitmaps/bitmap_types.h include/bitmaps/bitmap_types.h
index e095f126fa..fd91990568 100644
--- include/bitmaps/bitmap_types.h
+++ include/bitmaps/bitmap_types.h
@@ -26,6 +26,8 @@
 #ifndef BITMAP_TYPES_H_
 #define BITMAP_TYPES_H_
 
+#include <kicommon.h>
+
 //FIXME: cannot include only this file in wxWidgets 2.9.3
 // test if it works under stable release
 // #include <wx/bitmap.h>   // only to define wxBitmap
@@ -44,7 +46,7 @@ enum class BITMAP_TYPE
     BMP
 };
 
-BITMAP_STORE* GetBitmapStore();
+KICOMMON_API BITMAP_STORE* GetBitmapStore();
 
 /**
  * Construct a wxBitmap from an image identifier
@@ -52,17 +54,17 @@ BITMAP_STORE* GetBitmapStore();
  * @param aBitmap is from the BITMAPS enum in bitmaps_list.h
  * @param aHeightTag is the requested height tag for multi-res bitmaps (-1 for any)
  */
-wxBitmap KiBitmap( BITMAPS aBitmap, int aHeightTag = -1 );
+KICOMMON_API wxBitmap KiBitmap( BITMAPS aBitmap, int aHeightTag = -1 );
 
-wxBitmapBundle KiBitmapBundle( BITMAPS aBitmap );
+KICOMMON_API wxBitmapBundle KiBitmapBundle( BITMAPS aBitmap );
 
-wxBitmapBundle KiDisabledBitmapBundle( BITMAPS aBitmap );
+KICOMMON_API wxBitmapBundle KiDisabledBitmapBundle( BITMAPS aBitmap );
 
 /**
  * Wipes out the scaled bitmap cache so that the icon theme can be changed.
  * TODO: move scaling system into BITMAP_STORE so this global doesn't need to exist
  */
-void ClearScaledBitmapCache();
+KICOMMON_API void ClearScaledBitmapCache();
 
 /**
  * Construct a wxBitmap from a memory record, scaling it if device DPI demands it.
@@ -75,8 +77,8 @@ void ClearScaledBitmapCache();
  * @param aHeight is the requested image height for the source bitmap, or -1 for any height
  * @param aQuantized if true scaling will be rounded to integers (2X, 3X, etc.).
  */
-wxBitmap KiScaledBitmap( BITMAPS aBitmap, wxWindow* aWindow, int aHeight = -1,
-                         bool aQuantized = false );
+KICOMMON_API wxBitmap KiScaledBitmap( BITMAPS aBitmap, wxWindow* aWindow, int aHeight = -1,
+                                      bool aQuantized = false );
 
 /**
  * Overload of the above function that takes another wxBitmap as a parameter.
@@ -84,13 +86,13 @@ wxBitmap KiScaledBitmap( BITMAPS aBitmap, wxWindow* aWindow, int aHeight = -1,
  * @param aBitmap is the source bitmap to scale
  * @param aWindow target window for scaling context
  */
-wxBitmap KiScaledBitmap( const wxBitmap& aBitmap, wxWindow* aWindow );
+KICOMMON_API wxBitmap KiScaledBitmap( const wxBitmap& aBitmap, wxWindow* aWindow );
 
 /**
  * Return the automatic scale factor that would be used for a given window by
  * KiScaledBitmap and KiScaledSeparator.
  */
-int KiIconScale( wxWindow* aWindow );
+KICOMMON_API int KiIconScale( wxWindow* aWindow );
 
 /**
  * Allocate a wxBitmap on heap from a memory record, held in a BITMAPS.
@@ -98,6 +100,6 @@ int KiIconScale( wxWindow* aWindow );
  * @param aBitmap is from the BITMAPS enum in bitmaps_list.h
  * @return wxBitmap* - caller owns it.
  */
-wxBitmap* KiBitmapNew( BITMAPS aBitmap );
+KICOMMON_API wxBitmap* KiBitmapNew( BITMAPS aBitmap );
 
 #endif  // BITMAP_TYPES_H_
diff --git include/common.h include/common.h
index af4d03fbb4..85ec06464b 100644
--- include/common.h
+++ include/common.h
@@ -32,6 +32,7 @@
 #ifndef INCLUDE__COMMON_H_
 #define INCLUDE__COMMON_H_
 
+#include <kicommon.h>
 #include <functional>
 #include <memory>
 
@@ -55,7 +56,7 @@ class REPORTER;
  * @param aBaseName is the name of the help file to search for (without extension).
  * @return the full path and filename if \a aBaseName is found, else wxEmptyString.
  */
-wxString SearchHelpFileFullPath( const wxString& aBaseName );
+KICOMMON_API wxString SearchHelpFileFullPath( const wxString& aBaseName );
 
 /**
  * Make \a aTargetFullFileName absolute and create the path of this file if it doesn't yet exist.
@@ -66,14 +67,14 @@ wxString SearchHelpFileFullPath( const wxString& aBaseName );
  * @param aReporter a point to a REPORTER object use to show messages (can be NULL)
  * @return true if \a aOutputDir already exists or was successfully created.
  */
-bool EnsureFileDirectoryExists( wxFileName*     aTargetFullFileName,
-                                const wxString& aBaseFilename,
-                                REPORTER*       aReporter = nullptr );
+KICOMMON_API bool EnsureFileDirectoryExists( wxFileName*     aTargetFullFileName,
+                                             const wxString& aBaseFilename,
+                                             REPORTER*       aReporter = nullptr );
 
 /**
  * It's annoying to throw up nag dialogs when the extension isn't right.  Just fix it.
  */
-wxString EnsureFileExtension( const wxString& aFilename, const wxString& aExtension );
+KICOMMON_API wxString EnsureFileExtension( const wxString& aFilename, const wxString& aExtension );
 
 /**
  * Replace any environment variable & text variable references with their values.
@@ -81,34 +82,35 @@ wxString EnsureFileExtension( const wxString& aFilename, const wxString& aExtens
  * @param aString a string containing (perhaps) references to env var
  * @return the expanded environment variable.
  */
-const wxString ExpandEnvVarSubstitutions( const wxString& aString, const PROJECT* aProject );
+KICOMMON_API const wxString ExpandEnvVarSubstitutions( const wxString& aString,
+                                                       const PROJECT*  aProject );
 
 /**
  * Expand '${var-name}' templates in text.
  */
-wxString ExpandTextVars( const wxString& aSource,
-                         const std::function<bool( wxString* )>* aResolver );
+KICOMMON_API wxString ExpandTextVars( const wxString&                         aSource,
+                                      const std::function<bool( wxString* )>* aResolver );
 
-wxString ExpandTextVars( const wxString& aSource, const PROJECT* aProject );
+KICOMMON_API wxString ExpandTextVars( const wxString& aSource, const PROJECT* aProject );
 
 /**
  * Returns any variables unexpanded, e.g. ${VAR} -> VAR
  */
-wxString GetTextVars( const wxString& aSource );
+KICOMMON_API wxString GetTextVars( const wxString& aSource );
 
 /**
  * Returns true if the string is a text var, e.g starts with ${
  */
-bool IsTextVar( const wxString& aSource );
+KICOMMON_API bool IsTextVar( const wxString& aSource );
 
 /**
  * Replace any environment and/or text variables in file-path uris (leaving network-path URIs
  * alone).
  */
-const wxString ResolveUriByEnvVars( const wxString& aUri, PROJECT* aProject );
+KICOMMON_API const wxString ResolveUriByEnvVars( const wxString& aUri, PROJECT* aProject );
 
 
-long long TimestampDir( const wxString& aDirPath, const wxString& aFilespec );
+KICOMMON_API long long TimestampDir( const wxString& aDirPath, const wxString& aFilespec );
 
 
 /**
@@ -116,7 +118,7 @@ long long TimestampDir( const wxString& aDirPath, const wxString& aFilespec );
  *
  * @return true if the operating system is unsupported
  */
-bool WarnUserIfOperatingSystemUnsupported();
+KICOMMON_API bool WarnUserIfOperatingSystemUnsupported();
 
 
 #endif  // INCLUDE__COMMON_H_
diff --git include/database/database_lib_settings.h include/database/database_lib_settings.h
index c090011476..5661c9883b 100644
--- include/database/database_lib_settings.h
+++ include/database/database_lib_settings.h
@@ -32,7 +32,7 @@ enum class DATABASE_SOURCE_TYPE
 };
 
 
-struct DATABASE_SOURCE
+struct KICOMMON_API DATABASE_SOURCE
 {
     DATABASE_SOURCE_TYPE type;
     std::string          dsn;
@@ -43,15 +43,15 @@ struct DATABASE_SOURCE
 };
 
 
-struct DATABASE_FIELD_MAPPING
+struct KICOMMON_API DATABASE_FIELD_MAPPING
 {
-    const std::string column;             ///< Database column name
-    const std::string name;               ///< KiCad field name
-    const wxString    name_wx;            ///< KiCad field name (converted)
-    const bool        visible_on_add;     ///< Whether to show the field when placing the symbol
-    const bool        visible_in_chooser; ///< Whether the column is shown by default in the chooser
-    const bool        show_name;   ///< Whether or not to show the field name as well as its value
-    const bool inherit_properties; ///< Whether or not to inherit properties from symbol field
+    std::string column;             ///< Database column name
+    std::string name;               ///< KiCad field name
+    wxString    name_wx;            ///< KiCad field name (converted)
+    bool        visible_on_add;     ///< Whether to show the field when placing the symbol
+    bool        visible_in_chooser; ///< Whether the column is shown by default in the chooser
+    bool        show_name;   ///< Whether or not to show the field name as well as its value
+    bool        inherit_properties; ///< Whether or not to inherit properties from symbol field
 
     explicit DATABASE_FIELD_MAPPING( std::string aColumn, std::string aName, bool aVisibleOnAdd,
                                      bool aVisibleInChooser, bool aShowName,
@@ -59,7 +59,7 @@ struct DATABASE_FIELD_MAPPING
 };
 
 
-struct MAPPABLE_SYMBOL_PROPERTIES
+struct KICOMMON_API MAPPABLE_SYMBOL_PROPERTIES
 {
     std::string description;
     std::string footprint_filters;
@@ -83,7 +83,7 @@ struct MAPPABLE_SYMBOL_PROPERTIES
  * table called "Capacitors", with `key_col` set to "Part Number", the LIB_ID for a capacitor placed
  * from this table will look something like `PartsDB-Capacitors:CAP-001`
  */
-struct DATABASE_LIB_TABLE
+struct KICOMMON_API DATABASE_LIB_TABLE
 {
     std::string name;              ///< KiCad library nickname (will form part of the LIB_ID)
     std::string table;             ///< Database table to pull content from
@@ -96,14 +96,14 @@ struct DATABASE_LIB_TABLE
 };
 
 
-struct DATABASE_CACHE_SETTINGS
+struct KICOMMON_API DATABASE_CACHE_SETTINGS
 {
     int max_size;    ///< Maximum number of single-row results to cache
     int max_age;     ///< Max age of cached rows before they expire, in seconds
 };
 
 
-class DATABASE_LIB_SETTINGS : public JSON_SETTINGS
+class KICOMMON_API DATABASE_LIB_SETTINGS : public JSON_SETTINGS
 {
 public:
     DATABASE_LIB_SETTINGS( const std::string& aFilename );
diff --git include/dialog_shim.h include/dialog_shim.h
index c7249d36ab..2b54f65653 100644
--- include/dialog_shim.h
+++ include/dialog_shim.h
@@ -25,6 +25,7 @@
 #ifndef DIALOG_SHIM_
 #define DIALOG_SHIM_
 
+#include <kicommon.h>
 #include <wx/dialog.h>
 #include <kiway_player.h>
 class wxGridEvent;
@@ -79,7 +80,7 @@ class WX_EVENT_LOOP;
  * <br>
  * in the dialog window's properties.
  */
-class DIALOG_SHIM : public wxDialog, public KIWAY_HOLDER
+class KICOMMON_API DIALOG_SHIM : public wxDialog, public KIWAY_HOLDER
 {
 public:
     DIALOG_SHIM( wxWindow* aParent, wxWindowID id, const wxString& title,
diff --git include/dialogs/dialog_migrate_settings.h include/dialogs/dialog_migrate_settings.h
index d65ac31580..396125a3fd 100644
--- include/dialogs/dialog_migrate_settings.h
+++ include/dialogs/dialog_migrate_settings.h
@@ -27,7 +27,7 @@
 class SETTINGS_MANAGER;
 
 
-class DIALOG_MIGRATE_SETTINGS : public DIALOG_MIGRATE_SETTINGS_BASE
+class KICOMMON_API DIALOG_MIGRATE_SETTINGS : public DIALOG_MIGRATE_SETTINGS_BASE
 {
 public:
     DIALOG_MIGRATE_SETTINGS( SETTINGS_MANAGER* aManager );
diff --git include/env_vars.h include/env_vars.h
index ee7b78b2ac..ffb6ba8e8a 100644
--- include/env_vars.h
+++ include/env_vars.h
@@ -25,6 +25,7 @@
 #ifndef ENV_VARS_H
 #define ENV_VARS_H
 
+#include <kicommon.h>
 #include <wx/string.h>
 #include <map>
 #include <vector>
@@ -43,19 +44,19 @@ namespace ENV_VAR
      * @param  aEnvVar the variable to check
      * @return         true if predefined
      */
-    bool IsEnvVarImmutable( const wxString& aEnvVar );
+    KICOMMON_API bool IsEnvVarImmutable( const wxString& aEnvVar );
 
     /**
      * Get the list of pre-defined environment variables.
      */
-    const ENV_VAR_LIST& GetPredefinedEnvVars();
+    KICOMMON_API const ENV_VAR_LIST& GetPredefinedEnvVars();
 
     /**
      * Constructs a versioned environment variable based on this KiCad major version
      * @param aBaseName is the suffix, like TEMPLATE_DIR
      * @return an environment variable name, like KICAD8_TEMPLATE_DIR
      */
-    wxString GetVersionedEnvVarName( const wxString& aBaseName );
+    KICOMMON_API wxString GetVersionedEnvVarName( const wxString& aBaseName );
 
     /**
      * Attempts to retrieve the value of a versioned environment variable, such as
@@ -65,8 +66,8 @@ namespace ENV_VAR
      * @param aMap is an ENV_VAR_MAP (@see environment.h)
      * @param aBaseName is the suffix for the environment variable (@see GetVersionedEnvVarName)
      */
-    std::optional<wxString> GetVersionedEnvVarValue( const std::map<wxString, ENV_VAR_ITEM>& aMap,
-                                                     const wxString& aBaseName );
+    KICOMMON_API std::optional<wxString> GetVersionedEnvVarValue( const std::map<wxString, ENV_VAR_ITEM>& aMap,
+                                                                  const wxString& aBaseName );
 
     /**
      * Look up long-form help text for a given environment variable.
@@ -78,7 +79,7 @@ namespace ENV_VAR
      * @return         A string with help for that variable. Empty if
      *                 no help available for this variable.
      */
-    wxString LookUpEnvVarHelp( const wxString& aEnvVar );
+    KICOMMON_API wxString LookUpEnvVarHelp( const wxString& aEnvVar );
 
     /**
      * Get an environment variable as a specific type, if set correctly
@@ -87,7 +88,7 @@ namespace ENV_VAR
      * @return an std::optional containing the value, if set and parseable, otherwise empty.
      */
     template <typename VAL_TYPE>
-    std::optional<VAL_TYPE> GetEnvVar( const wxString& aEnvVarName );
+    KICOMMON_API std::optional<VAL_TYPE> GetEnvVar( const wxString& aEnvVarName );
 
     /**
      * Get a string environment variable, if it is set.
@@ -96,7 +97,7 @@ namespace ENV_VAR
      * @return an std::optional containing the value, if set, otherwise empty.
      */
     template<>
-    std::optional<wxString> GetEnvVar( const wxString& aEnvVarName );
+    KICOMMON_API std::optional<wxString> GetEnvVar( const wxString& aEnvVarName );
 
     /**
      * Get a double from an environment variable, if set
@@ -106,7 +107,7 @@ namespace ENV_VAR
      * otherwise empty.
      */
     template <>
-    std::optional<double> GetEnvVar( const wxString& aEnvVarName );
+    KICOMMON_API std::optional<double> GetEnvVar( const wxString& aEnvVarName );
 };
 
 #endif /* ENV_VARS_H */
diff --git include/gestfich.h include/gestfich.h
index 52d558d485..a01236a2c5 100644
--- include/gestfich.h
+++ include/gestfich.h
@@ -25,6 +25,7 @@
 #ifndef GESTFICH_H
 #define GESTFICH_H
 
+#include <kicommon.h>
 #include <wx/filename.h>
 #include <wx/process.h>
 
@@ -45,28 +46,29 @@ class EDA_LIST_DIALOG;
  * @param file the PDF file to open.
  * @return true is success or false if no PDF viewer found.
  */
-bool OpenPDF( const wxString& file );
-void OpenFile( const wxString& file );
+KICOMMON_API bool OpenPDF( const wxString& file );
+KICOMMON_API void  OpenFile( const wxString& file );
 
 /**
  * @param aSrcPath is the full filename of the source.
  * @param aDestPath is the full filename of the target
  * @param aErrors a wxString to *append* any errors to
  */
-void KiCopyFile( const wxString& aSrcPath, const wxString& aDestPath, wxString& aErrors );
+KICOMMON_API void KiCopyFile( const wxString& aSrcPath, const wxString& aDestPath,
+                              wxString& aErrors );
 
 /**
  * Call the executable file \a aEditorName with the parameter \a aFileName.
  */
-int ExecuteFile( const wxString& aEditorName, const wxString& aFileName = wxEmptyString,
-                 wxProcess* aCallback = nullptr );
+KICOMMON_API int ExecuteFile( const wxString& aEditorName, const wxString& aFileName = wxEmptyString,
+                              wxProcess* aCallback = nullptr );
 
 /**
  * Add un " to the start and the end of string (if not already done).
  *
  * @param string string to modify.
  */
-void QuoteString( wxString& string );
+KICOMMON_API void QuoteString( wxString& string );
 
 /**
  * Search the executable file shortname in KiCad binary path and return full file
@@ -78,7 +80,7 @@ void QuoteString( wxString& string );
  *   - c:\\kicad or /usr/local/kicad (the default).
  *   - default binary path.
  */
-wxString FindKicadFile( const wxString& shortname );
+KICOMMON_API wxString FindKicadFile( const wxString& shortname );
 
 /**
  * Quote return value of wxFileName::GetFullPath().
@@ -90,13 +92,13 @@ wxString FindKicadFile( const wxString& shortname );
  * @param format if provided, can be used to transform the nature of the wrapped filename
  *               to another platform.
  */
-extern wxString QuoteFullPath( wxFileName& fn, wxPathFormat format = wxPATH_NATIVE );
+KICOMMON_API extern wxString QuoteFullPath( wxFileName& fn, wxPathFormat format = wxPATH_NATIVE );
 
 
 /**
  * Removes the directory \a aDirName and all its contents including
  * subdirectories and their files
  */
-bool RmDirRecursive( const wxString& aDirName, wxString* aErrors = nullptr );
+KICOMMON_API bool RmDirRecursive( const wxString& aDirName, wxString* aErrors = nullptr );
 
 #endif /* GESTFICH_H */
diff --git include/kiway.h include/kiway.h
index ab28a03a1e..b6ab629a2c 100644
--- include/kiway.h
+++ include/kiway.h
@@ -275,7 +275,7 @@ struct KIFACE
  * and a #NETLIST, (anything relating to production of a single #BOARD and added to class
  * #PROJECT.)
  */
-class KIWAY : public wxEvtHandler
+class KICOMMON_API KIWAY : public wxEvtHandler
 {
     friend struct PGM_SINGLE_TOP;        // can use set_kiface()
 
@@ -403,7 +403,7 @@ public:
      */
     virtual void ProjectChanged();
 
-    KIWAY( PGM_BASE* aProgram, int aCtlBits, wxFrame* aTop = nullptr );
+    KIWAY( int aCtlBits, wxFrame* aTop = nullptr );
 
     /**
      * Overwrites previously set ctl bits, only for use in kicad.cpp to flip between
@@ -459,7 +459,6 @@ private:
     static KIFACE*  m_kiface[KIWAY_FACE_COUNT];
     static int      m_kiface_version[KIWAY_FACE_COUNT];
 
-    PGM_BASE*       m_program;
     int             m_ctl;
 
     wxFrame*        m_top;      // Usually m_top is the Project manager
diff --git include/kiway_express.h include/kiway_express.h
index 4c58f6b834..01a8d2bddd 100644
--- include/kiway_express.h
+++ include/kiway_express.h
@@ -28,6 +28,7 @@
 // @see http://wiki.wxwidgets.org/Custom_Events_Tutorial
 #include <frame_type.h>
 #include <mail_type.h>
+#include <kicommon.h>
 #include <wx/string.h>
 #include <wx/event.h>
 
@@ -35,7 +36,7 @@
 /**
  * Carry a payload from one #KIWAY_PLAYER to another within a #PROJECT.
  */
-class KIWAY_EXPRESS : public wxEvent
+class KICOMMON_API KIWAY_EXPRESS : public wxEvent
 {
 public:
     /**
diff --git include/kiway_holder.h include/kiway_holder.h
index 336432c4fe..61acee91c9 100644
--- include/kiway_holder.h
+++ include/kiway_holder.h
@@ -24,6 +24,8 @@
 #ifndef KIWAY_HOLDER_H_
 #define KIWAY_HOLDER_H_
 
+#include <kicommon.h>
+
 class KIWAY;
 class PROJECT;
 class wxWindow;
@@ -33,7 +35,7 @@ class wxWindow;
  *
  * It allows calls to Kiway() and SetKiway().
  */
-class KIWAY_HOLDER
+class KICOMMON_API KIWAY_HOLDER
 {
 public:
     enum HOLDER_TYPE { DIALOG, FRAME, PANEL };
diff --git include/launch_ext.h include/launch_ext.h
index 372a76f16c..72aef84e34 100644
--- include/launch_ext.h
+++ include/launch_ext.h
@@ -21,12 +21,14 @@
 #ifndef LAUNCH_EXT_H
 #define LAUNCH_EXT_H
 
+#include <kicommon.h>
+
 class wxString;
 
 /**
  * Launches the given file or folder in the host OS
  * @param aPath is a path to a file or folder
  */
-bool LaunchExternal( const wxString& aPath );
+KICOMMON_API bool LaunchExternal( const wxString& aPath );
 
 #endif
diff --git include/lib_table_base.h include/lib_table_base.h
index 3b4892f210..e30b9126d5 100644
--- include/lib_table_base.h
+++ include/lib_table_base.h
@@ -34,6 +34,7 @@
 #include <project.h>
 #include <string_utf8_map.h>
 #include <richio.h>
+#include <kicommon.h>
 
 class OUTPUTFORMATTER;
 class LIB_TABLE_LEXER;
@@ -55,14 +56,14 @@ typedef LIB_TABLE_ROWS::const_iterator     LIB_TABLE_ROWS_CITER;
  * store pointers the data is cloned.  Copying and assigning pointers would cause ownership
  * issues if the standard C++ containers were used.
  */
-LIB_TABLE_ROW* new_clone( const LIB_TABLE_ROW& aRow );
+KICOMMON_API LIB_TABLE_ROW* new_clone( const LIB_TABLE_ROW& aRow );
 
 
 /**
  * Hold a record identifying a library accessed by the appropriate plug in object in the
  * #LIB_TABLE.  This is an abstract base class from which to derive library specific rows.
  */
-class LIB_TABLE_ROW
+class KICOMMON_API LIB_TABLE_ROW
 {
 public:
     LIB_TABLE_ROW() :
@@ -292,7 +293,7 @@ private:
  *
  * @author Wayne Stambaugh
  */
-class LIB_TABLE : public PROJECT::_ELEM
+class KICOMMON_API LIB_TABLE : public PROJECT::_ELEM
 {
 public:
     /**
diff --git include/notifications_manager.h include/notifications_manager.h
index c64bfa5aa1..c79b55f482 100644
--- include/notifications_manager.h
+++ include/notifications_manager.h
@@ -25,6 +25,7 @@
 #ifndef NOTIFICATIONS_MANAGER_H
 #define NOTIFICATIONS_MANAGER_H
 
+#include <kicommon.h>
 #include <functional>
 #include <vector>
 
@@ -36,7 +37,7 @@ class wxWindow;
 class wxCloseEvent;
 
 
-struct NOTIFICATION
+struct KICOMMON_API NOTIFICATION
 {
 public:
     wxString title; ///< Title of the notification
@@ -47,7 +48,7 @@ public:
 };
 
 
-class NOTIFICATIONS_MANAGER
+class KICOMMON_API NOTIFICATIONS_MANAGER
 {
     friend class NOTIFICATION_LIST;
 
diff --git include/pgm_base.h include/pgm_base.h
index c25ccd7519..22acf09112 100644
--- include/pgm_base.h
+++ include/pgm_base.h
@@ -31,6 +31,7 @@
 #ifndef  PGM_BASE_H_
 #define  PGM_BASE_H_
 
+#include <kicommon.h>
 #include <exception>
 #include <map>
 #include <vector>
@@ -58,7 +59,7 @@ class SCRIPTING;
  * maintainer's convenience.  To add a support to a new translation add a new item
  * to #LanguagesList[].
  */
-struct LANGUAGE_DESCR
+struct KICOMMON_API LANGUAGE_DESCR
 {
     /// wxWidgets locale identifier (See wxWidgets doc)
     int         m_WX_Lang_Identifier;
@@ -77,7 +78,7 @@ struct LANGUAGE_DESCR
 /**
  * An array containing all the languages that KiCad supports.
  */
-extern LANGUAGE_DESCR LanguagesList[];
+KICOMMON_API extern LANGUAGE_DESCR LanguagesList[];
 
 /**
  * Container for data for KiCad programs.
@@ -92,7 +93,7 @@ extern LANGUAGE_DESCR LanguagesList[];
  * - OnPgmEnd() is virtual, may be overridden, and parallels wxApp::OnExit(), from where it
  *   should be called.
  */
-class PGM_BASE
+class KICOMMON_API PGM_BASE
 {
 public:
     PGM_BASE();
@@ -430,11 +431,13 @@ protected:
 
 /// The global Program "get" accessor.
 /// Implemented in: 1) common/single_top.cpp,  2) kicad/kicad.cpp, and 3) scripting/kiway.i
-extern PGM_BASE& Pgm();
+KICOMMON_API extern PGM_BASE& Pgm();
 
 /// similar to PGM_BASE& Pgm(), but return a reference that can be nullptr
 /// when running a shared lib from a script, not from a kicad appl
-extern PGM_BASE* PgmOrNull();
+KICOMMON_API extern PGM_BASE* PgmOrNull();
+
+KICOMMON_API extern void SetPgm( PGM_BASE* pgm );
 
 
 #endif  // PGM_BASE_H_
diff --git include/project.h include/project.h
index 8425e266f7..ebc20adae4 100644
--- include/project.h
+++ include/project.h
@@ -58,7 +58,7 @@ class PROJECT_LOCAL_SETTINGS;
  * Because it is in the neutral program top, which is not linked to by subsidiary DSOs,
  * any functions in this interface must be virtual.
  */
-class PROJECT
+class KICOMMON_API PROJECT
 {
 public:
     /**
@@ -69,7 +69,7 @@ public:
      * include derived class headers in this file, you are doing incompatible with the goal
      * of this class.  Keep knowledge of derived classes opaque to class PROJECT please.
     */
-    class _ELEM
+    class KICOMMON_API _ELEM
     {
     public:
         virtual ~_ELEM() {}
diff --git include/project/board_project_settings.h include/project/board_project_settings.h
index 046e0b7ab1..7184937f69 100644
--- include/project/board_project_settings.h
+++ include/project/board_project_settings.h
@@ -39,7 +39,7 @@
  * Selection filtering that applies all the time (not the "filter selection" dialog that modifies
  * the current selection)
  */
-struct SELECTION_FILTER_OPTIONS
+struct KICOMMON_API SELECTION_FILTER_OPTIONS
 {
     bool lockedItems;   ///< Allow selecting locked items
     bool footprints;    ///< Allow selecting entire footprints
@@ -125,7 +125,7 @@ enum class RATSNEST_MODE
 };
 
 ///< BOM Data choices for IPC2581 export
-struct IP2581_BOM
+struct KICOMMON_API IP2581_BOM
 {
     wxString mfg;       ///< Manufacturer name column
     wxString MPN;     ///< Manufacturer part number column
@@ -137,7 +137,7 @@ struct IP2581_BOM
 /**
  * A saved set of layers that are visible.
  */
-struct LAYER_PRESET
+struct KICOMMON_API LAYER_PRESET
 {
     LAYER_PRESET( const wxString& aName = wxS( "" ) ) :
             name( aName ),
@@ -184,7 +184,7 @@ struct LAYER_PRESET
 };
 
 
-class PARAM_LAYER_PRESET : public PARAM_LAMBDA<nlohmann::json>
+class KICOMMON_API PARAM_LAYER_PRESET : public PARAM_LAMBDA<nlohmann::json>
 {
 public:
     PARAM_LAYER_PRESET( const std::string& aPath, std::vector<LAYER_PRESET>* aPresetList );
@@ -198,7 +198,7 @@ private:
 };
 
 
-struct VIEWPORT
+struct KICOMMON_API VIEWPORT
 {
     VIEWPORT( const wxString& aName = wxEmptyString ) :
             name( aName )
@@ -214,7 +214,7 @@ struct VIEWPORT
 };
 
 
-class PARAM_VIEWPORT : public PARAM_LAMBDA<nlohmann::json>
+class KICOMMON_API PARAM_VIEWPORT : public PARAM_LAMBDA<nlohmann::json>
 {
 public:
     PARAM_VIEWPORT( const std::string& aPath, std::vector<VIEWPORT>* aViewportList );
@@ -228,7 +228,7 @@ private:
 };
 
 
-struct VIEWPORT3D
+struct KICOMMON_API VIEWPORT3D
 {
     VIEWPORT3D( const wxString& aName = wxEmptyString ) :
             name( aName )
@@ -244,7 +244,7 @@ struct VIEWPORT3D
 };
 
 
-class PARAM_VIEWPORT3D : public PARAM_LAMBDA<nlohmann::json>
+class KICOMMON_API PARAM_VIEWPORT3D : public PARAM_LAMBDA<nlohmann::json>
 {
 public:
     PARAM_VIEWPORT3D( const std::string& aPath, std::vector<VIEWPORT3D>* aViewportList );
diff --git include/project/net_settings.h include/project/net_settings.h
index 7416ff82ee..6c909193d2 100644
--- include/project/net_settings.h
+++ include/project/net_settings.h
@@ -30,7 +30,7 @@
  * NET_SETTINGS stores various net-related settings in a project context.  These settings are
  * accessible and editable from both the schematic and PCB editors.
  */
-class NET_SETTINGS : public NESTED_SETTINGS
+class KICOMMON_API NET_SETTINGS : public NESTED_SETTINGS
 {
 public:
     NET_SETTINGS( JSON_SETTINGS* aParent, const std::string& aPath );
diff --git include/project/project_archiver.h include/project/project_archiver.h
index a6ddd3f3d7..1fccbb4478 100644
--- include/project/project_archiver.h
+++ include/project/project_archiver.h
@@ -21,6 +21,7 @@
 #define KICAD_PROJECT_ARCHIVER_H
 
 #include <wx/string.h>
+#include <kicommon.h>
 
 
 class PROJECT;
@@ -28,7 +29,7 @@ class REPORTER;
 class SETTINGS_MANAGER;
 
 
-class PROJECT_ARCHIVER
+class KICOMMON_API PROJECT_ARCHIVER
 {
 public:
     PROJECT_ARCHIVER();
diff --git include/project/project_file.h include/project/project_file.h
index 506a03f8b0..9041b42acc 100644
--- include/project/project_file.h
+++ include/project/project_file.h
@@ -66,7 +66,7 @@ enum LAST_PATH_TYPE : unsigned int
  * There is either zero or one PROJECT_FILE for every PROJECT
  * (you can have a dummy PROJECT that has no file)
  */
-class PROJECT_FILE : public JSON_SETTINGS
+class KICOMMON_API PROJECT_FILE : public JSON_SETTINGS
 {
 public:
     /**
diff --git include/project/project_local_settings.h include/project/project_local_settings.h
index 09491b207c..7bf6ce9995 100644
--- include/project/project_local_settings.h
+++ include/project/project_local_settings.h
@@ -30,7 +30,7 @@
 
 class PROJECT;
 
-struct PROJECT_FILE_STATE
+struct KICOMMON_API PROJECT_FILE_STATE
 {
     wxString fileName;
     bool open;
@@ -50,7 +50,7 @@ struct PROJECT_FILE_STATE
  * This file doesn't need to exist for a project to be loaded.  It will be created on-demand if
  * any of the things stored here are modified by the user.
  */
-class PROJECT_LOCAL_SETTINGS : public JSON_SETTINGS
+class KICOMMON_API PROJECT_LOCAL_SETTINGS : public JSON_SETTINGS
 {
 public:
     PROJECT_LOCAL_SETTINGS( PROJECT* aProject, const wxString& aFilename );
diff --git include/search_stack.h include/search_stack.h
index 5a2b134424..d237739956 100644
--- include/search_stack.h
+++ include/search_stack.h
@@ -26,6 +26,7 @@
 #ifndef SEARCH_STACK_H_
 #define SEARCH_STACK_H_
 
+#include <kicommon.h>
 #include <wx/filefn.h>
 #include <wx/filename.h>
 #include <project.h>
@@ -38,7 +39,7 @@
  * reminder that anything you put in here means searching work at some point in time.
  * (An alternative is to simply know where something is.)
  */
-class SEARCH_STACK : public wxPathList, public PROJECT::_ELEM
+class KICOMMON_API SEARCH_STACK : public wxPathList, public PROJECT::_ELEM
 {
 public:
     KICAD_T Type() override { return SEARCH_STACK_T; }
diff --git include/settings/app_settings.h include/settings/app_settings.h
index 030c51499b..5637c4991d 100644
--- include/settings/app_settings.h
+++ include/settings/app_settings.h
@@ -28,7 +28,7 @@
 /**
  * Cross-probing behavior
  */
-struct CROSS_PROBING_SETTINGS
+struct KICOMMON_API CROSS_PROBING_SETTINGS
 {
     bool on_selection;  ///< Synchronize the selection for multiple items too
     bool center_on_items; ///< Automatically pan to cross-probed items
@@ -39,7 +39,7 @@ struct CROSS_PROBING_SETTINGS
 /**
  * Common cursor settings, available to every frame
  */
-struct CURSOR_SETTINGS
+struct KICOMMON_API CURSOR_SETTINGS
 {
     bool always_show_cursor;
     bool fullscreen_cursor;
@@ -57,7 +57,7 @@ enum class ARC_EDIT_MODE
 /**
 * Stores the window positioning/state
 */
-struct WINDOW_STATE
+struct KICOMMON_API WINDOW_STATE
 {
     bool maximized;
     int size_x;
@@ -70,7 +70,7 @@ struct WINDOW_STATE
 /**
  * Stores the common settings that are saved and loaded for each window / frame
  */
-struct WINDOW_SETTINGS
+struct KICOMMON_API WINDOW_SETTINGS
 {
     WINDOW_STATE state;
     wxString mru_path;
@@ -88,7 +88,7 @@ struct WINDOW_SETTINGS
  *
  * COMMON_SETTINGS stores settings that are always the same across all applications.
  */
-class APP_SETTINGS_BASE : public JSON_SETTINGS
+class KICOMMON_API APP_SETTINGS_BASE : public JSON_SETTINGS
 {
 public:
     struct FIND_REPLACE
diff --git include/settings/color_settings.h include/settings/color_settings.h
index ab8338bc0c..319c533877 100644
--- include/settings/color_settings.h
+++ include/settings/color_settings.h
@@ -48,7 +48,7 @@ using KIGFX::COLOR4D;
  * Each application (eeschema, gerbview, pcbnew) can have a different active color scheme selected.
  * The "child applications" (library editors) inherit from either eeschema or pcbnew.
  */
-class COLOR_SETTINGS : public JSON_SETTINGS
+class KICOMMON_API COLOR_SETTINGS : public JSON_SETTINGS
 {
 public:
     explicit COLOR_SETTINGS( const wxString& aFilename = wxT( "user" ),
diff --git include/settings/common_settings.h include/settings/common_settings.h
index 7c3c68d743..e4e765e7c6 100644
--- include/settings/common_settings.h
+++ include/settings/common_settings.h
@@ -44,7 +44,7 @@ enum class ICON_THEME
 };
 
 
-class COMMON_SETTINGS : public JSON_SETTINGS
+class KICOMMON_API COMMON_SETTINGS : public JSON_SETTINGS
 {
 public:
     struct APPEARANCE
diff --git include/settings/kicad_settings.h include/settings/kicad_settings.h
index 260d6e29f0..20e6905841 100644
--- include/settings/kicad_settings.h
+++ include/settings/kicad_settings.h
@@ -25,7 +25,7 @@
 #define PCM_DEFAULT_REPOSITORY_URL "https://repository.kicad.org/repository.json"
 
 
-class KICAD_SETTINGS : public APP_SETTINGS_BASE
+class KICOMMON_API KICAD_SETTINGS : public APP_SETTINGS_BASE
 {
 public:
     KICAD_SETTINGS();
diff --git include/settings/parameters.h include/settings/parameters.h
index dc6308758b..15a3826d9a 100644
--- include/settings/parameters.h
+++ include/settings/parameters.h
@@ -300,7 +300,8 @@ public:
             m_default( std::move( aDefault ) ),
             m_getter( std::move( aGetter ) ),
             m_setter( std::move( aSetter ) )
-    { }
+    {
+    }
 
     void Load( JSON_SETTINGS* aSettings, bool aResetIfMissing = true ) const override
     {
@@ -367,11 +368,17 @@ private:
     std::function<void( ValueType )> m_setter;
 };
 
-
+#ifdef _MSC_VER
+template class KICOMMON_API PARAM_LAMBDA<bool>;
+template class KICOMMON_API PARAM_LAMBDA<int>;
+template class KICOMMON_API PARAM_LAMBDA<nlohmann::json>;
+template class KICOMMON_API PARAM_LAMBDA<std::string>;
+#else
 extern template class APIVISIBLE PARAM_LAMBDA<bool>;
 extern template class APIVISIBLE PARAM_LAMBDA<int>;
 extern template class APIVISIBLE PARAM_LAMBDA<nlohmann::json>;
 extern template class APIVISIBLE PARAM_LAMBDA<std::string>;
+#endif
 
 /**
  * Represents a parameter that has a scaling factor between the value in the file and the
@@ -550,15 +557,25 @@ protected:
 };
 
 
+#ifdef _MSC_VER
+template class KICOMMON_API PARAM_LIST<bool>;
+template class KICOMMON_API PARAM_LIST<int>;
+template class KICOMMON_API PARAM_LIST<double>;
+template class KICOMMON_API PARAM_LIST<KIGFX::COLOR4D>;
+template class KICOMMON_API PARAM_LIST<struct BOM_PRESET>;
+template class KICOMMON_API PARAM_LIST<struct BOM_FMT_PRESET>;
+template class KICOMMON_API PARAM_LIST<GRID>;
+template class KICOMMON_API PARAM_LIST<wxString>;
+#else
 extern template class APIVISIBLE PARAM_LIST<bool>;
 extern template class APIVISIBLE PARAM_LIST<int>;
 extern template class APIVISIBLE PARAM_LIST<double>;
 extern template class APIVISIBLE PARAM_LIST<KIGFX::COLOR4D>;
-//template KICOMMON_EXTERN_DECL class PARAM_LIST<FILE_INFO_PAIR>;
 extern template class APIVISIBLE PARAM_LIST<struct BOM_PRESET>;
 extern template class APIVISIBLE PARAM_LIST<struct BOM_FMT_PRESET>;
 extern template class APIVISIBLE PARAM_LIST<GRID>;
 extern template class APIVISIBLE PARAM_LIST<wxString>;
+#endif
 
 
 template<typename Type>
@@ -639,7 +656,11 @@ protected:
     std::set<Type>  m_default;
 };
 
+#ifdef _MSC_VER
+template class KICOMMON_API PARAM_SET<wxString>;
+#else
 extern template class APIVISIBLE PARAM_SET<wxString>;
+#endif
 
 /**
  * Represents a list of strings holding directory paths.
@@ -776,9 +797,15 @@ private:
 };
 
 
+#ifdef _MSC_VER
+template class KICOMMON_API PARAM_MAP<int>;
+template class KICOMMON_API PARAM_MAP<double>;
+template class KICOMMON_API PARAM_MAP<bool>;
+#else
 extern template class APIVISIBLE PARAM_MAP<int>;
 extern template class APIVISIBLE PARAM_MAP<double>;
 extern template class APIVISIBLE PARAM_MAP<bool>;
+#endif
 
 
 /**
diff --git include/settings/settings_manager.h include/settings/settings_manager.h
index bf390084b7..62da063a54 100644
--- include/settings/settings_manager.h
+++ include/settings/settings_manager.h
@@ -41,7 +41,7 @@ class LOCKFILE;
 #define PROJECT_BACKUPS_DIR_SUFFIX wxT( "-backups" )
 
 
-class SETTINGS_MANAGER
+class KICOMMON_API SETTINGS_MANAGER
 {
 public:
     SETTINGS_MANAGER( bool aHeadless = false );
diff --git include/systemdirsappend.h include/systemdirsappend.h
index 1f7348f11c..2f9dd51f93 100644
--- include/systemdirsappend.h
+++ include/systemdirsappend.h
@@ -37,12 +37,12 @@ class SEARCH_STACK;
  * Append system places to \a aSearchStack in a platform specific way and pertinent
  * to KiCad programs.
  */
-void SystemDirsAppend( SEARCH_STACK* aSearchStack );
+KICOMMON_API void SystemDirsAppend( SEARCH_STACK* aSearchStack );
 
 /**
  * Initialize aDst SEARCH_STACK with KIFACE (DSO) specific settings.
  * Adds libraries, docs, template paths to the search stack.
  */
-void GlobalPathsAppend( SEARCH_STACK* aDst, KIWAY::FACE_T aId );
+KICOMMON_API void GlobalPathsAppend( SEARCH_STACK* aDst, KIWAY::FACE_T aId );
 
 #endif  // INCLUDE__SYSTEM_DIRS_APPEND_H_
diff --git include/widgets/bitmap_button.h include/widgets/bitmap_button.h
index 05ced04548..95d869ffa5 100644
--- include/widgets/bitmap_button.h
+++ include/widgets/bitmap_button.h
@@ -25,6 +25,7 @@
 #ifndef BITMAP_BUTTON_H_
 #define BITMAP_BUTTON_H_
 
+#include <kicommon.h>
 #include <wx/bmpbndl.h>
 #include <wx/panel.h>
 #include <wx/colour.h>
@@ -37,7 +38,7 @@
  *     * It has a rectangle highlight when the mouse is hovering/pressed
  *     * It has the ability to be checked/toggled
  */
-class BITMAP_BUTTON : public wxPanel
+class KICOMMON_API BITMAP_BUTTON : public wxPanel
 {
 public:
     BITMAP_BUTTON( wxWindow* aParent, wxWindowID aId, const wxPoint& aPos = wxDefaultPosition,
diff --git include/widgets/kistatusbar.h include/widgets/kistatusbar.h
index e14678d30c..a1dcb84d2b 100644
--- include/widgets/kistatusbar.h
+++ include/widgets/kistatusbar.h
@@ -25,6 +25,8 @@
 #ifndef KISTATUSBAR_H
 #define KISTATUSBAR_H
 
+#include <kicommon.h>
+
 class wxGauge;
 class wxButton;
 class wxStaticText;
@@ -39,7 +41,7 @@ class BITMAP_BUTTON;
  * Background notifications button (FIELD_OFFSET_NOTIFICATION_BUTTON  offset id)
  */
 
-class KISTATUSBAR : public wxStatusBar
+class KICOMMON_API KISTATUSBAR : public wxStatusBar
 {
 public:
     KISTATUSBAR( int aNumberFields, wxWindow* parent, wxWindowID id );
diff --git include/widgets/ui_common.h include/widgets/ui_common.h
index 05b0ec8584..ae06f45e1a 100644
--- include/widgets/ui_common.h
+++ include/widgets/ui_common.h
@@ -26,6 +26,7 @@
 #ifndef UI_COMMON_H
 #define UI_COMMON_H
 
+#include <kicommon.h>
 #include "report_severity.h"      // enum SEVERITY
 #include <wx/string.h>
 #include <wx/font.h>
@@ -51,20 +52,20 @@ namespace KIUI
  * Get the standard margin around a widget in the KiCad UI
  * @return margin in pixels
  */
-int GetStdMargin();
+KICOMMON_API int GetStdMargin();
 
 /**
  * Return the size of @a aSingleLine of text when it is rendered in @a aWindow
  * using whatever font is currently set in that window.
  */
-wxSize GetTextSize( const wxString& aSingleLine, wxWindow* aWindow );
+KICOMMON_API wxSize GetTextSize( const wxString& aSingleLine, wxWindow* aWindow );
 
-wxFont GetMonospacedUIFont();
+KICOMMON_API wxFont GetMonospacedUIFont();
 
-wxFont GetControlFont( wxWindow* aWindow );
-wxFont GetInfoFont( wxWindow* aWindow );
-wxFont GetDockedPaneFont( wxWindow* aWindow );
-wxFont GetStatusFont( wxWindow* aWindow );
+KICOMMON_API wxFont GetControlFont( wxWindow* aWindow );
+KICOMMON_API wxFont GetInfoFont( wxWindow* aWindow );
+KICOMMON_API wxFont GetDockedPaneFont( wxWindow* aWindow );
+KICOMMON_API wxFont GetStatusFont( wxWindow* aWindow );
 
 /**
  * Set the minimum pixel width on a text control in order to make a text
@@ -80,33 +81,33 @@ wxFont GetStatusFont( wxWindow* aWindow );
  *   the text already within the control is used.
  * @return true if the \a aCtrl had its size changed, else false.
  */
-bool EnsureTextCtrlWidth( wxTextCtrl* aCtrl, const wxString* aString = nullptr );
+KICOMMON_API bool EnsureTextCtrlWidth( wxTextCtrl* aCtrl, const wxString* aString = nullptr );
 
 /**
  * Select the number (or "?") in a reference for ease of editing.
  */
-void SelectReferenceNumber( wxTextEntry* aTextEntry );
+KICOMMON_API void SelectReferenceNumber( wxTextEntry* aTextEntry );
 
 /**
  * Ellipsize text (at the end) to be no more than 1/3 of the window width.
  *
  * @return shortened text ending with an ellipsis.
  */
-wxString EllipsizeStatusText( wxWindow* aWindow, const wxString& aString );
+KICOMMON_API wxString EllipsizeStatusText( wxWindow* aWindow, const wxString& aString );
 
 /**
  * Ellipsize text (at the end) to be no more than 36 characters.
  *
  * @return shortened text ending with an ellipsis.
  */
-wxString EllipsizeMenuText( const wxString& aString );
+KICOMMON_API wxString EllipsizeMenuText( const wxString& aString );
 
 /**
  * Check if a input control has focus.
  *
  * @param aFocus Control that has focus, if null, wxWidgets will be queried
  */
-bool IsInputControlFocused( wxWindow* aFocus = nullptr );
+KICOMMON_API bool IsInputControlFocused( wxWindow* aFocus = nullptr );
 
 /**
  * Check if a input control has focus.
@@ -115,17 +116,17 @@ bool IsInputControlFocused( wxWindow* aFocus = nullptr );
  * @return True if control is input and editable OR control is not a input. False if control is
  *         input and not editable.
  */
-bool IsInputControlEditable( wxWindow* aControl );
+KICOMMON_API bool IsInputControlEditable( wxWindow* aControl );
 
-bool IsModalDialogFocused();
+KICOMMON_API bool IsModalDialogFocused();
 
 /**
  * Makes a window read-only.  Does some extra work over wxWindow::Disable() to make sure you
  * can still scroll around in sub-windows.
  */
-void Disable( wxWindow* aWindow );
+KICOMMON_API void Disable( wxWindow* aWindow );
 
-extern const wxString s_FocusStealableInputName;
+KICOMMON_API extern const wxString s_FocusStealableInputName;
 
 
 /**
@@ -138,7 +139,7 @@ extern const wxString s_FocusStealableInputName;
  * @param aMenu is the menuitem.
  * @param aImage is the icon to add to aMenu.
  */
-void AddBitmapToMenuItem( wxMenuItem* aMenu, const wxBitmap& aImage );
+KICOMMON_API void AddBitmapToMenuItem( wxMenuItem* aMenu, const wxBitmap& aImage );
 
 
 /**
@@ -151,8 +152,8 @@ void AddBitmapToMenuItem( wxMenuItem* aMenu, const wxBitmap& aImage );
  * @param aType is the type of menu :wxITEM_NORMAL (default), wxITEM_CHECK ...
  * @return a pointer to the new created wxMenuItem.
  */
-wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wxBitmap& aImage,
-                         wxItemKind aType = wxITEM_NORMAL );
+KICOMMON_API wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wxBitmap& aImage,
+                                      wxItemKind aType = wxITEM_NORMAL );
 
 
 /**
@@ -166,8 +167,8 @@ wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wx
  * @param aType is the type of menu :wxITEM_NORMAL (default), wxITEM_CHECK ...
  * @return a pointer to the new created wxMenuItem.
  */
-wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wxString& aHelpText,
-                         const wxBitmap& aImage, wxItemKind aType = wxITEM_NORMAL );
+KICOMMON_API wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wxString& aHelpText,
+                                      const wxBitmap& aImage, wxItemKind aType = wxITEM_NORMAL );
 
 
 /**
@@ -180,8 +181,8 @@ wxMenuItem* AddMenuItem( wxMenu* aMenu, int aId, const wxString& aText, const wx
  * @param aImage is the icon to add to the new menu item.
  * @return a pointer to the new created wxMenuItem,
  */
-wxMenuItem* AddMenuItem( wxMenu* aMenu, wxMenu* aSubMenu, int aId, const wxString& aText,
-                         const wxBitmap& aImage );
+KICOMMON_API wxMenuItem* AddMenuItem( wxMenu* aMenu, wxMenu* aSubMenu, int aId, const wxString& aText,
+                                      const wxBitmap& aImage );
 
 
 /**
@@ -196,12 +197,12 @@ wxMenuItem* AddMenuItem( wxMenu* aMenu, wxMenu* aSubMenu, int aId, const wxStrin
  * @param aImage is the icon to add to the new menu item.
  * @return a pointer to the new created wxMenuItem.
  */
-wxMenuItem* AddMenuItem( wxMenu* aMenu, wxMenu* aSubMenu, int aId, const wxString& aText,
-                         const wxString& aHelpText, const wxBitmap& aImage );
+KICOMMON_API wxMenuItem* AddMenuItem( wxMenu* aMenu, wxMenu* aSubMenu, int aId, const wxString& aText,
+                                      const wxString& aHelpText, const wxBitmap& aImage );
 }
 
-SEVERITY SeverityFromString( const wxString& aSeverity );
+KICOMMON_API SEVERITY SeverityFromString( const wxString& aSeverity );
 
-wxString SeverityToString( const SEVERITY& aSeverity );
+KICOMMON_API wxString SeverityToString( const SEVERITY& aSeverity );
 
 #endif // UI_COMMON_H
diff --git kicad/kicad.cpp kicad/kicad.cpp
index 8c4ac5cf7b..8ada0831fa 100644
--- kicad/kicad.cpp
+++ kicad/kicad.cpp
@@ -73,20 +73,6 @@ KIFACE_BASE& Kiface()
 
 static PGM_KICAD program;
 
-
-PGM_BASE& Pgm()
-{
-    return program;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return &program;
-}
-
-
 PGM_KICAD& PgmTop()
 {
     return program;
@@ -414,7 +400,7 @@ void PGM_KICAD::Destroy()
 }
 
 
-KIWAY  Kiway( &Pgm(), KFCTL_CPP_PROJECT_SUITE );
+KIWAY  Kiway( KFCTL_CPP_PROJECT_SUITE );
 
 #ifdef NDEBUG
 // Define a custom assertion handler
@@ -435,6 +421,8 @@ struct APP_KICAD : public wxApp
 {
     APP_KICAD() : wxApp()
     {
+        SetPgm( &program );
+
         // Init the environment each platform wants
         KIPLATFORM::ENV::Init();
     }
diff --git kicad/kicad_cli.cpp kicad/kicad_cli.cpp
index 6e99bf6bc0..264fb92118 100644
--- kicad/kicad_cli.cpp
+++ kicad/kicad_cli.cpp
@@ -93,28 +93,6 @@ KIFACE_BASE& Kiface()
 }
 
 
-static PGM_KICAD program;
-
-
-PGM_BASE& Pgm()
-{
-    return program;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return &program;
-}
-
-
-PGM_KICAD& PgmTop()
-{
-    return program;
-}
-
-
 struct COMMAND_ENTRY
 {
     CLI::COMMAND* handler;
@@ -458,8 +436,9 @@ void PGM_KICAD::Destroy()
 }
 
 
-KIWAY Kiway( &Pgm(), KFCTL_CPP_PROJECT_SUITE | KFCTL_CLI );
+KIWAY Kiway( KFCTL_CPP_PROJECT_SUITE | KFCTL_CLI );
 
+static PGM_KICAD program;
 
 /**
  * Not publicly visible because most of the action is in #PGM_KICAD these days.
@@ -468,6 +447,8 @@ struct APP_KICAD_CLI : public wxAppConsole
 {
     APP_KICAD_CLI() : wxAppConsole()
     {
+        SetPgm( &program );
+
         // Init the environment each platform wants
         KIPLATFORM::ENV::Init();
     }
diff --git pagelayout_editor/CMakeLists.txt pagelayout_editor/CMakeLists.txt
index 731b7e712f..3003c132d2 100644
--- pagelayout_editor/CMakeLists.txt
+++ pagelayout_editor/CMakeLists.txt
@@ -74,14 +74,9 @@ endif()
 # a very small program launcher for pl_editor_kiface
 add_executable( pl_editor WIN32 MACOSX_BUNDLE
     ${CMAKE_SOURCE_DIR}/common/single_top.cpp
-    ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp
     ${PL_EDITOR_RESOURCES}
     )
 
-if( KICAD_USE_SENTRY )
-    set_property(SOURCE ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
-endif()
-
 set_source_files_properties( ${CMAKE_SOURCE_DIR}/common/single_top.cpp PROPERTIES
     COMPILE_DEFINITIONS "TOP_FRAME=FRAME_PL_EDITOR;PGM_DATA_FILE_EXT=\"kicad_wks\";BUILD_KIWAY_DLL"
     )
@@ -91,6 +86,7 @@ target_link_libraries( pl_editor
     gal
     common
     core
+    kicommon
     ${wxWidgets_LIBRARIES}
     )
 
diff --git pagelayout_editor/pl_editor.cpp pagelayout_editor/pl_editor.cpp
index b83cd47ff7..cc01d7bbbe 100644
--- pagelayout_editor/pl_editor.cpp
+++ pagelayout_editor/pl_editor.cpp
@@ -124,9 +124,6 @@ static struct IFACE : public KIFACE_BASE, public UNITS_PROVIDER
 using namespace PGE;
 
 
-static PGM_BASE* process;
-
-
 KIFACE_BASE& Kiface() { return kiface; }
 
 
@@ -134,24 +131,9 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER(  int* aKIFACEversion, int aKiwayVersion, PGM_BASE* aProgram )
 {
-    process = (PGM_BASE*) aProgram;
     return &kiface;
 }
 
-
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     InitSettings( new PL_EDITOR_SETTINGS );
diff --git pcb_calculator/CMakeLists.txt pcb_calculator/CMakeLists.txt
index b1e4be0f54..b019eefc00 100644
--- pcb_calculator/CMakeLists.txt
+++ pcb_calculator/CMakeLists.txt
@@ -88,14 +88,9 @@ endif()
 
 add_executable( pcb_calculator WIN32 MACOSX_BUNDLE
     ${CMAKE_SOURCE_DIR}/common/single_top.cpp
-    ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp
     ${PCB_CALCULATOR_RESOURCES}
     )
 
-if( KICAD_USE_SENTRY )
-    set_property(SOURCE ${CMAKE_SOURCE_DIR}/common/pgm_base.cpp APPEND PROPERTY COMPILE_DEFINITIONS KICAD_SENTRY_DSN="${KICAD_SENTRY_DSN}")
-endif()
-
 set_source_files_properties( ${CMAKE_SOURCE_DIR}/common/single_top.cpp PROPERTIES
     COMPILE_DEFINITIONS "TOP_FRAME=FRAME_CALC;BUILD_KIWAY_DLL"
     )
@@ -103,6 +98,7 @@ target_link_libraries( pcb_calculator
     #singletop  # replaces common, giving us restrictive control and link warnings.
     # There's way too much crap coming in from common yet.
     common
+    kicommon
     ${wxWidgets_LIBRARIES}
     )
 
diff --git pcb_calculator/pcb_calculator.cpp pcb_calculator/pcb_calculator.cpp
index 6ce2e49f7d..8480b11147 100644
--- pcb_calculator/pcb_calculator.cpp
+++ pcb_calculator/pcb_calculator.cpp
@@ -72,8 +72,6 @@ static struct IFACE : public KIFACE_BASE
 
 using namespace PCBCALC;
 
-static PGM_BASE* process;
-
 
 KIFACE_BASE& Kiface() { return kiface; }
 
@@ -82,24 +80,10 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER(  int* aKIFACEversion, int aKiwayVersion, PGM_BASE* aProgram )
 {
-    process = (PGM_BASE*) aProgram;
     return &kiface;
 }
 
 
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     InitSettings( new PCB_CALCULATOR_SETTINGS );
diff --git pcbnew/pcbnew.cpp pcbnew/pcbnew.cpp
index 44f3943e87..548dfc5e57 100644
--- pcbnew/pcbnew.cpp
+++ pcbnew/pcbnew.cpp
@@ -351,9 +351,6 @@ private:
 using namespace PCB;
 
 
-static PGM_BASE* process;
-
-
 KIFACE_BASE& Kiface() { return kiface; }
 
 
@@ -361,27 +358,10 @@ KIFACE_BASE& Kiface() { return kiface; }
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE_API KIFACE* KIFACE_GETTER( int* aKIFACEversion, int aKiwayVersion, PGM_BASE* aProgram )
 {
-    process = aProgram;
     return &kiface;
 }
 
 
-#if defined( BUILD_KIWAY_DLL )
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from a python script.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-#endif
-
-
 /// The global footprint library table.  This is not dynamically allocated because
 /// in a multiple project environment we must keep its address constant (since it is
 /// the fallback table for multiple projects).
diff --git qa/mocks/kicad/common_mocks.cpp qa/mocks/kicad/common_mocks.cpp
index 02018743b1..c949c8e31f 100644
--- qa/mocks/kicad/common_mocks.cpp
+++ qa/mocks/kicad/common_mocks.cpp
@@ -30,22 +30,6 @@
 #include <mock_pgm_base.h>
 
 
-PGM_BASE& Pgm()
-{
-    static MOCK_PGM_BASE program;
-    return program;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from
-// a python script or something else.
-// Therefore here return always nullptr
-PGM_BASE* PgmOrNull()
-{
-    return nullptr;
-}
-
-
 KIFACE_BASE& Kiface()
 {
     static MOCK_KIFACE_BASE kiface;
diff --git qa/qa_utils/test_app_main.cpp qa/qa_utils/test_app_main.cpp
index e5409fb59c..d89956d89b 100644
--- qa/qa_utils/test_app_main.cpp
+++ qa/qa_utils/test_app_main.cpp
@@ -89,7 +89,7 @@ static struct IFACE : public KIFACE_BASE
 kiface( "pcb_test_frame", KIWAY::FACE_PCB );
 
 
-KIWAY    Kiway( &Pgm(), KFCTL_STANDALONE );
+KIWAY    Kiway( KFCTL_STANDALONE );
 
 
 static struct PGM_TEST_FRAME : public PGM_BASE
@@ -129,20 +129,6 @@ static struct PGM_TEST_FRAME : public PGM_BASE
 program;
 
 
-PGM_BASE& Pgm()
-{
-    return program;
-}
-
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face
-// is run from a python script, mot from a Kicad application
-PGM_BASE* PgmOrNull()
-{
-    return &program;
-}
-
-
 KIFACE_BASE& Kiface()
 {
     return kiface;
@@ -156,7 +142,9 @@ KIFACE_BASE& Kiface()
 struct APP_TEST : public wxApp
 {
     APP_TEST()
-    {}
+    {
+        SetPgm( &program );
+    }
 
     bool OnInit() override
     {
diff --git qa/tests/common/test_module.cpp qa/tests/common/test_module.cpp
index 2ab1c443e6..6ad7f05e54 100644
--- qa/tests/common/test_module.cpp
+++ qa/tests/common/test_module.cpp
@@ -25,6 +25,7 @@
  * Main file for the libcommon tests to be compiled
  */
 #include <boost/test/unit_test.hpp>
+#include <mock_pgm_base.h>
 
 #include <wx/image.h>
 #include <wx/init.h>
@@ -32,6 +33,7 @@
 
 bool init_unit_test()
 {
+    SetPgm( new MOCK_PGM_BASE() );
     boost::unit_test::framework::master_test_suite().p_name.value = "Common library module tests";
     bool ok = wxInitialize();
 
diff --git qa/tests/eeschema/test_module.cpp qa/tests/eeschema/test_module.cpp
index 9f7e816e75..6db986798d 100644
--- qa/tests/eeschema/test_module.cpp
+++ qa/tests/eeschema/test_module.cpp
@@ -35,6 +35,7 @@
 #include <symbol_editor/symbol_editor_settings.h>
 #include <wx/app.h>
 #include <wx/init.h>
+#include <mock_pgm_base.h>
 
 #include <qa_utils/wx_utils/wx_assert.h>
 
@@ -52,6 +53,7 @@ void wxAssertThrower( const wxString& aFile, int aLine, const wxString& aFunc,
 
 bool init_unit_test()
 {
+    SetPgm( new MOCK_PGM_BASE() );
     KIPLATFORM::APP::Init();
     boost::unit_test::framework::master_test_suite().p_name.value = "Common Eeschema module tests";
 
diff --git qa/tests/gerbview/CMakeLists.txt qa/tests/gerbview/CMakeLists.txt
index 635c891137..8a1b0442c3 100644
--- qa/tests/gerbview/CMakeLists.txt
+++ qa/tests/gerbview/CMakeLists.txt
@@ -51,6 +51,7 @@ target_compile_definitions( qa_gerbview
 
 target_include_directories( qa_gerbview PRIVATE
     ${CMAKE_SOURCE_DIR}/include
+    ${CMAKE_SOURCE_DIR}/qa/mocks/include
 )
 
 # Anytime we link to the kiface_objects, we have to add a dependency on the last object
diff --git qa/tests/gerbview/test_module.cpp qa/tests/gerbview/test_module.cpp
index d396602f08..a29e655756 100644
--- qa/tests/gerbview/test_module.cpp
+++ qa/tests/gerbview/test_module.cpp
@@ -26,12 +26,14 @@
  */
 #include <boost/test/unit_test.hpp>
 #include <kiplatform/app.h>
+#include <mock_pgm_base.h>
 
 #include <wx/init.h>
 
 
 bool init_unit_test()
 {
+    SetPgm( new MOCK_PGM_BASE() );
     KIPLATFORM::APP::Init();
     boost::unit_test::framework::master_test_suite().p_name.value = "Gerbview module tests";
     return wxInitialize();
diff --git qa/tests/pcbnew/CMakeLists.txt qa/tests/pcbnew/CMakeLists.txt
index bd0fd92f40..e0fe8e3586 100644
--- qa/tests/pcbnew/CMakeLists.txt
+++ qa/tests/pcbnew/CMakeLists.txt
@@ -106,6 +106,7 @@ include_directories(
     ${CMAKE_SOURCE_DIR}/polygon
     ${CMAKE_SOURCE_DIR}/common/geometry
     ${CMAKE_SOURCE_DIR}/qa/qa_utils
+    ${CMAKE_SOURCE_DIR}/qa/mocks/include
     ${INC_AFTER}
 )
 
diff --git qa/tests/pcbnew/test_module.cpp qa/tests/pcbnew/test_module.cpp
index ced0cd3663..1dde0d7c7b 100644
--- qa/tests/pcbnew/test_module.cpp
+++ qa/tests/pcbnew/test_module.cpp
@@ -26,6 +26,7 @@
  */
 #include <boost/test/unit_test.hpp>
 #include <kiplatform/app.h>
+#include <mock_pgm_base.h>
 
 #include <wx/image.h>
 #include <wx/init.h>
@@ -33,6 +34,7 @@
 
 bool init_unit_test()
 {
+    SetPgm( new MOCK_PGM_BASE() );
     KIPLATFORM::APP::Init();
     boost::unit_test::framework::master_test_suite().p_name.value = "Pcbnew module tests";
 
diff --git qa/tests/spice/test_module.cpp qa/tests/spice/test_module.cpp
index 7535e79a30..978495c722 100644
--- qa/tests/spice/test_module.cpp
+++ qa/tests/spice/test_module.cpp
@@ -35,6 +35,7 @@
 #include <symbol_editor/symbol_editor_settings.h>
 #include <wx/app.h>
 #include <wx/init.h>
+#include <mock_pgm_base.h>
 
 #include <qa_utils/wx_utils/wx_assert.h>
 
@@ -52,6 +53,7 @@ void wxAssertThrower( const wxString& aFile, int aLine, const wxString& aFunc,
 
 bool init_unit_test()
 {
+    SetPgm( new MOCK_PGM_BASE() );
     KIPLATFORM::APP::Init();
     boost::unit_test::framework::master_test_suite().p_name.value = "Common spice integration tests";
 
diff --git scripting/CMakeLists.txt scripting/CMakeLists.txt
index 36ca25a882..5ec2face6b 100644
--- scripting/CMakeLists.txt
+++ scripting/CMakeLists.txt
@@ -1,6 +1,5 @@
 set( KIPYTHON_SRCS
     kipython_settings.cpp
-    python_scripting.cpp
 )
 
 add_library( scripting STATIC
@@ -12,6 +11,7 @@ target_link_libraries( scripting
     ${PYTHON_LIBRARIES}
     Boost::headers
     common
+    kicommon
 )
 
 target_include_directories( scripting PUBLIC
diff --git scripting/kicad_scripting_main.cpp scripting/kicad_scripting_main.cpp
index 21051169d1..a2bed14049 100644
--- scripting/kicad_scripting_main.cpp
+++ scripting/kicad_scripting_main.cpp
@@ -78,8 +78,6 @@ static struct IFACE : public KIFACE_BASE
 
 using namespace KIPYTHON;
 
-static PGM_BASE* process;
-
 KIFACE_BASE& Kiface()
 {
     return kiface;
@@ -90,25 +88,10 @@ KIFACE_BASE& Kiface()
 // KIFACE_GETTER will not have name mangling due to declaration in kiway.h.
 KIFACE* KIFACE_GETTER( int* aKIFACEversion, int aKIWAYversion, PGM_BASE* aProgram )
 {
-    process = (PGM_BASE*) aProgram;
     return &kiface;
 }
 
 
-PGM_BASE& Pgm()
-{
-    wxASSERT( process );    // KIFACE_GETTER has already been called.
-    return *process;
-}
-
-// Similar to PGM_BASE& Pgm(), but return nullptr when a *.ki_face is run from
-// a python script or something else.
-PGM_BASE* PgmOrNull()
-{
-    return process;
-}
-
-
 bool IFACE::OnKifaceStart( PGM_BASE* aProgram, int aCtlBits, KIWAY* aKiway )
 {
     InitSettings( new KIPYTHON_SETTINGS );
diff --git scripting/python_scripting.cpp scripting/python_scripting.cpp
index fef827a75b..47e3b09e5c 100644
--- scripting/python_scripting.cpp
+++ scripting/python_scripting.cpp
@@ -36,10 +36,7 @@
 #include <cstring>
 #include <string>
 
-#include <eda_base_frame.h>
 #include <env_vars.h>
-#include <gal/color4d.h>
-#include <gestfich.h>
 #include <trace_helpers.h>
 #include <string_utils.h>
 #include <macros.h>
diff --git scripting/python_scripting.h scripting/python_scripting.h
index a6df3c32a9..41ce6d29c1 100644
--- scripting/python_scripting.h
+++ scripting/python_scripting.h
@@ -45,7 +45,9 @@
 #include <wx/string.h>
 #include <wx/arrstr.h>
 
-class SCRIPTING
+#include <kicommon.h>
+
+class KICOMMON_API SCRIPTING
 {
 public:
     SCRIPTING();
@@ -82,14 +84,15 @@ private:
  * @param aVar is the variable to set
  * @param aValue is the value to give it
  */
-void        UpdatePythonEnvVar( const wxString& aVar, const wxString& aValue );
+KICOMMON_API void UpdatePythonEnvVar( const wxString& aVar, const wxString& aValue );
 
-void        RedirectStdio();
-wxWindow*   CreatePythonShellWindow( wxWindow* parent, const wxString& aFramenameId );
-bool InitPythonScripting( const char* aStockScriptingPath, const char* aUserScriptingPath );
-bool IsWxPythonLoaded();
+KICOMMON_API void RedirectStdio();
+KICOMMON_API wxWindow* CreatePythonShellWindow( wxWindow* parent, const wxString& aFramenameId );
+KICOMMON_API bool       InitPythonScripting( const char* aStockScriptingPath,
+                                            const char* aUserScriptingPath );
+KICOMMON_API bool       IsWxPythonLoaded();
 
-class PyLOCK
+class KICOMMON_API PyLOCK
 {
     PyGILState_STATE gil_state;
 public:
@@ -97,8 +100,8 @@ public:
     ~PyLOCK()     { PyGILState_Release( gil_state ); }
 };
 
-wxString        PyStringToWx( PyObject* str );
-wxArrayString   PyArrayStringToWx( PyObject* arr );
-wxString        PyErrStringWithTraceback();
+KICOMMON_API wxString PyStringToWx( PyObject* str );
+KICOMMON_API wxArrayString PyArrayStringToWx( PyObject* arr );
+KICOMMON_API wxString       PyErrStringWithTraceback();
 
 #endif    // __PYTHON_SCRIPTING_H
-- 
2.46.1

From bf1c39010c7a604f0ee7c145cbf7c411ea7da15b Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Thu, 26 Sep 2024 19:43:25 -0600
Subject: [PATCH 04/11] Move `PROPERTY_MANAGER` into the `kicommon` dylib.

Move `BITMAP_BASE` and graphics functions into `gal`.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt             |  6 +--
 common/gal/CMakeLists.txt         |  5 +-
 include/bitmap_base.h             |  3 +-
 include/gr_basic.h                | 87 +++++++++++++++++--------------
 include/gr_text.h                 | 36 +++++++------
 include/properties/property_mgr.h |  5 +-
 6 files changed, 79 insertions(+), 63 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index e54918c6dc..6292399fe0 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -125,6 +125,8 @@ set( KICOMMON_SRCS
 
     database/database_lib_settings.cpp
 
+    properties/property_mgr.cpp
+
     advanced_config.cpp
     asset_archive.cpp
     array_axis.cpp
@@ -502,14 +504,12 @@ set( COMMON_SRCS
     jobs/job_dispatcher.cpp
     base_screen.cpp
     bin_mod.cpp
-    bitmap_base.cpp
     board_printout.cpp
     cli_progress_reporter.cpp
     commit.cpp
     dpi_scaling_common.cpp
     draw_panel_gal.cpp
     gal_display_options_common.cpp
-    gr_text.cpp
     eda_base_frame.cpp
     eda_dde.cpp
     eda_doc.cpp
@@ -526,7 +526,6 @@ set( COMMON_SRCS
     footprint_filter.cpp
     footprint_info.cpp
     gbr_metadata.cpp
-    gr_basic.cpp
     grid_tricks.cpp
     hotkey_store.cpp
     hotkeys_basic.cpp
@@ -597,7 +596,6 @@ set( COMMON_SRCS
     properties/pg_cell_renderer.cpp
     properties/pg_editors.cpp
     properties/pg_properties.cpp
-    properties/property_mgr.cpp
     properties/std_optional_variants.cpp
 
     database/database_connection.cpp
diff --git common/gal/CMakeLists.txt common/gal/CMakeLists.txt
index 0dd1cbea65..0803126daa 100644
--- common/gal/CMakeLists.txt
+++ common/gal/CMakeLists.txt
@@ -11,7 +11,10 @@ set( FONT_SRCS
 
 set( GAL_SRCS
     # Common part
+    ../bitmap_base.cpp
     ../callback_gal.cpp
+	../gr_basic.cpp
+	../gr_text.cpp
     painter.cpp
     cursors.cpp
     dpi_scaling.cpp
@@ -145,4 +148,4 @@ add_shader( gal smaa_pass_1_vert.glsl glsl_smaa_pass_1_vert )
 add_shader( gal smaa_pass_2_frag.glsl glsl_smaa_pass_2_frag )
 add_shader( gal smaa_pass_2_vert.glsl glsl_smaa_pass_2_vert )
 add_shader( gal smaa_pass_3_frag.glsl glsl_smaa_pass_3_frag )
-add_shader( gal smaa_pass_3_vert.glsl glsl_smaa_pass_3_vert )
\ No newline at end of file
+add_shader( gal smaa_pass_3_vert.glsl glsl_smaa_pass_3_vert )
diff --git include/bitmap_base.h include/bitmap_base.h
index 562140691b..87d8c49bd4 100644
--- include/bitmap_base.h
+++ include/bitmap_base.h
@@ -29,6 +29,7 @@
 #include <wx/image.h>
 #include <kiid.h>
 #include <math/box2.h>
+#include <gal/gal.h>
 #include <gal/color4d.h>
 
 class LINE_READER;
@@ -44,7 +45,7 @@ class PLOTTER;
  *
  * @warning Not all plotters are able to plot a bitmap.  Mainly GERBER plotters cannot.
  */
-class BITMAP_BASE
+class GAL_API BITMAP_BASE
 {
 public:
     BITMAP_BASE( const VECTOR2I& pos = VECTOR2I( 0, 0 ) );
diff --git include/gr_basic.h include/gr_basic.h
index c68367d833..31f0a2c343 100644
--- include/gr_basic.h
+++ include/gr_basic.h
@@ -22,6 +22,7 @@
 #ifndef GR_BASIC
 #define GR_BASIC
 
+#include <gal/gal.h>
 #include <gal/color4d.h>
 #include <math/box2.h>
 #include <vector>
@@ -59,7 +60,7 @@ inline GR_DRAWMODE operator&( const GR_DRAWMODE& a, const GR_DRAWMODE& b )
     return static_cast<GR_DRAWMODE>( int( a ) & int( b ) );
 }
 
-extern GR_DRAWMODE g_XorMode;
+extern GAL_API GR_DRAWMODE g_XorMode;
 
 typedef enum {
     /* Line styles for Get/SetLineStyle. */
@@ -69,30 +70,31 @@ typedef enum {
 } GRLineStypeType;
 
 
-void GRResetPenAndBrush( wxDC* DC );
-void GRSetColorPen( wxDC* DC, const COLOR4D& Color, int width = 1,
-                    wxPenStyle stype = wxPENSTYLE_SOLID );
-void GRSetBrush( wxDC* DC, const COLOR4D& Color, bool fill = false );
+GAL_API void GRResetPenAndBrush( wxDC* DC );
+GAL_API void GRSetColorPen( wxDC* DC, const COLOR4D& Color, int width = 1,
+                            wxPenStyle stype = wxPENSTYLE_SOLID );
+GAL_API void GRSetBrush( wxDC* DC, const COLOR4D& Color, bool fill = false );
 
 /**
  * @param flagforce True to force a black pen whenever the asked color.
  */
-void GRForceBlackPen( bool flagforce );
+GAL_API void GRForceBlackPen( bool flagforce );
 
 /**
  * @return True if a black pen was forced or false if not forced.
  */
-bool GetGRForceBlackPenState( void );
+GAL_API bool GetGRForceBlackPenState( void );
 
-void GRLine( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd, int aWidth,
-             const COLOR4D& aColor, wxPenStyle aStyle = wxPENSTYLE_SOLID );
-void GRLine( wxDC* DC, int x1, int y1, int x2, int y2, int width, const COLOR4D& Color,
-             wxPenStyle aStyle = wxPENSTYLE_SOLID );
-void GRMoveTo( int x, int y );
-void GRLineTo( wxDC* DC, int x, int y, int width, const COLOR4D& Color );
+GAL_API void GRLine( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd,
+                     int aWidth, const COLOR4D& aColor,
+                     wxPenStyle aStyle = wxPENSTYLE_SOLID );
+GAL_API void GRLine( wxDC* DC, int x1, int y1, int x2, int y2, int width,
+                     const COLOR4D& Color, wxPenStyle aStyle = wxPENSTYLE_SOLID );
+GAL_API void GRMoveTo( int x, int y );
+GAL_API void GRLineTo( wxDC* DC, int x, int y, int width, const COLOR4D& Color );
 
-void GRPoly( wxDC* DC, int n, const VECTOR2I* Points, bool Fill, int width, const COLOR4D& Color,
-             const COLOR4D& BgColor );
+GAL_API void GRPoly( wxDC* DC, int n, const VECTOR2I* Points, bool Fill,
+                     int width, const COLOR4D& Color, const COLOR4D& BgColor );
 
 /**
  * Draw a closed polygon onto the drawing context \a aDC and optionally fills and/or draws
@@ -104,8 +106,8 @@ void GRPoly( wxDC* DC, int n, const VECTOR2I* Points, bool Fill, int width, cons
  * @param doFill true if polygon is to be filled, else false and only the boundary is drawn.
  * @param aColor the color of the border and the fill.
  */
-void GRClosedPoly( wxDC* aDC, int aPointCount, const VECTOR2I* aPoints, bool doFill,
-                   const COLOR4D& aColor );
+GAL_API void GRClosedPoly( wxDC* aDC, int aPointCount, const VECTOR2I* aPoints,
+                           bool doFill, const COLOR4D& aColor );
 
 /**
  * Draw a circle onto the drawing context \a aDC centered at the user coordinates (x,y).
@@ -117,27 +119,34 @@ void GRClosedPoly( wxDC* aDC, int aPointCount, const VECTOR2I* aPoints, bool doF
  * @param aColor is the color to draw.
  * @see COLOR4D
  */
-void GRFilledCircle( wxDC* aDC, const VECTOR2I& aPos, int aRadius, int aWidth,
-                     const COLOR4D& aStrokeColor, const COLOR4D& aFillColor );
-void GRCircle( wxDC* aDC, const VECTOR2I& aPos, int aRadius, int aWidth, const COLOR4D& aColor );
-
-void GRArc( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd, const VECTOR2I& aCenter,
-            int aWidth, const COLOR4D& aColor );
-void GRFilledArc( wxDC* DC, const VECTOR2I& aStart, const VECTOR2I& aEnd, const VECTOR2I& aCenter,
-                  int width, const COLOR4D& Color, const COLOR4D& BgColor );
-
-void GRFilledSegment( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd, int aWidth,
-                      const COLOR4D& aColor );
-
-void GRCSegm( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd, int aWidth,
-              const COLOR4D& aColor );
-
-void GRFilledRect( wxDC* DC, const VECTOR2I& aStart, const VECTOR2I& aEnd, int aWidth,
-                   const COLOR4D& aColor, const COLOR4D& aBgColor );
-void GRRect( wxDC* DC, const VECTOR2I& aStart, const VECTOR2I& aEnd, int aWidth,
-             const COLOR4D& aColor );
-
-void GRSFilledRect( wxDC* DC, int x1, int y1, int x2, int y2, int width, const COLOR4D& Color,
-                    const COLOR4D& BgColor );
+GAL_API void GRFilledCircle( wxDC* aDC, const VECTOR2I& aPos, int aRadius,
+                             int aWidth, const COLOR4D& aStrokeColor,
+                             const COLOR4D& aFillColor );
+GAL_API void GRCircle( wxDC* aDC, const VECTOR2I& aPos, int aRadius, int aWidth,
+                       const COLOR4D& aColor );
+
+GAL_API void GRArc( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd,
+                    const VECTOR2I& aCenter, int aWidth, const COLOR4D& aColor );
+GAL_API void GRFilledArc( wxDC* DC, const VECTOR2I& aStart,
+                          const VECTOR2I& aEnd, const VECTOR2I& aCenter,
+                          int width, const COLOR4D& Color,
+                          const COLOR4D& BgColor );
+
+GAL_API void GRFilledSegment( wxDC* aDC, const VECTOR2I& aStart,
+                              const VECTOR2I& aEnd, int aWidth,
+                              const COLOR4D& aColor );
+
+GAL_API void GRCSegm( wxDC* aDC, const VECTOR2I& aStart, const VECTOR2I& aEnd,
+                      int aWidth, const COLOR4D& aColor );
+
+GAL_API void GRFilledRect( wxDC* DC, const VECTOR2I& aStart,
+                           const VECTOR2I& aEnd, int aWidth,
+                           const COLOR4D& aColor, const COLOR4D& aBgColor );
+GAL_API void GRRect( wxDC* DC, const VECTOR2I& aStart, const VECTOR2I& aEnd,
+                     int aWidth, const COLOR4D& aColor );
+
+GAL_API void GRSFilledRect( wxDC* DC, int x1, int y1, int x2, int y2,
+                            int width, const COLOR4D& Color,
+                            const COLOR4D& BgColor );
 
 #endif      /* define GR_BASIC */
diff --git include/gr_text.h include/gr_text.h
index 2e76154990..ac35d1be53 100644
--- include/gr_text.h
+++ include/gr_text.h
@@ -25,6 +25,7 @@
 #ifndef GR_TEXT_H
 #define GR_TEXT_H
 
+#include <gal/gal.h>
 #include <eda_item.h>
 #include <font/text_attributes.h>
 
@@ -51,30 +52,30 @@ class PLOTTER;
  * @param aBold true if text accept bold pen size.
  * @return the max pen size allowed.
  */
-int Clamp_Text_PenSize( int aPenSize, int aSize, bool aStrict = false );
-float Clamp_Text_PenSize( float aPenSize, int aSize, bool aStrict = false );
-int Clamp_Text_PenSize( int aPenSize, const VECTOR2I& aSize, bool aStrict = false );
+GAL_API int Clamp_Text_PenSize( int aPenSize, int aSize, bool aStrict = false );
+GAL_API float Clamp_Text_PenSize( float aPenSize, int aSize, bool aStrict = false );
+GAL_API int Clamp_Text_PenSize( int aPenSize, const VECTOR2I& aSize, bool aStrict = false );
 
 /**
  * @param aTextSize the char size (height or width).
  * @return the "best" value for a pen size to draw/plot a bold text.
  */
-int GetPenSizeForBold( int aTextSize );
-int GetPenSizeForBold( const wxSize& aTextSize );
+GAL_API int GetPenSizeForBold( int aTextSize );
+GAL_API int GetPenSizeForBold( const wxSize& aTextSize );
 
 /**
  * @param aTextSize the char size (height or width).
  * @return the "best" value for a pen size to draw/plot a demibold text.
  */
-int GetPenSizeForDemiBold( int aTextSize );
-int GetPenSizeForDemiBold( const wxSize& aTextSize );
+GAL_API int GetPenSizeForDemiBold( int aTextSize );
+GAL_API int GetPenSizeForDemiBold( const wxSize& aTextSize );
 
 /**
  * @param aTextSize = the char size (height or width).
  * @return the "best" value for a pen size to draw/plot a non-bold text.
  */
-int GetPenSizeForNormal( int aTextSize );
-int GetPenSizeForNormal( const wxSize& aTextSize );
+GAL_API int GetPenSizeForNormal( int aTextSize );
+GAL_API int GetPenSizeForNormal( const wxSize& aTextSize );
 
 inline void InferBold( TEXT_ATTRIBUTES* aAttrs )
 {
@@ -98,8 +99,9 @@ inline int GetKnockoutTextMargin( const VECTOR2I& aSize, int aThickness )
 /**
  * @return the X size of the graphic text.
  */
-int GRTextWidth( const wxString& aText, KIFONT::FONT* aFont, const VECTOR2I& aSize,
-                 int aThickness, bool aBold, bool aItalic, const KIFONT::METRICS& aFontMetrics );
+GAL_API int GRTextWidth( const wxString& aText, KIFONT::FONT* aFont,
+                         const VECTOR2I& aSize, int aThickness, bool aBold,
+                         bool aItalic, const KIFONT::METRICS& aFontMetrics );
 
 /**
  * Print a graphic text through wxDC.
@@ -119,11 +121,13 @@ int GRTextWidth( const wxString& aText, KIFONT::FONT* aFont, const VECTOR2I& aSi
  *  @param aBold use true to use a bold font. Useful only with default width value (aWidth = 0).
  *  @param aFont is the font to use, or nullptr for the KiCad stroke font
  */
-void GRPrintText( wxDC* aDC, const VECTOR2I& aPos, const KIGFX::COLOR4D& aColor,
-                  const wxString& aText, const EDA_ANGLE& aOrient, const VECTOR2I& aSize,
-                  enum GR_TEXT_H_ALIGN_T aH_justify, enum GR_TEXT_V_ALIGN_T aV_justify,
-                  int aWidth, bool aItalic, bool aBold, KIFONT::FONT* aFont,
-                  const KIFONT::METRICS& aFontMetrics );
+GAL_API void GRPrintText( wxDC* aDC, const VECTOR2I& aPos,
+                          const KIGFX::COLOR4D& aColor, const wxString& aText,
+                          const EDA_ANGLE& aOrient, const VECTOR2I& aSize,
+                          enum GR_TEXT_H_ALIGN_T aH_justify,
+                          enum GR_TEXT_V_ALIGN_T aV_justify, int aWidth,
+                          bool aItalic, bool aBold, KIFONT::FONT* aFont,
+                          const KIFONT::METRICS& aFontMetrics );
 
 
 #endif /* GR_TEXT_H */
diff --git include/properties/property_mgr.h include/properties/property_mgr.h
index 24eacae60c..dbb6dcf8bb 100644
--- include/properties/property_mgr.h
+++ include/properties/property_mgr.h
@@ -24,6 +24,7 @@
 #ifndef PROPERTY_MGR_H
 #define PROPERTY_MGR_H
 
+#include <kicommon.h>
 #include <core/wx_stl_compat.h> // Needed for stl hash extensions
 
 #include <wx/string.h>
@@ -59,7 +60,7 @@ using PROPERTY_DISPLAY_ORDER = std::map<PROPERTY_BASE*, int>;
 
 using PROPERTY_LISTENER = std::function<void( INSPECTABLE*, PROPERTY_BASE*, COMMIT* )>;
 
-class PROPERTY_COMMIT_HANDLER
+class KICOMMON_API PROPERTY_COMMIT_HANDLER
 {
 public:
     PROPERTY_COMMIT_HANDLER( COMMIT* aCommit );
@@ -81,7 +82,7 @@ public:
  * Once all classes are described, the property list must be build using
  * Rebuild() method.
  */
-class PROPERTY_MANAGER
+class KICOMMON_API PROPERTY_MANAGER
 {
 public:
     static PROPERTY_MANAGER& Instance()
-- 
2.46.1

From 3adb907b331d2f6e866fbe48e9569fd9211e2762 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Sat, 28 Sep 2024 15:35:12 -0600
Subject: [PATCH 05/11] Move the art providers into the `kicommon` dylib.

They are dependencies of `ACTION_TOOLBAR`. I wanted to move that into
`kicommon`, but it depends on `gal`.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt                  | 2 +-
 include/widgets/wx_aui_art_providers.h | 5 +++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 6292399fe0..5c960b7977 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -122,6 +122,7 @@ set( KICOMMON_SRCS
     widgets/progress_reporter_base.cpp
     widgets/std_bitmap_button.cpp
     widgets/ui_common.cpp
+    widgets/wx_aui_art_providers.cpp
 
     database/database_lib_settings.cpp
 
@@ -387,7 +388,6 @@ set( COMMON_WIDGET_SRCS
     widgets/unit_binder.cpp
     widgets/widget_save_restore.cpp
     widgets/widget_hotkey_list.cpp
-    widgets/wx_aui_art_providers.cpp
     widgets/wx_aui_utils.cpp
     widgets/wx_busy_indicator.cpp
     widgets/wx_collapsible_pane.cpp
diff --git include/widgets/wx_aui_art_providers.h include/widgets/wx_aui_art_providers.h
index 4f0bcc6517..f930d0a539 100644
--- include/widgets/wx_aui_art_providers.h
+++ include/widgets/wx_aui_art_providers.h
@@ -20,11 +20,12 @@
 #ifndef KICAD_WX_AUI_ART_PROVIDERS_H
 #define KICAD_WX_AUI_ART_PROVIDERS_H
 
+#include <kicommon.h>
 #include <wx/aui/auibar.h>
 #include <wx/aui/dockart.h>
 
 
-class WX_AUI_TOOLBAR_ART : public wxAuiDefaultToolBarArt
+class KICOMMON_API WX_AUI_TOOLBAR_ART : public wxAuiDefaultToolBarArt
 {
 public:
     WX_AUI_TOOLBAR_ART() : wxAuiDefaultToolBarArt() {}
@@ -41,7 +42,7 @@ public:
 };
 
 
-class WX_AUI_DOCK_ART : public wxAuiDefaultDockArt
+class KICOMMON_API WX_AUI_DOCK_ART : public wxAuiDefaultDockArt
 {
 public:
     WX_AUI_DOCK_ART();
-- 
2.46.1

From 84e812475bbe9786c5956380a2183d72d95970a7 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Fri, 27 Sep 2024 20:04:50 -0600
Subject: [PATCH 06/11] Move `EDA_SHAPE` into the `kicommon` dylib.

It is `dynamic_cast`ed in its own implementation, as well as in
`eeschema`. This may not be necessary right now, but this screams "ODR
violation waiting to happen!" to me.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt         | 6 +++---
 include/eda_shape.h           | 7 ++++---
 include/properties/property.h | 6 ++++--
 include/render_settings.h     | 3 ++-
 include/stroke_params.h       | 7 ++++---
 5 files changed, 17 insertions(+), 12 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 5c960b7977..4229662631 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -143,6 +143,7 @@ set( KICOMMON_SRCS
     dialog_shim.cpp
     dsnlexer.cpp
     eda_pattern_match.cpp
+    eda_shape.cpp
     eda_units.cpp
     env_vars.cpp
     exceptions.cpp
@@ -163,10 +164,12 @@ set( KICOMMON_SRCS
     page_info.cpp
     paths.cpp
     project.cpp
+    render_settings.cpp
     richio.cpp
     search_stack.cpp
     searchhelpfilefullpath.cpp
     string_utils.cpp
+    stroke_params.cpp
     systemdirsappend.cpp
     ui_events.cpp
     trace_helpers.cpp
@@ -515,7 +518,6 @@ set( COMMON_SRCS
     eda_doc.cpp
     eda_draw_frame.cpp
     eda_item.cpp
-    eda_shape.cpp
     eda_text.cpp
     eda_tools.cpp
     env_paths.cpp
@@ -540,12 +542,10 @@ set( COMMON_SRCS
     ptree.cpp
     rc_item.cpp
     refdes_utils.cpp
-    render_settings.cpp
     reporter.cpp
     scintilla_tricks.cpp
     status_popup.cpp
     string_utf8_map.cpp
-    stroke_params.cpp
     template_fieldnames.cpp
     textentry_tricks.cpp
     title_block.cpp
diff --git include/eda_shape.h include/eda_shape.h
index 98a38f4608..e271bae63f 100644
--- include/eda_shape.h
+++ include/eda_shape.h
@@ -25,6 +25,7 @@
 #ifndef EDA_SHAPE_H
 #define EDA_SHAPE_H
 
+#include <kicommon.h>
 #include <trigo.h>
 #include <geometry/shape_poly_set.h>
 #include <geometry/geometry_utils.h>
@@ -68,7 +69,7 @@ struct ARC_MID
     VECTOR2I center;
 };
 
-class EDA_SHAPE
+class KICOMMON_API EDA_SHAPE
 {
 public:
     EDA_SHAPE( SHAPE_T aType, int aLineWidth, FILL_T aFill );
@@ -432,8 +433,8 @@ protected:
 };
 
 #ifndef SWIG
-DECLARE_ENUM_TO_WXANY( SHAPE_T );
-DECLARE_ENUM_TO_WXANY( LINE_STYLE );
+DECLARE_ENUM_TO_WXANY_EXPORT( SHAPE_T, KICOMMON_API );
+DECLARE_ENUM_TO_WXANY_EXPORT( LINE_STYLE, KICOMMON_API );
 #endif
 
 #endif  // EDA_SHAPE_H
diff --git include/properties/property.h include/properties/property.h
index deedd02850..12930df051 100644
--- include/properties/property.h
+++ include/properties/property.h
@@ -716,9 +716,9 @@ private:
 
 
 // Helper macros to handle enum types
-#define DECLARE_ENUM_TO_WXANY( type )                                                       \
+#define DECLARE_ENUM_TO_WXANY_EXPORT( type, vis )                                           \
     template <>                                                                             \
-    class wxAnyValueTypeImpl<type> : public wxAnyValueTypeImplBase<type>                    \
+    class vis wxAnyValueTypeImpl<type> : public wxAnyValueTypeImplBase<type>                \
     {                                                                                       \
         WX_DECLARE_ANY_VALUE_TYPE( wxAnyValueTypeImpl<type> )                               \
     public:                                                                                 \
@@ -750,6 +750,8 @@ private:
         }                                                                                   \
     };
 
+#define DECLARE_ENUM_TO_WXANY( type ) DECLARE_ENUM_TO_WXANY_EXPORT( type, )
+
 #define IMPLEMENT_ENUM_TO_WXANY( type ) WX_IMPLEMENT_ANY_VALUE_TYPE( wxAnyValueTypeImpl<type> )
 
 #define ENUM_TO_WXANY( type )                                                               \
diff --git include/render_settings.h include/render_settings.h
index 85493627e5..79af1a4713 100644
--- include/render_settings.h
+++ include/render_settings.h
@@ -27,6 +27,7 @@
 #include <map>
 #include <set>
 
+#include <kicommon.h>
 #include <gal/color4d.h>
 #include <layer_ids.h>
 #include <memory>
@@ -52,7 +53,7 @@ class VIEW_ITEM;
  * The class acts as an interface between the PAINTER object and the GUI (i.e. Layers/Items
  * widget or display options dialog).
  */
-class RENDER_SETTINGS
+class KICOMMON_API RENDER_SETTINGS
 {
 public:
     RENDER_SETTINGS();
diff --git include/stroke_params.h include/stroke_params.h
index a0422e7625..7dd77a5aeb 100644
--- include/stroke_params.h
+++ include/stroke_params.h
@@ -25,6 +25,7 @@
 #define STROKE_PARAMS_H
 
 #include <map>
+#include <kicommon.h>
 #include <bitmaps.h>
 #include <units_provider.h>
 #include <gal/color4d.h>
@@ -67,7 +68,7 @@ struct LINE_STYLE_DESC
 /*
  * Conversion map between LINE_STYLE values and style names displayed
  */
-extern const std::map<LINE_STYLE, struct LINE_STYLE_DESC> lineTypeNames;
+extern KICOMMON_API const std::map<LINE_STYLE, struct LINE_STYLE_DESC> lineTypeNames;
 
 
 #define DEFAULT_STYLE _( "Default" )
@@ -77,7 +78,7 @@ extern const std::map<LINE_STYLE, struct LINE_STYLE_DESC> lineTypeNames;
 /**
  * Simple container to manage line stroke parameters.
  */
-class STROKE_PARAMS
+class KICOMMON_API STROKE_PARAMS
 {
 public:
     STROKE_PARAMS( int aWidth = 0, LINE_STYLE aLineStyle = LINE_STYLE::DEFAULT,
@@ -124,7 +125,7 @@ private:
 };
 
 
-class STROKE_PARAMS_PARSER : public STROKE_PARAMS_LEXER
+class KICOMMON_API STROKE_PARAMS_PARSER : public STROKE_PARAMS_LEXER
 {
 public:
     STROKE_PARAMS_PARSER( LINE_READER* aReader, int iuPerMM ) :
-- 
2.46.1

From a6edef345d3deb4737c007edba1de5419c1ccd42 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Fri, 27 Sep 2024 20:10:25 -0600
Subject: [PATCH 07/11] Move the `PGPROPERTY` classes' dependencies into the
 `kicommon` dylib.

I wanted to the classes themselves, since they are `dynamic_cast`ed in
the `common` library as well as in `eeschema`. But, the property editors
depend on `COLOR_SWATCH`, which depends on `gal` and the
`EDA_BASE_FRAME`.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt                      | 6 +++---
 include/properties/color4d_variant.h       | 3 ++-
 include/properties/std_optional_variants.h | 5 +++--
 include/widgets/unit_binder.h              | 5 +++--
 4 files changed, 11 insertions(+), 8 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 4229662631..6e5d3aee42 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -122,11 +122,14 @@ set( KICOMMON_SRCS
     widgets/progress_reporter_base.cpp
     widgets/std_bitmap_button.cpp
     widgets/ui_common.cpp
+    widgets/unit_binder.cpp
     widgets/wx_aui_art_providers.cpp
 
     database/database_lib_settings.cpp
 
+    properties/color4d_variant.cpp
     properties/property_mgr.cpp
+    properties/std_optional_variants.cpp
 
     advanced_config.cpp
     asset_archive.cpp
@@ -388,7 +391,6 @@ set( COMMON_WIDGET_SRCS
     widgets/split_button.cpp
     widgets/stepped_slider.cpp
     widgets/text_ctrl_eval.cpp
-    widgets/unit_binder.cpp
     widgets/widget_save_restore.cpp
     widgets/widget_hotkey_list.cpp
     widgets/wx_aui_utils.cpp
@@ -591,12 +593,10 @@ set( COMMON_SRCS
 
     settings/cvpcb_settings.cpp
 
-    properties/color4d_variant.cpp
     properties/eda_angle_variant.cpp
     properties/pg_cell_renderer.cpp
     properties/pg_editors.cpp
     properties/pg_properties.cpp
-    properties/std_optional_variants.cpp
 
     database/database_connection.cpp
 
diff --git include/properties/color4d_variant.h include/properties/color4d_variant.h
index cd7239a360..e0186163e2 100644
--- include/properties/color4d_variant.h
+++ include/properties/color4d_variant.h
@@ -20,10 +20,11 @@
 #ifndef KICAD_COLOR4D_VARIANT_H
 #define KICAD_COLOR4D_VARIANT_H
 
+#include <kicommon.h>
 #include <gal/color4d.h>
 #include <wx/variant.h>
 
-class COLOR4D_VARIANT_DATA : public wxVariantData
+class KICOMMON_API COLOR4D_VARIANT_DATA : public wxVariantData
 {
 public:
     COLOR4D_VARIANT_DATA();
diff --git include/properties/std_optional_variants.h include/properties/std_optional_variants.h
index 72290c183b..e7309c35e3 100644
--- include/properties/std_optional_variants.h
+++ include/properties/std_optional_variants.h
@@ -22,13 +22,14 @@
 
 #include <optional>
 #include <wx/variant.h>
+#include <kicommon.h>
 
 /*
  * Wrappers to allow use of std::optional<int> and std::optional<double> with the wxVariant
  * system.
  */
 
-class STD_OPTIONAL_INT_VARIANT_DATA : public wxVariantData
+class KICOMMON_API STD_OPTIONAL_INT_VARIANT_DATA : public wxVariantData
 {
 public:
     STD_OPTIONAL_INT_VARIANT_DATA();
@@ -60,7 +61,7 @@ protected:
 };
 
 
-class STD_OPTIONAL_DOUBLE_VARIANT_DATA : public wxVariantData
+class KICOMMON_API STD_OPTIONAL_DOUBLE_VARIANT_DATA : public wxVariantData
 {
 public:
     STD_OPTIONAL_DOUBLE_VARIANT_DATA();
diff --git include/widgets/unit_binder.h include/widgets/unit_binder.h
index 995eedd4a2..007a2f8206 100644
--- include/widgets/unit_binder.h
+++ include/widgets/unit_binder.h
@@ -26,6 +26,7 @@
 #ifndef __UNIT_BINDER_H_
 #define __UNIT_BINDER_H_
 
+#include <kicommon.h>
 #include <base_units.h>
 #include <units_provider.h>
 #include <libeval/numeric_evaluator.h>
@@ -37,7 +38,7 @@ class wxTextEntry;
 class wxSpinButton;
 class wxStaticText;
 
-class UNIT_BINDER : public wxEvtHandler
+class KICOMMON_API UNIT_BINDER : public wxEvtHandler
 {
 public:
 
@@ -258,7 +259,7 @@ protected:
 /**
  * Specialization for wxPropertyGrid, where we have no labels and units are displayed in the editor
  */
-class PROPERTY_EDITOR_UNIT_BINDER : public UNIT_BINDER
+class KICOMMON_API PROPERTY_EDITOR_UNIT_BINDER : public UNIT_BINDER
 {
 public:
     PROPERTY_EDITOR_UNIT_BINDER( EDA_DRAW_FRAME* aParent );
-- 
2.46.1

From a1f2791cca123071dfb70a6916b8f40b8327e978 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Sat, 28 Sep 2024 01:40:38 -0600
Subject: [PATCH 08/11] Move `WX_PANEL` and `WX_TREEBOOK` into the `kicommon`
 dylib.

I actually wanted to move `PAGED_DIALOG` into `kicommon`.  The only
`dynamic_cast` here is within its own implementation, but it's casting
its own parent. Now I'm worried about the potential for a `PAGED_DIALOG`
in one module to create a child `PAGED_DIALOG` from another module. It
would be best to preempt any latent ODR issues. The problem, however, is
that `PAGED_DIALOG` depends on `WX_INFOBAR`, and that depends on
`EDA_BASE_FRAME`.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt         | 6 +++---
 include/widgets/wx_panel.h    | 3 ++-
 include/widgets/wx_treebook.h | 3 ++-
 3 files changed, 7 insertions(+), 5 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 6e5d3aee42..11cc07e6d3 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -124,6 +124,8 @@ set( KICOMMON_SRCS
     widgets/ui_common.cpp
     widgets/unit_binder.cpp
     widgets/wx_aui_art_providers.cpp
+    widgets/wx_panel.cpp
+    widgets/wx_treebook.cpp
 
     database/database_lib_settings.cpp
 
@@ -377,7 +379,6 @@ set( COMMON_WIDGET_SRCS
     widgets/grid_text_helpers.cpp
     widgets/html_window.cpp
     widgets/indicator_icon.cpp
-    widgets/wx_infobar.cpp
     widgets/layer_box_selector.cpp
     widgets/lib_tree.cpp
     widgets/mathplot.cpp
@@ -403,11 +404,10 @@ set( COMMON_WIDGET_SRCS
     widgets/wx_html_report_box.cpp
     widgets/wx_html_report_panel.cpp
     widgets/wx_html_report_panel_base.cpp
+    widgets/wx_infobar.cpp
     widgets/wx_listbox.cpp
-    widgets/wx_panel.cpp
     widgets/wx_progress_reporters.cpp
     widgets/wx_splitter_window.cpp
-    widgets/wx_treebook.cpp
     )
 
 set( COMMON_DRAWING_SHEET_SRCS
diff --git include/widgets/wx_panel.h include/widgets/wx_panel.h
index 312a313f36..18039e059b 100644
--- include/widgets/wx_panel.h
+++ include/widgets/wx_panel.h
@@ -25,9 +25,10 @@
 #define WX_PANEL_H
 
 #include <wx/panel.h>
+#include <kicommon.h>
 #include <gal/color4d.h>
 
-class WX_PANEL : public wxPanel
+class KICOMMON_API WX_PANEL : public wxPanel
 {
 public:
     WX_PANEL( wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition,
diff --git include/widgets/wx_treebook.h include/widgets/wx_treebook.h
index 456e904728..25ecefbb2c 100644
--- include/widgets/wx_treebook.h
+++ include/widgets/wx_treebook.h
@@ -26,8 +26,9 @@
 
 #include <functional>
 #include <wx/treebook.h>
+#include <kicommon.h>
 
-class WX_TREEBOOK : public wxTreebook
+class KICOMMON_API WX_TREEBOOK : public wxTreebook
 {
 public:
     WX_TREEBOOK( wxWindow *parent, wxWindowID id, const wxPoint& pos = wxDefaultPosition,
-- 
2.46.1

From c04e9e57eee33ebe35172bd6026069450ec89da0 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Sat, 28 Sep 2024 02:42:25 -0600
Subject: [PATCH 09/11] Move `WX_GRID` into the `kicommon` dylib.

This class is `dynamic_cast`ed in the `common` library, and in
`eeschema`.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt               | 4 ++--
 include/libeval/numeric_evaluator.h | 3 ++-
 include/widgets/wx_grid.h           | 3 ++-
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 11cc07e6d3..9be03c0a0b 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -124,6 +124,7 @@ set( KICOMMON_SRCS
     widgets/ui_common.cpp
     widgets/unit_binder.cpp
     widgets/wx_aui_art_providers.cpp
+    widgets/wx_grid.cpp
     widgets/wx_panel.cpp
     widgets/wx_treebook.cpp
 
@@ -400,7 +401,6 @@ set( COMMON_WIDGET_SRCS
     widgets/wx_combobox.cpp
     widgets/wx_dataviewctrl.cpp
     widgets/wx_ellipsized_static_text.cpp
-    widgets/wx_grid.cpp
     widgets/wx_html_report_box.cpp
     widgets/wx_html_report_panel.cpp
     widgets/wx_html_report_panel_base.cpp
@@ -777,7 +777,7 @@ add_dependencies( pcbcommon delaunator )
 
 # The lemon grammar for the numeric evaluator
 generate_lemon_grammar(
-    common
+    kicommon
     libeval
     libeval/numeric_evaluator.cpp
     libeval/grammar.lemon
diff --git include/libeval/numeric_evaluator.h include/libeval/numeric_evaluator.h
index 23cd15a86b..ae339d2d62 100644
--- include/libeval/numeric_evaluator.h
+++ include/libeval/numeric_evaluator.h
@@ -71,6 +71,7 @@ Supported units are millimeters (mm), Mil (mil) and inch (")
 #include <map>
 #include <string>
 
+#include <kicommon.h>
 #include <eda_units.h>
 
 // This namespace is used for the lemon parser
@@ -90,7 +91,7 @@ namespace numEval
 
 } // namespace numEval
 
-class NUMERIC_EVALUATOR
+class KICOMMON_API NUMERIC_EVALUATOR
 {
     enum class Unit { Invalid, UM, MM, CM, Inch, Mil, Degrees, SI };
 
diff --git include/widgets/wx_grid.h include/widgets/wx_grid.h
index 8b6bfd0c9e..0ea1453707 100644
--- include/widgets/wx_grid.h
+++ include/widgets/wx_grid.h
@@ -31,13 +31,14 @@
 #include <wx/event.h>
 #include <wx/grid.h>
 #include <wx/version.h>
+#include <kicommon.h>
 #include <units_provider.h>
 #include <libeval/numeric_evaluator.h>
 
 class wxTextEntryBase;
 
 
-class WX_GRID : public wxGrid
+class KICOMMON_API WX_GRID : public wxGrid
 {
 public:
     // Constructor has to be wxFormBuilder-compatible
-- 
2.46.1

From cb0fdbaf18ebb9a6aec075df1a561fe265158b29 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Sat, 28 Sep 2024 19:28:01 -0600
Subject: [PATCH 10/11] Move `EDA_ANGLE_VARIANT_DATA` into the `kicommon`
 dylib.

The `Eq()` static method `dynamic_cast`s its RHS to this type.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt                  | 2 +-
 include/properties/eda_angle_variant.h | 4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 9be03c0a0b..75ac156236 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -131,6 +131,7 @@ set( KICOMMON_SRCS
     database/database_lib_settings.cpp
 
     properties/color4d_variant.cpp
+    properties/eda_angle_variant.cpp
     properties/property_mgr.cpp
     properties/std_optional_variants.cpp
 
@@ -593,7 +594,6 @@ set( COMMON_SRCS
 
     settings/cvpcb_settings.cpp
 
-    properties/eda_angle_variant.cpp
     properties/pg_cell_renderer.cpp
     properties/pg_editors.cpp
     properties/pg_properties.cpp
diff --git include/properties/eda_angle_variant.h include/properties/eda_angle_variant.h
index 6b6273b728..0bd40d685b 100644
--- include/properties/eda_angle_variant.h
+++ include/properties/eda_angle_variant.h
@@ -20,11 +20,13 @@
 #ifndef KICAD_EDA_ANGLE_VARIANT_H
 #define KICAD_EDA_ANGLE_VARIANT_H
 
+#include <kicommon.h>
+
 #include <geometry/eda_angle.h>
 
 #include <wx/variant.h>
 
-class EDA_ANGLE_VARIANT_DATA : public wxVariantData
+class KICOMMON_API EDA_ANGLE_VARIANT_DATA : public wxVariantData
 {
 public:
     EDA_ANGLE_VARIANT_DATA();
-- 
2.46.1

From 37e810cfd9289eb4aa11c1d5df1a1d3b4c4d4372 Mon Sep 17 00:00:00 2001
From: Charles Davis <cdavis5x@gmail.com>
Date: Sat, 28 Sep 2024 19:32:03 -0600
Subject: [PATCH 11/11] Move `PRINTOUT_SETTINGS` into the `kicommon` dylib.

Any settings struct that is shared between modules needs to be here.

Signed-off-by: Charles Davis <cdavis5x@gmail.com>
---
 common/CMakeLists.txt | 2 +-
 include/printout.h    | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git common/CMakeLists.txt common/CMakeLists.txt
index 75ac156236..1f32047e15 100644
--- common/CMakeLists.txt
+++ common/CMakeLists.txt
@@ -170,6 +170,7 @@ set( KICOMMON_SRCS
     notifications_manager.cpp
     page_info.cpp
     paths.cpp
+    printout.cpp
     project.cpp
     render_settings.cpp
     richio.cpp
@@ -541,7 +542,6 @@ set( COMMON_SRCS
     lib_tree_model_adapter.cpp
     marker_base.cpp
     origin_transforms.cpp
-    printout.cpp
     ptree.cpp
     rc_item.cpp
     refdes_utils.cpp
diff --git include/printout.h include/printout.h
index cf8a61b38f..76b09774e0 100644
--- include/printout.h
+++ include/printout.h
@@ -20,6 +20,7 @@
 #ifndef PRINTOUT_H
 #define PRINTOUT_H
 
+#include <kicommon.h>
 #include <page_info.h>
 
 class APP_SETTINGS_BASE;
@@ -28,7 +29,7 @@ class COLOR_SETTINGS;
 /**
  * Handle the parameters used to print a board drawing.
  */
-struct PRINTOUT_SETTINGS
+struct KICOMMON_API PRINTOUT_SETTINGS
 {
     PRINTOUT_SETTINGS( const PAGE_INFO& aPageInfo )
         : m_pageInfo( aPageInfo )
-- 
2.46.1

