# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               cmake 1.1
PortGroup               github 1.0
PortGroup               mpi 1.0
PortGroup               qt5 1.0
PortGroup               boost 1.0
PortGroup               active_variants 1.1
PortGroup               legacysupport 1.1

# std::filesystem
legacysupport.newest_darwin_requires_legacy 18
legacysupport.use_mp_libcxx yes

github.setup            FreeCAD FreeCAD 0.21.2
github.tarball_from     archive
name                    freecad
categories              cad
maintainers             {gmail.com:mark.brethen @mbrethen} openmaintainer
license                 LGPL-2+

description \
    FreeCAD is a general purpose feature-based, parametric 3D modeler.

long_description \
    FreeCAD is a general purpose feature-based, parametric 3D modeler for \
    CAD, MCAD, CAx, CAE and PLM, aimed directly at mechanical engineering \
    and product design but also fits a wider range of uses in engineering, \
    such as architecture or other engineering specialties. It is 100% Open \
    Source (LGPL2+ license) and extremely modular, allowing for very \
    advanced extension and customization.

homepage                https://www.freecad.org

checksums               rmd160  865c701eb49ac36c5f73cd2686a760968d39b1cb \
                        sha256  ceaf77cd12e8ad533d1535cc27ae4ca2a6e80778502dc9cdec906415d674b674 \
                        size    66124278

boost.version           1.76
set python_branch       3.12
set python_version      [string map {. ""} ${python_branch}]
depends_lib-append      port:python${python_version}
require_active_variants [boost::depends_portname] python${python_version}
qt5.min_version         5.9
qt5.depends_component   qttools qtsvg qtwebengine qtxmlpatterns qtmacextras
require_active_variants vtk python${python_version}

depends_build-append    path:bin/doxygen:doxygen \
                        path:bin/dot:graphviz

depends_lib-append      port:Coin \
                        path:share/pkgconfig/eigen3.pc:eigen3 \
                        port:freetype \
                        port:gts \
                        port:hdf5 \
                        port:jsoncpp \
                        port:libfmt10 \
                        port:med-file \
                        port:onetbb \
                        port:opencascade \
                        port:orocos-kdl \
                        port:py${python_version}-matplotlib \
                        port:py${python_version}-pivy \
                        port:py${python_version}-ply \
                        port:py${python_version}-pybind11 \
                        port:py${python_version}-pycxx \
                        port:py${python_version}-pyside2 \
                        port:py${python_version}-yaml \
                        port:Quarter \
                        port:swig \
                        port:swig-python \
                        port:vtk \
                        port:webp \
                        port:xercesc3 \
                        port:zlib

use_xcode               yes

depends_run             port:qt5-sqlite-plugin

patchfiles              patch-cMake-FreeCAD_Helpers-SetupCoin3D.cmake.diff \
                        patch-cMake-FreeCAD_Helpers-SetupShibokenAndPyside.cmake.diff \
                        patch-src-3rdParty-salomesmesh-src-SMDS-SMDS_UnstructuredGrid.cpp.diff \
                        patch-src-App-FreeCADInit.py.diff \
                        patch-src-Main-MainPy.cpp.diff \
                        patch-CMakeLists.txt.diff

# see: https://trac.macports.org/ticket/60375
patchfiles-append       patch-src-Mod-Drawing-App-DrawingExport.cpp.diff \
                        patch-src-Mod-Part-App-Geometry2d.cpp.diff

# Needed for post-7.8 OpenCASCADE versions
patchfiles-append       patch-opencascade-new.diff
                        

post-patch {
    reinplace "s|QLibraryInfo::location.*|QLatin1String\(\"${applications_dir}/Qt5/\"\);|" \
        ${worksrcpath}/src/Gui/Assistant.cpp

    reinplace "s|/Applications|${applications_dir}|" \
        ${worksrcpath}/src/Mod/OpenSCAD/OpenSCADUtils.py
}

mpi.setup               require_fortran -g95
mpi.enforce_variant     hdf5 med-file
if {[mpi_variant_isset]} {
    patchfiles-append   patch-cMake-FreeCAD_Helpers-SetupSalomeSMESH.cmake.diff
}

# error: a space is required between consecutive right angle brackets (use '> >'
compiler.cxx_standard   2017

cmake.install_prefix    ${prefix}/libexec/${name}
cmake.install_rpath     ${cmake.install_prefix}/lib

configure.pre_args-replace \
                        -DCMAKE_INSTALL_NAME_DIR=${prefix}/lib \
                        -DCMAKE_INSTALL_NAME_DIR=${cmake.install_prefix}/lib

configure.args-append   -DCMAKE_INSTALL_DATADIR=${prefix}/share/${name} \
                        -DCMAKE_INSTALL_DOCDIR=${prefix}/share/doc/${name} \
                        -DMACPORTS_PREFIX=${prefix} \
                        -DPYSIDE2UICBINARY=${prefix}/bin/pyside2-uic-${python_branch} \
                        -DPYSIDE2RCCBINARY=${prefix}/bin/pyside2-rcc-${python_branch} \
                        -DFREECAD_USE_EXTERNAL_KDL=YES \
                        -DFREECAD_USE_PYBIND11=YES \
                        -Dfmt_DIR=${prefix}/lib/libfmt10/cmake/fmt \
                        -DBUILD_SMESH=1 \
                        -DBUILD_QT5=YES

if {${configure.ccache} ne "yes"} {
    configure.args-append \
                        -DFREECAD_USE_CCACHE=NO
}

# PySide2 and Coin use @rpath-relative dylibs, but the CMake files don't add
# the correct rpath (FIXME: Maybe this should be fixed in PySide2 and Coin??)
configure.ldflags-append \
                        "-Wl,-rpath,${prefix}/Library/Frameworks/Python.framework/Versions/${python_branch}/lib"
pre-configure {
    if {[active_variants Coin framework]} {
        configure.ldflags-append \
                        "-Wl,-rpath,${prefix}/Library/Frameworks"
    }
}

pre-configure {
    # The c++ compiler is used for linking instead of fc.
    # -L needs a path to a directory.

    set libgfortran [exec ${configure.fc} --print-file-name libgfortran.a]
    configure.ldflags-append "-L[file dirname ${libgfortran}]"

    if {[variant_isset oce]} {
        if {[active_variants oce tbb]} {
            configure.cxxflags-append "-I${prefix}/libexec/tbb/include"
            configure.ldflags-append "-L${prefix}/libexec/tbb/lib"
        }
    } else {
        configure.cxxflags-append "-I${prefix}/libexec/onetbb/include"
        configure.ldflags-append "-L${prefix}/libexec/onetbb/lib"
    }

    set python_prefix [exec ${prefix}/bin/python${python_branch}-config --prefix]
    configure.args-append -DBUILD_ROBOT=NO \
        -DPython3_LIBRARIES=${python_prefix}/Python \
        -DPython3_INCLUDE_DIRS=${python_prefix}/Headers \
        -DPython3_EXECUTABLE=${python_prefix}/bin/python${python_branch} \
        -DPYTHON_LIBRARY=${python_prefix}/Python \
        -DPYTHON_INCLUDE_DIR=${python_prefix}/Headers \
        -DPYTHON_EXECUTABLE=${python_prefix}/bin/python${python_branch} \
        -DShiboken2_ROOT=${python_prefix} \
        -DPySide2_ROOT=${python_prefix} \
        -DPYCXX_INCLUDE_DIR=${python_prefix}/Headers \
        -DPYCXX_SOURCE_DIR=${python_prefix}/CXX \
        -DCMAKE_POLICY_DEFAULT_CMP0074=NEW
    if {![variant_isset oce]} {
        configure.args-append -DOpenCASCADE_DIR=${prefix}/libexec/opencascade \
                              -DFREECAD_USE_OCC_VARIANT="Official Version" \
                              -DOCE_DIR="" \
                              -DOCE_FOUND:BOOL=NO
    }

}

post-destroot {
    # link the executables back
    ln -s ${prefix}/libexec/${name}/MacOS/FreeCAD \
        ${destroot}${prefix}/bin

    ln -s ${prefix}/libexec/${name}/MacOS/FreeCADCmd \
        ${destroot}${prefix}/bin

    # create stub App
    set appdir ${destroot}${applications_dir}/FreeCAD.app
    xinstall -d ${appdir}/Contents/MacOS
    xinstall -d ${appdir}/Contents/Resources

    xinstall -m 644 ${filespath}/Info.plist ${appdir}/Contents/
    xinstall -m 644 ${filespath}/FreeCAD.icns ${appdir}/Contents/Resources/
    xinstall -m 755 ${filespath}/FreeCAD ${appdir}/Contents/MacOS

    reinplace -W ${appdir}/Contents "s,@@VERSION@@,${version},g" Info.plist
    reinplace -W ${appdir}/Contents/MacOS "s,@@PREFIX@@,${prefix},g" FreeCAD
}

variant oce conflicts netgen description {Use the Community Edition version of OpenCASCADE} {
     depends_lib-replace port:opencascade port:oce
     depends_lib-delete  port:onetbb
     if {![catch {set result [active_variants oce tbb]}] && $result} {
         depends_lib-append  port:tbb
     }
     configure.args-append -DOCE_DIR=${prefix}/libexec/oce
}

variant netgen conflicts oce description {Use NETGEN with the FEM module} {
    depends_lib-append  port:netgen
    require_active_variants netgen "python${python_version} occ"
    configure.args-append \
                        -DBUILD_FEM_NETGEN=YES \
                        -DNETGEN_DIR=${prefix}/lib/cmake/netgen
}

variant pcl description {Use the Point Cloud Library with the ReverseEngineering module} {
    depends_lib-append  port:libpcl
    configure.args-append \
                        -DFREECAD_USE_PCL=YES \
                        -DPCL_DIR=${prefix}/share/pcl-1.14
}

variant designer description {Build and install the QtDesigner plugin} {
    configure.args-append \
                        -DBUILD_DESIGNER_PLUGIN=YES
}

variant cloud description {Build and install the Cloud module} {
    configure.args-append \
                        -DBUILD_CLOUD=YES
}

variant cloud_self_signed requires cloud description {Allow self-signed certificates in the Cloud module (CAUTION: possible security risk!)} {
    configure.args-append \
                        -DALLOW_SELF_SIGNED_CERTIFICATE=YES
}

github.livecheck.regex  {(\d\.\d+(\.\d+)?(?!_pre))}
