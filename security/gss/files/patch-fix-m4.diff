--- m4/wchar_t.m4.orig	2022-08-06 20:30:53.000000000 +0800
+++ m4/wchar_t.m4	2023-05-07 12:09:44.000000000 +0800
@@ -8,7 +8,7 @@
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GSS],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(

--- m4/wint_t.m4.orig	2022-08-06 20:30:53.000000000 +0800
+++ m4/wint_t.m4	2023-05-07 12:12:14.000000000 +0800
@@ -8,7 +8,7 @@
 dnl Test whether <wchar.h> has the 'wint_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GSS],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
--- m4/extern-inline.m4~	2022-08-06 06:30:53
+++ m4/extern-inline.m4	2024-09-09 04:10:54
@@ -39,16 +39,18 @@
    OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
    for clang but remains for g++; see <http://trac.macports.org/ticket/41033>.
    Assume DragonFly and FreeBSD will be similar.  */
-#if (((defined __APPLE__ && defined __MACH__) \
-      || defined __DragonFly__ || defined __FreeBSD__) \
-     && (defined __header_inline \
-         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
-            && ! defined __clang__) \
-         : ((! defined _DONT_USE_CTYPE_INLINE_ \
-             && (defined __GNUC__ || defined __cplusplus)) \
-            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
-                && defined __GNUC__ && ! defined __cplusplus))))
-# define _GL_EXTERN_INLINE_STDHEADER_BUG
+#if ((defined __APPLE__ && defined __MACH__) \
+     || defined __DragonFly__ || defined __FreeBSD__)
+# include <sys/cdefs.h>
+# if (defined __header_inline \
+      ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
+         && ! defined __clang__) \
+      : ((! defined _DONT_USE_CTYPE_INLINE_ \
+          && (defined __GNUC__ || defined __cplusplus)) \
+         || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
+             && defined __GNUC__ && ! defined __cplusplus)))
+#  define _GL_EXTERN_INLINE_STDHEADER_BUG
+# endif
 #endif
 #if ((__GNUC__ \
       ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
